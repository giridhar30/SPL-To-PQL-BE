Name,Definition
3cx_supply_chain_attack_network_indicators_filter,search *
7zip_commandline_to_smb_share_path_filter,search *
FMC-index,"(index=main OR index=estreamer) sourcetype=""cisco:estreamer:data"" OR sourcetype=""cisco:ftd:syslog:data"""
Load_Sample_Log_Data(1),"inputlookup [| inputlookup SampleDataList | search label=""$label$"" | rename lookup as search | table search]"
User_to_Index_Provisioning_From_Data_Governance_App,"rest splunk_server=local /services/authentication/users | eval roles=mvjoin(roles,"", "") | fields title, roles | rename title as username | makemv delim="", "" roles | mvexpand roles | rename roles as role | join max=1 overwrite=1 type=inner usetime=0 role [| rest splunk_server=local /services/authorization/roles | rename title as role | fillnull value="""" | fields role, srchIndexesAllowed] | fields username, srchIndexesAllowed | rex field=srchIndexesAllowed mode=sed ""s/\s/,/g"" | makemv delim="","" srchIndexesAllowed | mvcombine srchIndexesAllowed | mvcombine srchIndexesAllowed | rex field=srchIndexesAllowed mode=sed ""s/\s/,/g"" | makemv delim="","" srchIndexesAllowed | eventstats values(srchIndexesAllowed) AS didx by username | fields username, didx | mvcombine didx | rex field=didx mode=sed ""s/\s/, /g"" | rename didx as accessible_indexes | join max=1 overwrite=1 type=inner usetime=0 username [| rest splunk_server=local /services/authentication/users | eval roles=mvjoin(roles,"", "") | rename title as username | fields username, roles] | makemv delim="", "" accessible_indexes | mvexpand accessible_indexes | join max=1 overwrite=1 type=outer usetime=0 accessible_indexes [| rest /services/data/indexes | fields title | dedup title | where match(title,""^_\\w+$"") | mvcombine title | eval title=mvjoin(title,"", "") | rename title as expanded_indexes | eval accessible_indexes=""_*""] | join max=1 overwrite=1 type=outer usetime=0 accessible_indexes [| rest /services/data/indexes | fields title | dedup title | where match(title,""^[^_]+$"") | mvcombine title | eval title=mvjoin(title,"", "") | rename title as expanded_indexes | eval accessible_indexes=""*""] | eval accessible_indexes=if(match(accessible_indexes,""^(?:_\\*|\\*)$""),expanded_indexes,accessible_indexes) | fields - expanded_indexes | makemv delim="", "" accessible_indexes | mvexpand accessible_indexes"
abnormally_high_aws_instances_launched_by_user___mltk_filter,search *
abnormally_high_aws_instances_launched_by_user_filter,search *
abnormally_high_aws_instances_terminated_by_user___mltk_filter,search *
abnormally_high_aws_instances_terminated_by_user_filter,search *
abnormally_high_number_of_cloud_infrastructure_api_calls_filter,search *
abnormally_high_number_of_cloud_instances_destroyed_filter,search *
abnormally_high_number_of_cloud_instances_launched_filter,search *
abnormally_high_number_of_cloud_security_group_api_calls_filter,search *
access_apps,inputlookup append=T access_app_tracker
access_lsass_memory_for_dump_creation_filter,search *
access_tracker,inputlookup append=T access_tracker | `get_identity4events(user)` | `get_asset(dest)` | `get_identity4events(dest_owner)`
access_tracker(1),"inputlookup append=T access_tracker where `tracker_trp($timefield$,$timefield$)` | `get_identity4events(user)` | `get_asset(dest)` | `get_identity4events(dest_owner)`"
account_discovery_with_net_app_filter,search *
account_management,"tag=account (tag=management OR tag=lockout) | tags outputfield=tag | fillnull value=unknown signature,src,src_nt_domain,src_user,dest,dest_nt_domain,user"
active_directory_lateral_movement_identified_filter,search *
active_directory_privilege_escalation_identified_filter,search *
active_setup_registry_autostart_filter,search *
add_defaultuser_and_password_in_registry_filter,search *
add_dm_object_name(1),"rename * as ""$object$.*"""
add_entity_source(2),"inputlookup append=T ""$lookup$"" | fillnull value=""$name$"" _source"
add_events(1),sendalert add_events param.incident_id=$incident_id$
add_normalized_risk_object,"eval normalized_risk_object=case(ISNOTNULL(risk_object_asset), mvindex(risk_object_asset, 0), ISNOTNULL(risk_object_identity), mvindex(risk_object_identity, 0), TRUE(), risk_object).IF(ISNOTNULL(cim_entity_zone), ""_"".cim_entity_zone, """")"
add_or_set_windows_defender_exclusion_filter,search *
admon,source=ActiveDirectory
adsisearcher_account_discovery_filter,search *
alexa_lookup,`alexa_lookup(src)` | `alexa_lookup(dest)`
alexa_lookup(1),"lookup local=true alexa_lookup_by_str domain AS ""$infield$"" OUTPUTNEW rank AS ""$infield$_rank"""
all_default_account_usage(2),"`default_user_accounts` | eval ""$default_account$""=case(src_user_category==""default"",src_user,user_category==""default"",user,1=1,'$default_account$') | eval ""$default_account_system$""=case(src_user_category==""default"",src,user_category==""default"",dest,1=1,'$default_account_system$')"
all_threat_intel,`email_intel` | `file_intel` | `process_intel` | `registry_intel` | `service_intel` | `user_intel` | `http_intel` | `ip_intel` | `certificate_intel`
all_threat_intel_by_threat_key(1),`email_intel_by_threat_key($threat_key$)` | `file_intel_by_threat_key($threat_key$)` | `process_intel_by_threat_key($threat_key$)` | `registry_intel_by_threat_key($threat_key$)` | `service_intel_by_threat_key($threat_key$)` | `user_intel_by_threat_key($threat_key$)` | `http_intel_by_threat_key($threat_key$)` | `ip_intel_by_threat_key($threat_key$)` | `certificate_intel_by_threat_key($threat_key$)`
all_threat_intel_stats,"`all_threat_intel` | stats [| rest splunk_server=local count=0 /services/admin/macros search=""name=*_intel_stats NOT name=all_threat_intel_stats"" | `makemv(definition,"","")` | stats values(definition) as search | `makesv(search,"","")`] | addtotals fieldname=count | table count"
all_threat_intel_stats_by_threat_key,"`all_threat_intel` | stats [| rest splunk_server=local count=0 /services/admin/macros search=""name=*_intel_stats NOT name=all_threat_intel_stats"" | `makemv(definition,"","")` | stats values(definition) as search | `makesv(search,"","")`] by threat_key | addtotals fieldname=count | table threat_key,count"
allow_file_and_printing_sharing_in_firewall_filter,search *
allow_inbound_traffic_by_firewall_rule_registry_filter,search *
allow_inbound_traffic_in_firewall_rule_filter,search *
allow_network_discovery_in_firewall_filter,search *
allow_old_summaries_bool,TRUE
allow_operation_with_consent_admin_filter,search *
amazon_eks_kubernetes_cluster_scan_detection_filter,search *
amazon_eks_kubernetes_pod_scan_detection_filter,search *
amazon_security_lake,sourcetype=aws:asl
anomalous_usage_of_7zip_filter,search *
any_powershell_downloadfile_filter,search *
any_powershell_downloadstring_filter,search *
asl_aws_concurrent_sessions_from_different_ips_filter,search *
asl_aws_createaccesskey_filter,search *
asl_aws_defense_evasion_delete_cloudtrail_filter,search *
asl_aws_defense_evasion_delete_cloudwatch_log_group_filter,search *
asl_aws_defense_evasion_impair_security_services_filter,search *
asl_aws_excessive_security_scanning_filter,search *
asl_aws_iam_delete_policy_filter,search *
asl_aws_multi_factor_authentication_disabled_filter,search *
asl_aws_new_mfa_method_registered_for_user_filter,search *
asl_aws_password_policy_changes_filter,search *
asn_lookup,`asn_lookup(src)` | `asn_lookup(dest)`
asn_lookup(1),"lookup local=true asn_lookup_by_str ip AS ""$infield$"" OUTPUTNEW description AS ""$infield$_asn"" | lookup local=true asn_lookup_by_cidr ip AS ""$infield$"" OUTPUTNEW description AS ""$infield$_asn"""
asset_categories,"inputlookup append=T category_lookup WHERE category_source!=""identity"" | `lower(category)` | dedup category | sort + category | fields category"
asset_eventcount,"`assets` | join type=outer asset_id [| `host_eventcount` | `hourDiff` | rename host_asset_id as asset_id | fields asset_id,firstTime,lastTime,hourDiff,dayDiff]"
asset_fields,"asset,asset_tag,bunit,category,city,country,dns,ip,is_expected,lat,long,mac,nt_host,owner,pci_domain,priority,requires_av,should_timesync,should_update"
asset_search(1),"`get_subject(""dest"", $val$)` OR `get_subject(""dvc"", $val$)` OR `get_subject(""host"", $val$)` OR `get_subject(""orig_host"", $val$)` OR `get_subject(""src"", $val$)`"
asset_sources,inputlookup append=t Nexpose_CaptionCall_Asset_Lookup | inputlookup append=t ivanti_sorenson_asset_ctrl_lookup | inputlookup append=t ivanti_sorenson_assets_lookup
assets,"inputlookup append=T asset_lookup_by_str | inputlookup append=T asset_lookup_by_cidr | rename _key as asset_id,asset_tag as tag"
assets(1),"inputlookup append=T asset_lookup_by_str where $filters$ | inputlookup append=T asset_lookup_by_cidr where $filters$ | rename _key as asset_id, asset_tag as tag"
attacker_tools_on_endpoint_filter,search *
attempt_to_add_certificate_to_untrusted_store_filter,search *
attempt_to_stop_security_service_filter,search *
attempted_credential_dump_from_registry_via_reg_exe_filter,search *
audit_rexsearch,"rex ""search='(?<search>.*?)', autojoin"""
audit_searches,index=_audit sourcetype=audittrail action=search
audit_searchlocal,"`audit_searchlocal(""search_id!=rt_*"")`"
audit_searchlocal(1),"search index=_audit action=search (id=* OR search_id=*) | eval search_id = if(isnull(search_id), id, search_id) | replace '*' with * in search_id | search $filter$"
audittrail,index=_audit sourcetype=audittrail
authentication,"tag=authentication NOT (action=success user=*$) | tags outputfield=tag | fillnull value=unknown action,app,src,src_user,dest,user"
authentication(1),`authentication` | search action=$action$
auto_admin_logon_registry_entry_filter,search *
auto_update_context(5),"[ | xsgetcontextfields $context$ IN $container$ SCOPED $scope$ FIELDS search | return $search ] | `context_stats($field$, ""$classList$"")` | xsupdateDDcontext name=$context$ container=$container$ class=""$classList$"" scope=$scope$"
autopause,120
aws-account-index,index=summary sourcetype=aws:addon:account source=Splunk_TA_aws
aws-cloudtrail(2),`aws-index` $accountId$ $region$
aws-config-resources(3),"`aws-index` $accountId$ resourceType=""$resourceType$"" | dedup resourceId sortby -_time | where configurationItemStatus!=""ResourceDeleted"" | search $region$"
aws-index,index = `aws-index-value`
aws-index-value,aws_security
aws-input-index,index=summary sourcetype=aws:addon:input source=Splunk_TA_aws
aws-security-accesslog-sourcetype(1),"`aws-security-s3-index` sourcetype=""aws:$resource$:accesslogs"""
aws-security-account-summary,"sourcetype=""aws:addon:account"" | dedup host, account_id, name"
aws-security-addon-account-index,(index=summary)
aws-security-addon-input-index,(index=summary)
aws-security-cloudtrail(2),`aws-security-cloudtrail-sourcetype` $accountId$ $region$
aws-security-cloudtrail-index,"(index=""main"" OR `aws-security-s3-index`)"
aws-security-cloudtrail-service(2),"lookup aws_security_all_eventName eventName OUTPUT function | fillnull value=""N/A"" function | search function=""$service$"" | eval notable=if(match(eventName, ""(^Get*|^List*|^Describe*)""), 0, 1) | search notable=$notable$"
aws-security-cloudtrail-sourcetype,"`aws-security-cloudtrail-index` sourcetype=""aws:cloudtrail"""
aws-security-cloudwatch-logs-index,"(index=""main"")"
aws-security-config-index,"(index=""main"" OR `aws-security-s3-index`)"
aws-security-config-notification(2),`aws-security-config-notification-sourcetype` $accountId$ $region$
aws-security-config-notification-sourcetype,"`aws-security-config-index` sourcetype=""aws:config:notification"""
aws-security-config-resources(3),"`aws-security-config-sourcetype` $accountId$ resourceType=""$resourceType$"" | dedup resourceId sortby -_time | where configurationItemStatus!=""ResourceDeleted"" | search $region$"
aws-security-config-sourcetype,"`aws-security-config-index` sourcetype=""aws:config"""
aws-security-description(4),"`aws-security-description-sourcetype` $accountId$ $region$ source=""*:$resource$"" | eventstats latest(_time) as latest_time | eval latest_time=relative_time(latest_time,""-55m"") | where _time > latest_time | dedup $dedupfield$ sortby -_time"
aws-security-description-index,"(index=""main"")"
aws-security-description-resource(3),"`aws-security-description-sourcetype` $accountId$ $region$ source=""*:$resource$"" | eventstats latest(_time) as latest_time | eval latest_time=relative_time(latest_time,""-55m"") | where _time > latest_time | dedup id sortby -start_time"
aws-security-description-sourcetype,"`aws-security-description-index` sourcetype=""aws:description"""
aws-security-internal-index,"(index=""_internal"")"
aws-security-key-rotation-iam(1),"`aws-security-description(($accountId$), (""*""), ""iam_users"", ""Arn"")` | spath output=AccessKeys path=AccessKeys{} | eval AccessKeys=mvfilter(match(AccessKeys,"".*\""Status\"": \""Active\"",*"")) | fields account_id UserName AccessKeys | mvexpand AccessKeys | rex field=AccessKeys "".*CreateDate\"": \""(?<CreateDate>[^\""]*)"" | eval CreateDay=strptime(CreateDate, ""%FT%T""), diff_days=(now()-CreateDay)/86400 | where diff_days > 90 |fields account_id UserName CreateDate | mvcombine CreateDate | eval insight=""IAM access key rotation"""
aws-security-large-number-rules-sg(2),"`aws-security-description-resource(($accountId$), ($region$), ""ec2_security_groups"")` | spath output=inbound path=rules{}.grants{} | spath output=outbound path=rules_egress{}.grants{} | eval inbound_count=mvcount(inbound), outbound_count=mvcount(outbound), total_count = inbound_count+outbound_count | where (isnotnull(vpc_id) AND total_count > 50) OR (isnull(vpc_id) AND total_count > 100) | eval insight=""Large number of rules"""
aws-security-long-unused-iam(1),"`aws-security-description(($accountId$), (""*""), ""iam_users"", ""Arn"")` | spath output=AccessKeys path=AccessKeys{} | eval AccessKeys=mvfilter(match(AccessKeys,"".*\""Status\"": \""Active\"",*"")) | fields account_id UserName AccessKeys PasswordLastUsed | mvexpand AccessKeys | rex field=AccessKeys "".*LastUsedDate\"": \""(?<LastUsedDate>[^\""]*)"" | eval ak_used_day=strptime(LastUsedDate, ""%FT%T""), ps_used_day=strptime(PasswordLastUsed, ""%FT%T""), recent_used_day=max(ak_used_day,ps_used_day), diff_days=(now()-recent_used_day)/86400 | stats min(diff_days) as no_used_days by UserName, account_id | where no_used_days > 30 | eval insight=""User is unused for long time"""
aws-security-password-policy-iam(1),"`aws-security-description(($accountId$), (""*""), ""iam_users"", ""Arn"")` | dedup account_id | rename PasswordPolicy.AllowUsersToChangePassword as policy, PasswordPolicy.PasswordReusePrevention as reuse | where isnull(policy) OR isnull(reuse) | eval insight=if(isnull(policy), ""No password policy"", ""Password reuse is not prevented""), UserName=""Root Account"""
aws-security-pretty-print(1),"eval $field$=case(($field$>999999999 OR $field$<-999999999), tostring(round($field$/1000000000, 1))+""B"", ($field$>99999 OR $field$<-99999), tostring(round($field$/1000000, 1))+""M"", ($field$>999 OR $field$<-999), tostring(round($field$/1000, 1))+""K"", true(), $field$)"
aws-security-redundant-sg(2),"`aws-security-description-resource(($accountId$), ($region$), ""ec2_security_groups"")` | spath output=inbound path=rules{} | spath output=outbound path=rules_egress{} | rename inbound as rules | `aws-security-redundant-sg-helper` | stats values(parameter) as inbound, values(outbound) as rules by account_id, id, region, vpc_id | `aws-security-redundant-sg-helper` | stats values(parameter) as outbound, values(inbound) as inbound by account_id, id, region, vpc_id | eval inbound=mvsort(inbound), outbound=mvsort(outbound) | fields account_id, id, region, inbound, outbound, vpc_id | mvcombine id | eval id_count=mvcount(id), same_ids=id, id=mvindex(id,0) | where id_count > 1 | eval insight=""Redundant security groups"""
aws-security-redundant-sg-helper,"mvexpand rules | rex field=rules "".*\[{(?<grants>[^\]]+).*"" | eval grants_len=len(grants), grants=substr(grants,1,grants_len-2), grants=split(grants, ""}, {""), grants=mvsort(grants), grants=mvjoin(grants, "",""), parameter=replace(rules, "", \""grants\"".*]"", """") + grants"
aws-security-s3-index,"(index=""main"")"
aws-security-sourcetype-index-summary,"sourcetype=""aws:addon:input"" earliest=-1d | dedup input_sourcetype, input_index | table input_sourcetype, input_index"
aws-security-specific-ports-unrestricted-sg(2),"`aws-security-description-resource(($accountId$), ($region$), ""ec2_security_groups"")` | spath output=inbound path=rules{} | mvexpand inbound | regex inbound="".*cidr_ip\"": \""0.0.0.0/0.*"" | rex field=inbound "".*to_port\"": [\""]*(?<to_port>[^\"",}]*).*"" |rex field=inbound "".*from_port\"": [\""]*(?<from_port>[^\"",}]*).*"" | fields account_id, region, id, vpc_id, to_port, from_port | where [| inputlookup aws_security_sg_ports | search risk=""high"" | eval searchstr=""from_port<="".port."" AND to_port>="".port | return 100 $searchstr] | eval insight=""Unrestricted access on specific ports"", port=if(from_port=to_port, from_port, from_port."" - "".to_port) | fields - to_port, from_port | mvcombine port"
aws-security-unrestricted-access-sg(2),"`aws-security-description-resource(($accountId$), ($region$), ""ec2_security_groups"")` | spath output=inbound path=rules{} | mvexpand inbound | regex inbound="".*cidr_ip\"": \""0.0.0.0/0.*"" | rex field=inbound "".*to_port\"": [\""]*(?<to_port>[^\"",}]*).*"" |rex field=inbound "".*from_port\"": [\""]*(?<from_port>[^\"",}]*).*"" | fields account_id, region, id, vpc_id, to_port, from_port | where NOT ( [| inputlookup aws_security_sg_ports | eval searchstr=""from_port="".port."" AND to_port="".port | return 100 $searchstr] ) | eval insight=""Unrestricted access"", port=if(from_port=to_port, from_port, from_port."" ~ "".to_port) | fields - to_port, from_port | mvcombine port"
aws-security-unused-sg(2),"`aws-security-description-resource(($accountId$), ($region$), ""ec2_security_groups"")` | spath output=instances path=instances{}.id | eval instances_count=mvcount(instances) | where isnull(instances_count) | eval insight=""Unused security group"" | fields account_id, region, name, id, vpc_id, insight"
aws-security-vpc-flow(4),`aws-security-vpc-flow-sourcetype` $accountId$ $interfaces$ vpcflow_action=$vpcflow_action$ protocol=$protocol$
aws-security-vpc-flow-log-index,"index=""aws_vpc_flow_logs"""
aws-security-vpc-flow-sourcetype,"`aws-security-cloudwatch-logs-index` sourcetype=""aws:cloudwatchlogs:vpcflow"""
aws_ami_atttribute_modification_for_exfiltration_filter,search *
aws_cloud_provisioning_from_previously_unseen_city_filter,search *
aws_cloud_provisioning_from_previously_unseen_country_filter,search *
aws_cloud_provisioning_from_previously_unseen_ip_address_filter,search *
aws_cloud_provisioning_from_previously_unseen_region_filter,search *
aws_cloudwatchlogs_eks,"sourcetype=""aws:cloudwatchlogs:eks"""
aws_concurrent_sessions_from_different_ips_filter,search *
aws_config,sourcetype=aws:config
aws_console_login_failed_during_mfa_challenge_filter,search *
aws_create_policy_version_to_allow_all_resources_filter,search *
aws_createaccesskey_filter,search *
aws_createloginprofile_filter,search *
aws_credential_access_failed_login_filter,search *
aws_credential_access_getpassworddata_filter,search *
aws_credential_access_rds_password_reset_filter,search *
aws_cross_account_activity_from_previously_unseen_account_filter,search *
aws_defense_evasion_delete_cloudtrail_filter,search *
aws_defense_evasion_delete_cloudwatch_log_group_filter,search *
aws_defense_evasion_impair_security_services_filter,search *
aws_defense_evasion_putbucketlifecycle_filter,search *
aws_defense_evasion_stop_logging_cloudtrail_filter,search *
aws_defense_evasion_update_cloudtrail_filter,search *
aws_description,"sourcetype=""aws:description"""
aws_detect_attach_to_role_policy_filter,search *
aws_detect_permanent_key_creation_filter,search *
aws_detect_role_creation_filter,search *
aws_detect_sts_assume_role_abuse_filter,search *
aws_detect_sts_get_session_token_abuse_filter,search *
aws_detect_users_creating_keys_with_encrypt_policy_without_mfa_filter,search *
aws_detect_users_with_kms_keys_performing_encryption_s3_filter,search *
aws_disable_bucket_versioning_filter,search *
aws_ec2_snapshot_shared_externally_filter,search *
aws_ecr_container_scanning_findings_high_filter,search *
aws_ecr_container_scanning_findings_low_informational_unknown_filter,search *
aws_ecr_container_scanning_findings_medium_filter,search *
aws_ecr_container_upload_outside_business_hours_filter,search *
aws_ecr_container_upload_unknown_user_filter,search *
aws_ecr_users,userName IN (user)
aws_eks_kubernetes_cluster_sensitive_object_access_filter,search *
aws_excessive_security_scanning_filter,search *
aws_exfiltration_via_anomalous_getobject_api_activity_filter,search *
aws_exfiltration_via_batch_service_filter,search *
aws_exfiltration_via_bucket_replication_filter,search *
aws_exfiltration_via_datasync_task_filter,search *
aws_exfiltration_via_ec2_snapshot_filter,search *
aws_high_number_of_failed_authentications_for_user_filter,search *
aws_high_number_of_failed_authentications_from_ip_filter,search *
aws_iam_accessdenied_discovery_events_filter,search *
aws_iam_assume_role_policy_brute_force_filter,search *
aws_iam_delete_policy_filter,search *
aws_iam_failure_group_deletion_filter,search *
aws_iam_successful_group_deletion_filter,search *
aws_lambda_updatefunctioncode_filter,search *
aws_multi_factor_authentication_disabled_filter,search *
aws_multiple_failed_mfa_requests_for_user_filter,search *
aws_multiple_users_failing_to_authenticate_from_ip_filter,search *
aws_network_access_control_list_created_with_all_open_ports_filter,search *
aws_network_access_control_list_deleted_filter,search *
aws_new_mfa_method_registered_for_user_filter,search *
aws_password_policy_changes_filter,search *
aws_s3_accesslogs,sourcetype=aws:s3:accesslogs
aws_s3_exfiltration_behavior_identified_filter,search *
aws_saml_access_by_provider_user_and_principal_filter,search *
aws_saml_update_identity_provider_filter,search *
aws_securityhub_finding,"sourcetype=""aws:securityhub:finding"""
aws_securityhub_firehose,"sourcetype=""aws:securityhub:firehose"""
aws_setdefaultpolicyversion_filter,search *
aws_successful_console_authentication_from_multiple_ips_filter,search *
aws_successful_single_factor_authentication_filter,search *
aws_unusual_number_of_failed_authentications_from_ip_filter,search *
aws_updateloginprofile_filter,search *
azure_active_directory_high_risk_sign_in_filter,search *
azure_ad_application_administrator_role_assigned_filter,search *
azure_ad_authentication_failed_during_mfa_challenge_filter,search *
azure_ad_concurrent_sessions_from_different_ips_filter,search *
azure_ad_external_guest_user_invited_filter,search *
azure_ad_global_administrator_role_assigned_filter,search *
azure_ad_high_number_of_failed_authentications_for_user_filter,search *
azure_ad_high_number_of_failed_authentications_from_ip_filter,search *
azure_ad_multi_factor_authentication_disabled_filter,search *
azure_ad_multiple_failed_mfa_requests_for_user_filter,search *
azure_ad_multiple_users_failing_to_authenticate_from_ip_filter,search *
azure_ad_new_custom_domain_added_filter,search *
azure_ad_new_federated_domain_added_filter,search *
azure_ad_new_mfa_method_registered_for_user_filter,search *
azure_ad_pim_role_assigned_filter,search *
azure_ad_pim_role_assignment_activated_filter,search *
azure_ad_privileged_authentication_administrator_role_assigned_filter,search *
azure_ad_privileged_role_assigned_filter,search *
azure_ad_privileged_role_assigned_to_service_principal_filter,search *
azure_ad_service_principal_created_filter,search *
azure_ad_service_principal_new_client_credentials_filter,search *
azure_ad_service_principal_owner_added_filter,search *
azure_ad_successful_authentication_from_different_ips_filter,search *
azure_ad_successful_powershell_authentication_filter,search *
azure_ad_successful_single_factor_authentication_filter,search *
azure_ad_unusual_number_of_failed_authentications_from_ip_filter,search *
azure_ad_user_enabled_and_password_reset_filter,search *
azure_ad_user_immutableid_attribute_updated_filter,search *
azure_audit,sourcetype=mscs:azure:audit
azure_automation_account_created_filter,search *
azure_automation_runbook_created_filter,search *
azure_runbook_webhook_created_filter,search *
azuread,sourcetype=mscs:azure:eventhub
batch_file_write_to_system32_filter,search *
bcdedit_command_back_to_normal_mode_boot_filter,search *
bcdedit_failure_recovery_modification_filter,search *
bilinearInterpolateColorGradient(7),"| eval _x = $x$ | eval _y = $y$ | eval _col00 = $col00$ | eval _colX0 = $colX0$ | eval _col0Y = $col0Y$ | eval _colXY = $colXY$ `interpolateColor(_col00, _colX0, _x, ""_outcolorB"")` `interpolateColor(_col0Y, _colXY, _x, ""_outcolorT"")` `interpolateColor(_outcolorB, _outcolorT, _y, ""_outcolor"")` | eval $outcolorfieldname$ = _outcolor"
bits_job_persistence_filter,search *
bitsadmin_download_file_filter,search *
bogonlist_lookup,`bogonlist_lookup(src)` | `bogonlist_lookup(dest)`
bogonlist_lookup(1),"lookup local=true bogonlist_lookup_by_cidr ip AS ""$infield$"" OUTPUTNEW is_bogon AS ""$infield$_is_bogon"",is_internal AS ""$infield$_is_internal"""
bogonlist_src_dest_subsearch(1),"[| inputlookup bogonlist_lookup_by_cidr where NOT is_internal=""true"" | eval ""$lineage$.src""=ip, ""$lineage$.dest""=ip | fields ""$lineage$.src"" ""$lineage$.dest"" | format """" """" ""OR"" """" ""OR"" """"]"
bootloader_inventory,sourcetype = PwSh:bootloader
boxplot,"untable _x field_name value | stats min exactperc25 median exactperc75 max by field_name | untable field_name calculations value | xyseries calculations field_name value | eval calculations = rtrim(calculations, ""(value)"")"
brand_abuse_dns,lookup update=true brandMonitoring_lookup domain as query OUTPUT domain_abuse | search domain_abuse=true
brand_abuse_email,lookup update=true brandMonitoring_lookup domain as src_user OUTPUT domain_abuse | search domain_abuse=true
brand_abuse_web,lookup update=true brandMonitoring_lookup domain as urls OUTPUT domain_abuse | search domain_abuse=true
by_token,"BY """""
by_token(1),"if(isnotnull(classList) and len(classList) > 0, ""by "" . classList, """")"
bytes2gbytes(1),"`bytes2gbytes($field$,$field$)`"
bytes2gbytes(2),"eval ""$outField$""='$inField$'/1073741824"
bytes2kbytes(1),"`bytes2kbytes($field$,$field$)`"
bytes2kbytes(2),"eval ""$outField$""='$inField$'/1024"
bytes2mbytes(1),"`bytes2mbytes($field$,$field$)`"
bytes2mbytes(2),"eval ""$outField$""='$inField$'/1048576"
cam_action_modes,inputlookup append=T cam_action_mode_lookup | eval action_mode=lower(action_mode) | dedup action_mode | sort + action_mode
cam_action_statuses,inputlookup append=T cam_action_status_lookup | eval action_status=lower(action_status) | dedup action_status | sort + action_status
cam_categories,inputlookup append=T cam_category_lookup | dedup category | sort + category
cam_subjects,inputlookup append=T cam_subject_lookup | eval subject=lower(subject) | dedup subject | sort + subject
cam_tasks,inputlookup append=T cam_task_lookup | eval task=lower(task) | dedup task | sort + task
cam_workers,"inputlookup append=T cam_worker_lookup | append[| makeresults | eval worker_set=""local"",cam_workers=""[\""local\""]""] | dedup worker_set | spath input=cam_workers | where isnotnull('{}') | table worker_set,cam_workers | sort + worker_set"
capi2_operational,(source=XmlWinEventLog:Microsoft-Windows-CAPI2/Operational)
categories,inputlookup append=T category_lookup | `lower(category)` | dedup category | sort + category | fields category
certificate_intel,`certificate_intel_by_threat_key(*)`
certificate_intel_by_threat_key(1),"inputlookup append=T certificate_intel where threat_key=""$threat_key$"" | fillnull value=0 updated,disabled | `set_threat_collection_name(""certificate_intel"")` | mvexpand certificate_serial | `get_threat_attribution_weight(threat_key)`"
certificate_intel_stats,"dc(certificate_serial),dc(certificate_issuer_common_name),dc(certificate_issuer_email),dc(certificate_issuer_organization),dc(certificate_issuer_unit),dc(certificate_subject_common_name),dc(certificate_subject_email),dc(certificate_subject_organization),dc(certificate_subject_unit),dc(certificate_file_hash),dc(ip),dc(domain)"
certificate_tracker,inputlookup append=T certificate_tracker
certificateservices_lifecycle,(source=XmlWinEventLog:Microsoft-Windows-CertificateServicesClient-Lifecycle-System/Operational OR source=XmlWinEventLog:Microsoft-Windows-CertificateServicesClient-Lifecycle-User/Operational)
certutil_download_with_urlcache_and_split_arguments_filter,search *
certutil_download_with_verifyctl_and_split_arguments_filter,search *
certutil_exe_certificate_extraction_filter,search *
certutil_with_decode_argument_filter,search *
change_default_file_association_filter,search *
change_to_safe_mode_with_network_config_filter,search *
chcp_command_execution_filter,search *
check_elevated_cmd_using_whoami_filter,search *
child_processes_of_spoolsv_exe_filter,search *
cim_Alerts_indexes,(index=cc_firewall OR index=cc_msad OR index=cc_network OR index=cc_perfmon OR index=cc_wineventlog OR index=msad OR index=firewall OR index=network OR index=perfmon OR index=wineventlog OR index=cc_ise)
cim_Application_State_indexes,(index=cc_firewall OR index=cc_msad OR index=cc_network OR index=cc_perfmon OR index=cc_wineventlog OR index=cc_ise)
cim_Authentication_indexes,(index=wineventlog OR index=cc_wineventlog OR index=nix OR index=cc_nix OR index=office365 OR index=cc_office365 OR index=azure OR index=azuread OR index=cc_azure OR index=cc_azuread OR index=network OR index=ise OR index=cc_ise OR index=velocloud OR index=indeo_azuread OR index=indeo_office365 OR index=ping)
cim_Certificates_indexes,(index=cc_firewall OR index=cc_msad OR index=cc_network OR index=cc_perfmon OR index=cc_wineventlog)
cim_Change_Analysis_indexes,(index=cc_firewall OR index=cc_msad OR index=cc_network OR index=cc_perfmon OR index=cc_wineventlog OR index=office365 OR index=cc_office365 OR index=azuread OR index=azure OR index=cc_azuread OR index=cc_azure OR index=firewall OR index=msad OR index=network OR index=cc_ise OR index=indeo_azuread OR index=indeo_office365)
cim_Change_indexes,(index=wineventlog OR index=cc_wineventlog OR index=cc_network OR index=nix OR index=cc_nix OR index=azure OR index=azuread OR index=cc_azuread OR index=cc_azure OR index=cc_office365 OR index=office365 OR index=network OR index=cc_ise)
cim_Compute_Inventory_indexes,(index=cc_perfmon OR index= perfmon OR index= ivanti OR index= cc_ivanti)
cim_DLP_indexes,(index=cc_firewall OR index=cc_msad OR index=cc_network OR index=cc_perfmon OR index=cc_wineventlog)
cim_Data_Access_indexes,()
cim_Databases_indexes,(index=cc_firewall OR index=cc_msad OR index=cc_network OR index=cc_perfmon OR index=cc_wineventlog)
cim_Email_indexes,(index=cc_firewall OR index=cc_msad OR index=cc_network OR index=cc_perfmon OR index=cc_wineventlog)
cim_Endpoint_indexes,(index=wineventlog OR index=cc_wineventlog OR index=nix OR index=cc_nix OR index=perfmon OR index=cc_perfmon OR index=azure OR index=azuread OR index=cc_azure OR index=cc_azuread OR index=cc_office365 OR index=office365)
cim_Event_Signatures_indexes,()
cim_Interprocess_Messaging_indexes,(index=cc_firewall OR index=cc_msad OR index=cc_network OR index=cc_perfmon OR index=cc_wineventlog)
cim_Intrusion_Detection_indexes,(index=slc_symantec OR index=cc_symantec OR index=cc_firewall OR index=cc_network OR index=f5 OR index=firewall OR index=network)
cim_JVM_indexes,(index=cc_firewall OR index=cc_msad OR index=cc_network OR index=cc_perfmon OR index=cc_wineventlog)
cim_Malware_indexes,(index=slc_symantec OR index=cc_symantec OR index=cisco_amp OR index=cc_amp OR index= sentinelone)
cim_Network_Resolution_indexes,(index=cc_firewall OR index=cc_msad OR index=cc_network OR index=cc_perfmon OR index=cc_wineventlog OR index=cc_ise)
cim_Network_Sessions_indexes,(index=cc_firewall OR index=f5 OR index=infoblox OR index=firewall OR index=network OR index=cc_ise)
cim_Network_Traffic_indexes,(index=firewall OR index=cc_firewall OR index=f5 OR index=cc_network OR index=network OR index=cc_ise)
cim_Performance_indexes,(index=cc_firewall OR index=cc_msad OR index=cc_network OR index=cc_perfmon OR index=cc_wineventlog OR index=cc_ise OR index=perfmon)
cim_Ticket_Management_indexes,(index=cc_firewall OR index=cc_msad OR index=cc_network OR index=cc_perfmon OR index=cc_wineventlog)
cim_Updates_indexes,(index=cc_wineventlog OR index= wineventlog)
cim_Vulnerabilities_indexes,(index=rapid7 OR index=cc_rapid7 OR index=nessus OR index=cc_ivanti)
cim_Web_indexes,(index=umbrella OR index=cc_umbrella)
cim_access_actions,inputlookup append=T cim_access_action_lookup | eval action=lower(action) | dedup action
cim_corporate_email_domain_search(1),[| `cim_corporate_email_domains` | rename domain as $field$ | format | fields search]
cim_corporate_email_domains,inputlookup append=T cim_corporate_email_domain_lookup
cim_corporate_web_domain_search(1),[| `cim_corporate_web_domains` | rename domain as $field$ | format | fields search]
cim_corporate_web_domains,inputlookup append=T cim_corporate_web_domain_lookup
cim_datamodelinfo,"rest /services/admin/summarization by_tstats=t splunk_server=local count=0 | eval key=replace('title',""tstats:DM_"".'eai:acl.app'.""_"",""""),datamodel=replace('summary.id',""DM_"".'eai:acl.app'.""_"","""") | join type=left key [| rest /services/data/models splunk_server=local count=0 | table title acceleration.cron_schedule eai:digest | rename title as key | rename acceleration.cron_schedule AS cron] | table datamodel eai:acl.app summary.access_time summary.is_inprogress summary.size summary.latest_time summary.complete summary.buckets_size summary.buckets cron summary.last_error summary.time_range summary.id summary.mod_time eai:digest summary.earliest_time summary.last_sid summary.access_count | rename summary.id AS summary_id, summary.time_range AS retention, summary.earliest_time as earliest, summary.latest_time as latest, eai:digest as digest | rename summary.* AS *, eai:acl.* AS * | sort datamodel"
cim_dlp_actions,inputlookup append=T cim_dlp_action_lookup | eval action=lower(action) | dedup action | sort + action
cim_dlp_object_categories,inputlookup append=T cim_dlp_object_category_lookup | eval object_category=lower(object_category) | dedup object_category | sort + object_category
cim_dlp_types,inputlookup append=T cim_dlp_type_lookup | eval dlp_type=lower(dlp_type) | dedup dlp_type | sort + dlp_type
cim_dns_reply_codes,inputlookup append=T cim_dns_reply_code_lookup | dedup reply_code | sort + reply_code
cim_email_protocols,inputlookup append=T cim_email_protocol_lookup | sort + protocol
cim_endpoint_actions,inputlookup append=T cim_endpoint_action_lookup | eval action=lower(action) | dedup action | sort + action
cim_endpoint_object_categories,inputlookup append=T cim_endpoint_object_category_lookup | eval object_category=lower(object_category) | dedup object_category | sort + object_category
cim_endpoint_severities,inputlookup append=T cim_endpoint_severity_lookup | eval severity=lower(severity) | dedup severity
cim_endpoint_statuses,inputlookup append=T cim_endpoint_status_lookup | eval status=lower(status) | dedup status | sort + status
cim_endpoint_user_types,inputlookup append=T cim_endpoint_user_type_lookup | eval user_type=lower(user_type) | dedup user_type | sort + user_type
cim_filter_known_scanners,"NOT (host_category=""known_scanner"" OR orig_host_category=""known_scanner"" OR dvc_category=""known_scanner"" OR src_category=""known_scanner"" OR dest_category=""known_scanner"")"
cim_filter_known_scanners(1),"NOT ($object$.host_category=""known_scanner"" OR $object$.orig_host_category=""known_scanner"" OR $object$.dvc_category=""known_scanner"" OR $object$.src_category=""known_scanner"" OR $object$.dest_category=""known_scanner"")"
cim_filter_unknown_values(1),"($field$!=""-"" $field$!=""n/a"" $field$!=""unknown"")"
cim_filter_vuln_severity,"(severity!=""informational"" AND severity!=""low"")"
cim_filter_vuln_severity(1),"($object$.severity!=""informational"" AND $object$.severity!=""low"")"
cim_http_methods,inputlookup append=T cim_http_method_lookup | eval http_method=lower(http_method) | dedup http_method
cim_http_statuses,inputlookup append=T cim_http_status_lookup
cim_ids_severities,inputlookup append=T cim_ids_severity_lookup | eval severity=lower(severity) | dedup severity
cim_ids_types,inputlookup append=T cim_ids_type_lookup | eval ids_type=lower(ids_type) | dedup ids_type | sort + ids_type
cim_malware_actions,inputlookup append=T cim_malware_action_lookup | eval action=lower(action) | dedup action | sort + action
cim_traffic_actions,inputlookup append=T cim_traffic_action_lookup | eval action=lower(action) | dedup action | sort + action
cim_transport_protocols,inputlookup append=T cim_transport_protocol_lookup | eval transport=lower(transport) | dedup transport | sort + transport
cim_update_statii,inputlookup append=T cim_update_status_lookup | eval status=lower(status) | dedup status | sort + status
cim_vendor_product_tracker,inputlookup append=T cim_vendor_product_tracker
cim_vuln_severities,inputlookup append=T cim_vuln_severity_lookup | eval severity=lower(severity) | dedup severity
circle_ci_disable_security_job_filter,search *
circle_ci_disable_security_step_filter,search *
circleci,sourcetype=circleci
cisco_networks,eventtype=cisco_ios
classificationreport(2),"rename ""$a$"" as actual, ""$p$"" as predicted | stats count by actual predicted | xyseries actual predicted count | fillnull | untable actual predicted count | stats sum(eval(if(actual == predicted, count, 0))) as t sum(eval(if(actual != predicted, count, 0))) as f by actual predicted | eventstats sum(eval(if(actual==predicted, t, 0))) as tp sum(eval(if(actual!=predicted, f, 0))) as fn by actual | eventstats sum(eval(if(actual!=predicted, f, 0))) as fp by predicted | eval count=if(actual==predicted,t,f), fp=if(actual==predicted, fp, 0), fn=if(actual==predicted, fn,0), tp=if(actual==predicted, tp, 0) | stats sum(count) as count sum(t) as t sum(f) as f sum(tp) as tp sum(fn) as fn sum(fp) as fp by actual | eventstats sum(count) as total | eval precision=tp/(tp+fp) | eval recall=tp/(tp+fn) | eval f1=2*precision*recall/(precision+recall) | eval accuracy=t/count | fillnull | appendpipe [ stats sum(count) as count sum(eval(accuracy*count/total)) as accuracy sum(eval(precision*count/total)) as precision sum(eval(recall*count/total)) as recall sum(eval(f1*count/total)) as f1 | eval actual=""Weighted Average"" ] | rename actual as class | table class accuracy precision recall f1 count"
classificationstatistics(2),"`classificationreport(""$a$"", ""$p$"")` | tail 1 | eval precision=round(precision, 2), recall=round(recall, 2), accuracy=round(accuracy, 2), f1=round(f1, 2)"
clear_unallocated_sector_using_cipher_app_filter,search *
clients_connecting_to_multiple_dns_servers_filter,search *
clop_common_exec_parameter_filter,search *
clop_ransomware_known_service_name_filter,search *
cloud_api_calls_from_previously_unseen_user_roles_activity_window,"""-70m@m"""
cloud_api_calls_from_previously_unseen_user_roles_filter,search *
cloud_compute_instance_created_by_previously_unseen_user_filter,search *
cloud_compute_instance_created_in_previously_unused_region_filter,search *
cloud_compute_instance_created_with_previously_unseen_image_filter,search *
cloud_compute_instance_created_with_previously_unseen_instance_type_filter,search *
cloud_domain_search(1),[| `cloud_domains` | rename domain as $field$ | fields $field$ | format | fields search]
cloud_domains,inputlookup append=T cim_cloud_domain_lookup
cloud_email_search(1),[| `cloud_domains` | search is_email=true | rename domain as $field$ | fields $field$ | format | fields search]
cloud_instance_modified_by_previously_unseen_user_filter,search *
cloud_network_access_control_list_deleted_filter,search *
cloud_provisioning_activity_from_previously_unseen_city_filter,search *
cloud_provisioning_activity_from_previously_unseen_country_filter,search *
cloud_provisioning_activity_from_previously_unseen_ip_address_filter,search *
cloud_provisioning_activity_from_previously_unseen_region_filter,search *
cloud_storage_search(1),[| `cloud_domains` | search is_storage=true | rename domain as $field$ | fields $field$ | format | fields search]
cloudtrail,sourcetype=aws:cloudtrail
cloudtrail_service(2),"lookup aws_all_eventNames eventName OUTPUT function | fillnull value=""N/A"" function | search function=""$service$"" | eval notable=if(match(eventName, ""(^Get*|^List*|^Describe*)""), 0, 1) | search notable=$notable$"
cloudwatch_eks,"sourcetype=""aws:cloudwatchlogs:eks"""
cloudwatch_vpc,sourcetype=aws:cloudwatchlogs:vpcflow
cloudwatchlogs_vpcflow,sourcetype=aws:cloudwatchlogs:vpcflow
cmd_carry_out_string_command_parameter_filter,search *
cmd_echo_pipe___escalation_filter,search *
cmdline_tool_not_executed_in_cmd_shell_filter,search *
cmlua_or_cmstplua_uac_bypass_filter,search *
cobalt_strike_named_pipes_filter,search *
comment(1),""""""
comment(1),""""""
common_ransomware_extensions_filter,search *
common_ransomware_notes_filter,search *
communicate,"tag=network tag=communicate | tags outputfield=tag | fillnull value=unknown action,dvc,rule,transport,src,dest | `lower(transport)` | fillnull value=0 bytes_in,bytes_out,src_port,dest_port | eval bytes=if(isnull(bytes),bytes_in+bytes_out,bytes) | `get_vendor_product`"
communicate(1),action=$action$ `communicate`
communication_rule_tracker,inputlookup append=T communication_rule_tracker | `get_asset(dvc)` | `get_identity4events(dvc_owner)`
compute-ingestion-stats,"eval temp=1/300.0, event_size=len(_raw) | eval event_size_temp=len(_raw)/300.0 | stats sparkline(sum(temp), 5m) as ""Events per second"", sparkline(sum(event_size_temp), 5m) as ""Event throughput (kbps)"", sum(event_size) as TotalBytes, sum(temp) as tempsum by sourcetype | eval ""Total MB""=round(TotalBytes/1024.0/1024.0,2) | addinfo | eval APS=tempsum/(info_max_time-info_min_time) | eval ""Average events per second""=round(APS*300.0,2) | fields sourcetype ""Events per second"" ""Event throughput (kbps)"" ""Average events per second"" ""Total MB"""
confluence_unauthenticated_remote_code_execution_cve_2022_26134_filter,search *
confusionmatrix(2),"rename ""$a$"" as actual, ""$p$"" as predicted | stats count by actual predicted | appendpipe [ eval predicted=actual, count=0 ] | stats sum(count) as count by actual predicted | xyseries actual predicted count | rename * as ""Predicted *"" | rename ""Predicted $a$"" as ""Actual $a$"" | fillnull value=0"
construct_rooted_acyclic_directed_subgraph(3),"where source=$root_node$ | eval depth=0 `construct_rooted_acyclic_directed_subgraph_helper($directed_graph_lookup$, 1, $max_depth$)` | dedup source destination | table depth source destination"
construct_rooted_acyclic_directed_subgraph_helper(3),"""| appendpipe [| where depth="".($depth$-1)."" | lookup $directed_graph_lookup$ source as destination OUTPUT source destination | where !isnull(source) | mvexpand destination | eval source=mvindex(source, 0) | eval depth=$depth$ ]"". if($depth$<$max_depth$,""`construct_rooted_acyclic_directed_subgraph_helper($directed_graph_lookup$, "".($depth$+1)."", $max_depth$)`"","""")"
content_length_appendcol,"appendcols [| rest splunk_server=local count=0 /services/configs/conf-server/httpServer | table max_content_length] | filldown max_content_length | fillnull value=""2147483648"" max_content_length"
context_stats(2),"stats count($field$) as count min($field$) as min max($field$) as max avg($field$) as avg median($field$) as median stdev($field$) as size `by_token(""$classList$"")`"
conti_common_exec_parameter_filter,search *
control_loading_from_world_writable_directory_filter,search *
convert_k8s_resource_to_megabytes(1),"eval $field_name$=case( like($field_name$, ""%Ei""), tonumber(replace($field_name$, ""Ei"", """")) * pow(1024, 6) / pow(1000, 2), like($field_name$, ""%Pi""), tonumber(replace($field_name$, ""Pi"", """")) * pow(1024, 5) / pow(1000, 2), like($field_name$, ""%Ti""), tonumber(replace($field_name$, ""Ti"", """")) * pow(1024, 4) / pow(1000, 2), like($field_name$, ""%Gi""), tonumber(replace($field_name$, ""Gi"", """")) * pow(1024, 3) / pow(1000, 2), like($field_name$, ""%Mi""), tonumber(replace($field_name$, ""Mi"", """")) * pow(1024, 2) / pow(1000, 2), like($field_name$, ""%Ki""), tonumber(replace($field_name$, ""Ki"", """")) * 1024 / 1000, like($field_name$, ""%E""), tonumber(replace($field_name$, ""E"", """")) * pow(1000, 4), like($field_name$, ""%P""), tonumber(replace($field_name$, ""P"", """")) * pow(1000, 3), like($field_name$, ""%T""), tonumber(replace($field_name$, ""T"", """")) * pow(1000, 2), like($field_name$, ""%G""), tonumber(replace($field_name$, ""G"", """")) * pow(1000, 1), like($field_name$, ""%M""), tonumber(replace($field_name$, ""M"", """")), like($field_name$, ""%K""), tonumber(replace($field_name$, ""K"", """")) / 1000 )"
convert_ksi_nonnumeric(4),"eval ""$outfield$""=if(""$convert$""==""true"" and !isnum('$infield$'), ""$value$"", '$infield$')"
correlation_by_repository_and_risk_filter,search *
correlation_by_user_and_risk_filter,search *
cputime,"(sourcetype=""*:CPUTime"" NOT sourcetype=""Perfmon:CPUTime"") OR (sourcetype=""Perfmon:CPUTime"" PercentProcessorTime=*) OR (sourcetype=cpu AND cpu=""all"") | tags outputfield=tag | fillnull value=unknown PercentProcessorTime | eval PercentProcessorTime=if(PercentProcessorTime=""unknown"",PercentSystemTime+PercentUserTime,PercentProcessorTime) | search NOT PercentProcessorTime=unknown"
cputime(1),dest=$host$ `cputime`
cputime(2),`cputime($host$)` | head $limit$
create_context(2),"`context_stats($field$, """")` | xscreateddcontext name=$field$ terms=""$concepts$"" shape=pi endshape=curve type=domain"
create_context(3),"`context_stats($field$, ""$classList$"")` | xscreateddcontext name=$field$ terms=""$concepts$"" class=""$classList$"" shape=pi endshape=curve type=domain"
create_context(4),"`context_stats($field$, ""$classList$"")` | xscreateddcontext name=$field$ container=$container$ terms=""$concepts$"" class=""$classList$"" shape=pi endshape=curve type=domain"
create_context(5),"`context_stats($field$, ""$classList$"")` | xscreateddcontext name=$field$ container=$container$ terms=""$concepts$"" class=""$classList$"" shape=pi endshape=curve type=$type$"
create_context(6),"`context_stats($field$, ""$classList$"")` | xscreateddcontext name=$field$ container=$container$ terms=""$concepts$"" class=""$classList$"" shape=pi endshape=curve type=$type$ scope=$scope$"
create_local_admin_accounts_using_net_exe_filter,search *
create_or_delete_windows_shares_using_net_exe_filter,search *
create_remote_thread_in_shell_application_filter,search *
create_remote_thread_into_lsass_filter,search *
creation_of_lsass_dump_with_taskmgr_filter,search *
creation_of_shadow_copy_filter,search *
creation_of_shadow_copy_with_wmic_and_powershell_filter,search *
credential_dumping_via_copy_command_from_shadow_copy_filter,search *
credential_dumping_via_symlink_to_shadow_copy_filter,search *
csc_net_on_the_fly_compilation_filter,search *
ctime(1),"`ctime($field$,""%m/%d/%Y %H:%M:%S"")`"
ctime(2),"convert timeformat=""$format$"" ctime($field$)"
ctime(3),"`ctime($inField$,""$format$"")` as $outField$"
curl_download_and_bash_execution_filter,search *
dangerous_extensions(1),"""$extension$"" IN (""exe"", ""scr"", ""pdf"", ""vbs"", ""vb"", ""vbe"", ""rtf"", ""xls"", ""doc"", ""docx"", ""docm"", ""dotm"", ""xlsm"", ""xlam"", ""pptm"", ""potm"", ""ppam"", ""ppsm"", ""sldm"", ""hta"", ""html"", ""htm"", ""js"", ""jar"", ""jse"", ""sfx"", ""bat"", ""cmd"", ""com"", ""msp"", ""msi"", ""gadget"", ""ps1"", ""ps1xml"", ""ps2"", ""ps2xml"", ""psc1"", ""psc2"", ""lnk"", ""inf"", ""scf"", ""json"")"
data_parsing_issues,"`sim_set_index_internal` `sim_set_indexer` source=*splunkd.log* (component=AggregatorMiningProcessor OR component=LineBreakingProcessor OR component=DateParserVerbose) (log_level=WARN OR log_level=ERROR) `sim_exclude_internal_sourcetypes(data_sourcetype)` |eval problem = case(component==""LineBreakingProcessor"", ""Line Breaking Issues"", component==""DateParserVerbose"", ""Timestamp Parsing Issues"", component==""AggregatorMiningProcessor"", ""Aggregation Issues"") | stats count by problem | sort - count"
datamodel(2),datamodel $model$ $object$ search
dayDiff,`dayDiff(_time)`
dayDiff(1),eval dayDiff=((time()-'$field$')/86400)
daysago(1),"`daysago($num$,""<"")`"
daysago(2),`dayDiff` | search dayDiff$comparator$$num$
dbx_error,(error OR critical) NOT ERROR_CODE=000 `dbx_internal`
dbx_internal,(sourcetype=dbx2 OR sourcetype=dbx_health OR sourcetype=rpc)
dbx_internal_index,index=_internal
dedup_rule_id,eval rule_id=event_id | dedup rule_id
default_entity_zone,"eval cim_entity_zone=if(ISNOTNULL(cim_entity_zone), cim_entity_zone, ""Not Applicable"")"
default_local_accounts,`default_user_accounts` `useraccounts` | tags outputfield=tag
default_user_accounts,(tag=default OR src_user_category=default OR user_category=default)
delete_shadowcopy_with_powershell_filter,search *
deleting_of_net_users_filter,search *
deleting_shadow_copies_filter,search *
dest_tstats,"`dest_tstats(""*"")`"
dest_tstats(1),"`tstats` count,values(sourcetype),values(All_Traffic.user) from datamodel=Network_Traffic.All_Traffic where All_Traffic.action=$action$ by All_Traffic.dest | eval dest=if(isnull(dest),'All_Traffic.dest',dest) | `sistats_values_rename(All_Traffic.user,user)` | `tstats` append=true count,values(sourcetype),values(IDS_Attacks.user) from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.dest | eval dest=if(isnull(dest),'IDS_Attacks.dest',dest) | `sistats_values_rename(IDS_Attacks.user,user)` | `tstats` append=true count,values(sourcetype),values(Web.user) from datamodel=Web.Web by Web.dest | eval dest=if(isnull(dest),'Web.dest',dest) | `sistats_values_rename(Web.user,user)` | stats count,values(sourcetype) as sourcetype,values(user) as user by dest"
detect_activity_related_to_pass_the_hash_attacks_filter,search *
detect_api_activity_from_users_without_mfa_filter,search *
detect_arp_poisoning_filter,search *
detect_attackers_scanning_for_vulnerable_jboss_servers_filter,search *
detect_aws_api_activities_from_unapproved_accounts_filter,search *
detect_aws_console_login_by_new_user_filter,search *
detect_aws_console_login_by_user_from_new_city_filter,search *
detect_aws_console_login_by_user_from_new_country_filter,search *
detect_aws_console_login_by_user_from_new_region_filter,search *
detect_azurehound_command_line_arguments_filter,search *
detect_azurehound_file_modifications_filter,search *
detect_baron_samedit_cve_2021_3156_filter,search *
detect_baron_samedit_cve_2021_3156_segfault_filter,search *
detect_baron_samedit_cve_2021_3156_via_osquery_filter,search *
detect_computer_changed_with_anonymous_account_filter,search *
detect_copy_of_shadowcopy_with_script_block_logging_filter,search *
detect_credential_dumping_through_lsass_access_filter,search *
detect_dga_domains_using_pretrained_model_in_dsdl_filter,search *
detect_dns_data_exfiltration_using_pretrained_model_in_dsdl_filter,search *
detect_dns_requests_to_phishing_sites_leveraging_evilginx2_filter,search *
detect_empire_with_powershell_script_block_logging_filter,search *
detect_excessive_account_lockouts_from_endpoint_filter,search *
detect_excessive_user_account_lockouts_filter,search *
detect_exchange_web_shell_filter,search *
detect_f5_tmui_rce_cve_2020_5902_filter,search *
detect_gcp_storage_access_from_a_new_ip_filter,search *
detect_hosts_connecting_to_dynamic_domain_providers_filter,search *
detect_html_help_renamed_filter,search *
detect_html_help_spawn_child_process_filter,search *
detect_html_help_url_in_command_line_filter,search *
detect_html_help_using_infotech_storage_handlers_filter,search *
detect_ipv6_network_infrastructure_threats_filter,search *
detect_large_outbound_icmp_packets_filter,search *
detect_long_dns_txt_record_response_filter,search *
detect_malicious_requests_to_exploit_jboss_servers_filter,search *
detect_mimikatz_using_loaded_images_filter,search *
detect_mimikatz_via_powershell_and_eventcode_4703_filter,search *
detect_mimikatz_with_powershell_script_block_logging_filter,search *
detect_mshta_inline_hta_execution_filter,search *
detect_mshta_renamed_filter,search *
detect_mshta_url_in_command_line_filter,search *
detect_new_api_calls_from_user_roles_filter,search *
detect_new_local_admin_account_filter,search *
detect_new_login_attempts_to_routers_filter,search *
detect_new_open_gcp_storage_buckets_filter,search *
detect_new_open_s3_buckets_filter,search *
detect_new_open_s3_buckets_over_aws_cli_filter,search *
detect_new_user_aws_console_login_filter,search *
detect_outbound_ldap_traffic_filter,search *
detect_outbound_smb_traffic_filter,search *
detect_outlook_exe_writing_a_zip_file_filter,search *
detect_path_interception_by_creation_of_program_exe_filter,search *
detect_port_security_violation_filter,search *
detect_processes_used_for_system_network_configuration_discovery_filter,search *
detect_prohibited_applications_spawning_cmd_exe_filter,search *
detect_psexec_with_accepteula_flag_filter,search *
detect_rare_executables_filter,search *
detect_rclone_command_line_usage_filter,search *
detect_regasm_spawning_a_process_filter,search *
detect_regasm_with_network_connection_filter,search *
detect_regasm_with_no_command_line_arguments_filter,search *
detect_regsvcs_spawning_a_process_filter,search *
detect_regsvcs_with_network_connection_filter,search *
detect_regsvcs_with_no_command_line_arguments_filter,search *
detect_regsvr32_application_control_bypass_filter,search *
detect_renamed_7_zip_filter,search *
detect_renamed_psexec_filter,search *
detect_renamed_rclone_filter,search *
detect_renamed_winrar_filter,search *
detect_risky_spl_using_pretrained_ml_model_filter,search *
detect_rogue_dhcp_server_filter,search *
detect_rtlo_in_file_name_filter,search *
detect_rtlo_in_process_filter,search *
detect_rundll32_application_control_bypass___advpack_filter,search *
detect_rundll32_application_control_bypass___setupapi_filter,search *
detect_rundll32_application_control_bypass___syssetup_filter,search *
detect_rundll32_inline_hta_execution_filter,search *
detect_s3_access_from_a_new_ip_filter,search *
detect_sharphound_command_line_arguments_filter,search *
detect_sharphound_file_modifications_filter,search *
detect_sharphound_usage_filter,search *
detect_snicat_sni_exfiltration_filter,search *
detect_software_download_to_network_device_filter,search *
detect_spike_in_aws_api_activity_filter,search *
detect_spike_in_aws_security_hub_alerts_for_ec2_instance_filter,search *
detect_spike_in_aws_security_hub_alerts_for_user_filter,search *
detect_spike_in_blocked_outbound_traffic_from_your_aws_filter,search *
detect_spike_in_network_acl_activity_filter,search *
detect_spike_in_s3_bucket_deletion_filter,search *
detect_spike_in_security_group_activity_filter,search *
detect_suspicious_dns_txt_records_using_pretrained_model_in_dsdl_filter,search *
detect_suspicious_processnames_using_pretrained_model_in_dsdl_filter,search *
detect_traffic_mirroring_filter,search *
detect_unauthorized_assets_by_mac_address_filter,search *
detect_usb_device_insertion_filter,search *
detect_use_of_cmd_exe_to_launch_script_interpreters_filter,search *
detect_web_traffic_to_dynamic_domain_providers_filter,search *
detect_webshell_exploit_behavior_filter,search *
detect_windows_dns_sigred_via_splunk_stream_filter,search *
detect_windows_dns_sigred_via_zeek_filter,search *
detect_wmi_event_subscription_persistence_filter,search *
detect_zerologon_via_zeek_filter,search *
detection_of_dns_tunnels_filter,search *
detection_of_tools_built_by_nirsoft_filter,search *
disable_amsi_through_registry_filter,search *
disable_defender_antivirus_registry_filter,search *
disable_defender_blockatfirstseen_feature_filter,search *
disable_defender_enhanced_notification_filter,search *
disable_defender_mpengine_registry_filter,search *
disable_defender_spynet_reporting_filter,search *
disable_defender_submit_samples_consent_feature_filter,search *
disable_etw_through_registry_filter,search *
disable_logs_using_wevtutil_filter,search *
disable_registry_tool_filter,search *
disable_schedule_task_filter,search *
disable_security_logs_using_minint_registry_filter,search *
disable_show_hidden_files_filter,search *
disable_uac_remote_restriction_filter,search *
disable_windows_app_hotkeys_filter,search *
disable_windows_behavior_monitoring_filter,search *
disable_windows_smartscreen_protection_filter,search *
disabled_kerberos_pre_authentication_discovery_with_get_aduser_filter,search *
disabled_kerberos_pre_authentication_discovery_with_powerview_filter,search *
disabling_cmd_application_filter,search *
disabling_controlpanel_filter,search *
disabling_defender_services_filter,search *
disabling_firewall_with_netsh_filter,search *
disabling_folderoptions_windows_feature_filter,search *
disabling_net_user_account_filter,search *
disabling_norun_windows_app_filter,search *
disabling_remote_user_account_control_filter,search *
disabling_systemrestore_in_registry_filter,search *
disabling_task_manager_filter,search *
disabling_windows_local_security_authority_defences_via_registry_filter,search *
discover_trend(6),"xsDiscoverTrend $fieldY$ IN $container$ FROM $context$ SCOPED $scope$ over $fieldX$ `by_token(""$class$"")` | where trend != 0 | eval absTrend = abs(trend) | xsFindBestConcept absTrend FROM TrendChange | eval dir=if(absTrend==trend,""more"", ""less"") | eval byStr=if(bv==""*"", """", ""When "" + bf + "" is "" + bv + "", "") | eval results=byStr + ""$fieldY$ is "" + BestConcept + "" becoming "" + dir + "" "" + concept + "" as $fieldX$ increases"""
disk,"(sourcetype=*:FreeDiskSpace NOT sourcetype=Perfmon:FreeDiskSpace) OR sourcetype=df | append [search sourcetype=Perfmon:FreeDiskSpace | transaction _time, dest, collection, object, instance | search PercentFreeSpace=* FreeMBytes=*] | tags outputfield=tag | search NOT mount=*Total | fillnull value=0 FreeMBytes,PercentFreeSpace,TotalMBytes,UsedMBytes | eval PercentFreeSpace=if(PercentFreeSpace<=0,0.01,PercentFreeSpace) | eval PercentFreeSpaceDec=PercentFreeSpace/100 | eval TotalMBytes=if(sourcetype==""WMI:FreeDiskSpace"" OR sourcetype=""Perfmon:FreeDiskSpace"",FreeMBytes/PercentFreeSpaceDec,TotalMBytes) | eval UsedMBytes = if(sourcetype==""WMI:FreeDiskSpace"" OR sourcetype=""Perfmon:FreeDiskSpace"",TotalMBytes-FreeMBytes,UsedMBytes) | eval FreeMBytes=round(FreeMBytes) | eval TotalMBytes=round(TotalMBytes) | eval UsedMBytes=round(UsedMBytes)"
disk(1),dest=$host$ `disk`
disk(2),"`disk($host$)` | transaction _time,dest | head $limit$"
display_zero_if_null,appendpipe [ stats count | where count==0]
distinct_apps,"`user_activity_base` | stats dc(App) as ""Distinct Apps"""
distinct_users,"`user_activity_base` | stats dc(User) as ""Distinct Users"""
dllhost_with_no_command_line_arguments_with_network_filter,search *
dns_exfiltration_using_nslookup_app_filter,search *
dns_query_length_outliers___mltk_filter,search *
dns_query_length_with_high_standard_deviation_filter,search *
dns_query_requests_resolved_by_unauthorized_dns_servers_filter,search *
dns_record_changed_filter,search *
domain_account_discovery_with_dsquery_filter,search *
domain_account_discovery_with_net_app_filter,search *
domain_account_discovery_with_wmic_filter,search *
domain_controller_discovery_with_nltest_filter,search *
domain_controller_discovery_with_wmic_filter,search *
domain_group_discovery_with_adsisearcher_filter,search *
domain_group_discovery_with_dsquery_filter,search *
domain_group_discovery_with_net_filter,search *
domain_group_discovery_with_wmic_filter,search *
download_files_using_telegram_filter,search *
driverinventory,sourcetype=PwSh:DriverInventory
drop_dm_object_name(1),"rename ""$object$.*"" as *"
drop_icedid_license_dat_filter,search *
dsquery_domain_discovery_filter,search *
dump_lsass_via_comsvcs_dll_filter,search *
dump_lsass_via_procdump_filter,search *
dump_lsass_via_procdump_rename_filter,search *
dynamic_dns_providers,"lookup update=true dynamic_dns_providers_default dynamic_dns_domains as query OUTPUTNEW isDynDNS_default | lookup update=true dynamic_dns_providers_local dynamic_dns_domains as query OUTPUTNEW isDynDNS_local| eval isDynDNS = coalesce(isDynDNS_default, isDynDNS_local)|fields - isDynDNS_default, isDynDNS_local| search isDynDNS=True"
dynamic_dns_web_traffic,"lookup update=true dynamic_dns_providers_default dynamic_dns_domains as url OUTPUTNEW isDynDNS_default | lookup update=true dynamic_dns_providers_local dynamic_dns_domains as url OUTPUTNEW isDynDNS_local| eval isDynDNS = coalesce(isDynDNS_default, isDynDNS_local)|fields - isDynDNS_default, isDynDNS_local| search isDynDNS=True"
ec2_instance_modified_with_previously_unseen_user_filter,search *
ec2_instance_started_in_previously_unseen_region_filter,search *
ec2_instance_started_with_previously_unseen_ami_filter,search *
ec2_instance_started_with_previously_unseen_instance_type_filter,search *
ec2_instance_started_with_previously_unseen_user_filter,search *
ec2_modification_api_calls,(eventName=AssociateAddress OR eventName=AssociateIamInstanceProfile OR eventName=AttachClassicLinkVpc OR eventName=AttachNetworkInterface OR eventName=AttachVolume OR eventName=BundleInstance OR eventName=DetachClassicLinkVpc OR eventName=DetachVolume OR eventName=ModifyInstanceAttribute OR eventName=ModifyInstancePlacement OR eventName=MonitorInstances OR eventName=RebootInstances OR eventName=ResetInstanceAttribute OR eventName=StartInstances OR eventName=StopInstances OR eventName=TerminateInstances OR eventName=UnmonitorInstances)
elevated_group_discovery_with_net_filter,search *
elevated_group_discovery_with_powerview_filter,search *
elevated_group_discovery_with_wmic_filter,search *
email_attachments_with_lots_of_spaces_filter,search *
email_files_written_outside_of_the_outlook_directory_filter,search *
email_intel,`email_intel_by_threat_key(*)`
email_intel_by_threat_key(1),"inputlookup append=T email_intel where threat_key=""$threat_key$"" | fillnull value=0 updated,disabled | `set_threat_collection_name(""email_intel"")` | `get_threat_attribution_weight(threat_key)`"
email_intel_stats,"dc(src_user),dc(subject),dc(file_name),dc(file_hash),dc(embedded_domain),dc(embedded_ip),dc(src)"
email_servers_sending_high_volume_traffic_to_hosts_filter,search *
enable_rdp_in_other_port_number_filter,search *
enable_wdigest_uselogoncredential_registry_filter,search *
endpoint_change,"tag=endpoint tag=change | tags outputfield=tag | fillnull value=unknown action,dest,object,object_category,object_path,status,user"
enumerate_users_local_group_using_telegram_filter,search *
es_context_only(1),($dm$.app=SplunkEnterpriseSecuritySuite OR $dm$.app=Splunk_DA-ESS_* OR $dm$.app=DA-ESS-*)
es_get_cam,"join type=outer action_name [| rest splunk_server=local count=0 /services/alerts/alert_actions | rename title as action_name | table action_name,param._cam*] | spath input=param._cam | rename category{} as cam_category,subject{} as cam_subject"
es_loadjob(1),"loadjob savedsearch=""admin:SplunkEnterpriseSecuritySuite:$savedsearch$"""
es_notable_events,c
es_search_schedule,"rest splunk_server=local count=0 /services/saved/searches | search (title=""*Gen"" OR title=""*Rule"" OR title=""*Action History"") NOT (dispatch.earliest_time=rt* OR dispatch.latest_time=rt*) | where isnotnull(cron_schedule) AND cron_schedule!="""" | stats values(title) as savedsearches,count by cron_schedule | lookup cron_schedule_map cron_schedule OUTPUT | eval c0=c0*count | eval c5=c5*count | eval c10=c10*count | eval c15=c15*count | eval c20=c20*count | eval c25=c25*count | eval c30=c30*count | eval c35=c35*count | eval c40=c40*count | eval c45=c45*count | eval c50=c50*count | eval c55=c55*count | addcoltotals labelfield=savedsearches label=Total | fields cron_schedule savedsearches count c0 c5 c10 c15 c20 c25 c30 c35 c40 c45 c50 c55"
esentutl_sam_copy_filter,search *
etw_registry_disabled_filter,search *
event-codes-search(3),"eventtype=wineventlog_windows LogName=""$LogName$"" SourceName=""$SourceName$"" TaskCategory=""$TaskCategory$"" | stats count by EventCode | sort +EventCode"
event-hosts-search,eventtype=wineventlog_windows | stats count by host | sort +host
event-types-search(4),"eventtype=wineventlog_windows LogName=""$LogName$"" SourceName=""$SourceName$"" TaskCategory=""$TaskCategory$"" EventCode=""$EventCode$"" | stats count by Type | sort +Type"
event_count_filter,(index!=notable index!=risk index!=*summary*)
event_seq_base_search,"`event_seq_events` | tags outputfield=tag | `mvappend_field(tag,orig_tag)`| dedup rule_id | `get_correlations` | `get_urgency` | typer | tags outputfield=tag | `mvappend_field(tag,orig_tag)` | `suppression_extract` | search NOT suppression=* | expandtoken rule_title"
event_seq_events,"`get_risk_index` OR `get_notable_index` | eval `get_event_id_meval`,rule_id=event_id | fields - host_*"
events-search(6),"eventtype=""wineventlog_windows"" source=""*inEventLog:$LogName$"" (host=""$EventHost$"" OR ComputerName=""$EventHost$"") TaskCategory=""$TaskCategory$"" SourceName=""$SourceName$"" EventCode=""$EventCode$"" Type=""$Type$"""
eventvwr_uac_bypass_filter,search *
evilginx_phishlets_0365,(query=login* AND query=www*)
evilginx_phishlets_amazon,(query=fls-na* AND query = www* AND query=images*)
evilginx_phishlets_aws,(query=www* AND query=aws* AND query=console.aws* AND query=signin.aws* AND api-northeast-1.console.aws* AND query=fls-na* AND query=images-na*)
evilginx_phishlets_facebook,(query=www* AND query = m* AND query=static*)
evilginx_phishlets_github,(query=api* AND query = github*)
evilginx_phishlets_google,(query=accounts* AND query=ssl* AND query=www*)
evilginx_phishlets_outlook,(query=outlook* AND query=login* AND query=account*)
excel_spawning_powershell_filter,search *
excel_spawning_windows_script_host_filter,search *
excessive_attempt_to_disable_services_filter,search *
excessive_distinct_processes_from_windows_temp_filter,search *
excessive_dns_failures_filter,search *
excessive_file_deletion_in_windefender_folder_filter,search *
excessive_number_of_service_control_start_as_disabled_filter,search *
excessive_number_of_taskhost_processes_filter,search *
excessive_service_stop_attempt_filter,search *
excessive_usage_of_cacls_app_filter,search *
excessive_usage_of_net_app_filter,search *
excessive_usage_of_nslookup_app_filter,search *
excessive_usage_of_sc_service_utility_filter,search *
excessive_usage_of_taskkill_filter,search *
exchange,"sourcetype=""MSWindows:IIS"""
exchange_powershell_abuse_via_ssrf_filter,search *
exchange_powershell_module_usage_filter,search *
exclude_disabled_entries,where NOT disabled=1
executable_file_written_in_administrative_smb_share_filter,search *
executables_or_script_creation_in_suspicious_path_filter,search *
execute_javascript_with_jscript_com_clsid_filter,search *
execute_sequence_template(2),"`event_seq_base_search` | esssequence template=""$template$"" create_seq_event=""$create_seq_event$"""
execution_of_file_with_multiple_extensions_filter,search *
execution_of_file_with_spaces_before_extension_filter,search *
expand_references,"| eval reference=mvdedup(mvappend(ref_1,ref_2,ref_3,ref_4,ref_5,ref_6,ref_7,ref_8,ref_9)) | fields - ref_* | where !isnull(reference) | mvexpand reference | dedup fqn reference"
expected_view_tracker(1),"tstats `summariesonly` count from datamodel=Splunk_Audit.View_Activity by _time,View_Activity.app,View_Activity.view,View_Activity.user span=1s | `drop_dm_object_name(""View_Activity"")` | `get_expected_views` | search is_expected=true | append [| `expected_views` | search is_expected=true | expectedactivity append=False fields=""app,view"" earliest=$earliest$ latest=now interval=86400 | eval count=0] | sort - _time"
expected_view_tracker(2),"`expected_view_tracker($earliest$)` | search app=""$app$"""
expected_view_tracker(3),"`expected_view_tracker($earliest$)` | search app=""$app$"" view=""$view$"""
expected_views,"inputlookup append=T expected_views_lookup | dedup app,view | `str_to_bool(is_expected)` | sort + app,view"
expected_views(1),"`expected_views` | search app=""$app$"""
expected_views(2),"`expected_views` | search app=""$app$"" view=""$view$"""
explode_certificate_serial,"rex field=certificate_serial max_match=1000 ""(0[xX])?(?<certificate_serial_clean>[0-9a-fA-F]+)"" | eval certificate_serial_clean=mvjoin(certificate_serial_clean, """"),certificate_serial_sign=if(match(certificate_serial, ""^(-|[Nn]egative).*""),mvappend(""-"", ""Negative"", ""negative""),mvappend("""", ""+"",""Postive"",""positive"")),certificate_serial_hex=if(match(certificate_serial, ""0[xX]"") OR match(certificate_serial_clean, ""[a-fA-F]""),""0x"".certificate_serial_clean,null()),certificate_serial_dec=if(isnull(certificate_serial_hex),certificate_serial_clean,null()) | lookup hex2dec hex as certificate_serial_clean OUTPUTNEW dec as certificate_serial_dec | lookup hex2dec dec as certificate_serial_dec OUTPUTNEW hex as certificate_serial_hex | rex field=certificate_serial_hex max_match=1000 ""(0[xX])?(?<certificate_serial_hex_parts>[0-9a-fA-F]{2})"" | eval certificate_serial_hex=mvappend(certificate_serial_hex,""0x"".mvjoin(certificate_serial_hex_parts, "":"")),certificate_serial=mvappend(certificate_serial_hex,certificate_serial_dec) | mvexpand certificate_serial_sign | mvexpand certificate_serial | eval certificate_serial=certificate_serial_sign.certificate_serial | fields - certificate_serial_*"
exploit_public_facing_application_via_apache_commons_text_filter,search *
exploit_public_facing_fortinet_fortinac_cve_2022_39952_filter,search *
extended_period_without_successful_netbackup_backups_filter,search *
extraction_of_registry_hives_filter,search *
f5_big_ip_icontrol_rest_vulnerability_cve_2022_1388_filter,search *
f5_bigip_rogue,"index=netops sourcetype=""f5:bigip:rogue"""
file_intel,`file_intel_by_threat_key(*)`
file_intel_by_threat_key(1),"inputlookup append=T file_intel where threat_key=""$threat_key$"" | fillnull value=0 updated,disabled | `set_threat_collection_name(""file_intel"")` | `get_threat_attribution_weight(threat_key)`"
file_intel_stats,"dc(file_hash),dc(file_name)"
file_with_samsam_extension_filter,search *
filter_by_threat_category(2),"`threat_group_intel` | search threat_category=""$value$"" | rename _key as ""$field$"" | table ""$field$"" | format"
filter_by_threat_group(2),"`threat_group_intel` | search threat_group=""$value$"" | rename _key as ""$field$"" | table ""$field$"" | format"
filter_rare_process_allow_list,"lookup update=true lookup_rare_process_allow_list_default process as process OUTPUTNEW allow_list | where allow_list=""false"" | lookup update=true lookup_rare_process_allow_list_local process as process OUTPUT allow_list | where allow_list=""false"""
filtertags(1),"`filtertags(""$domain$"",""tag"")`"
filtertags(2),"eval ""$outField$""=mvfilter(`settags_$domain$` OR `settags_governance`)"
find_best_concept(5),"xsFindBestConcept $datafield$ IN $container$ FROM $context$ SCOPED $scope$ `by_token(""$class$"")` | rename BestCIX as termCIX | rename BestConcept as termMatch | rename UOM as units | xsFindBestConcept termCIX FROM Compatibility | eval results = ""Using Context $context$, the value of "" + $datafield$ + "" "" + units + "" in $datafield$ is "" + BestConcept + "" compatible with "" + termMatch"
find_im_threat_indicators_using_event_id(1),"`mc_extend_observables_using_event_id($event_id$)` | fields - observable | `get_selected_enclave_id` | eval observable_value_hash=sha256(observable_value) | lookup tim_iocs observable_value_hash, enclave_id as selected_enclave_ids, observable_value OUTPUTNEW indicator_json, observable_value, enclave_id, observable_type as im_observable_type | fields - selected_enclave_ids | spath input=indicator_json | fields indicator_json, observable_*, enclave_id, priorityScore, created, processedAt, updated | dedup observable_type, observable_value, observable_object"
find_im_threat_indicators_using_summary_json(1),"`mc_extend_observables_using_summary_json($summary_json$)` | fields - observable | `get_selected_enclave_id` | eval observable_value_hash=sha256(observable_value) | lookup tim_iocs observable_value_hash, enclave_id as selected_enclave_ids, observable_value OUTPUTNEW indicator_json, observable_value, enclave_id, observable_type as im_observable_type | fields - selected_enclave_ids | spath input=indicator_json | fields indicator_json, observable_*, enclave_id, priorityScore, created, processedAt, updated | dedup observable_type, observable_value, observable_object"
firewall_allowed_program_enable_filter,search *
first_time_seen_child_process_of_zoom_filter,search *
first_time_seen_command_line_argument_filter,search *
first_time_seen_running_windows_service_filter,search *
fodhelper_uac_bypass_filter,search *
forecastviz(4),"eval _ft=$ft$, _hb=$hb$, _vars=""$v$"", _ci=$ci$"
format_field_names,"rename Airespace_Wlan_Id AS ""Airespace WLAN ID"" alarm_description AS ""Alarm Description"" alarm_type AS ""Alarm Type"" AntiSpywareInstalled AS ""AntiSpyware Installed"" AntiVirusInstalled AS ""Antivirus Installed"" AuthenticationIdentityStore AS ""Authentication Identity Store"" AuthenticationMethod AS ""Authentication Method"" AuthorizationPolicyMatchedRule AS ""AuthorizationPolicy Mateched Rule"" Called_Station_ID AS ""Called Station ID"" Calling_Station_ID AS ""Calling Station ID"" count AS Count DeviceRegistrationStatus AS ""Registration Status"" dhcp_class_identifier AS ""DHCP Class ID"" EapAuthentication AS ""EAP Authentication"" EapTunnel AS ""EAP Tunnel"" EndpointIPAddress AS ""IP Address"" EndPointMACAddress AS ""MAC Address"" EndpointMacAddress AS ""Endpoint MAC Accress"" EndpointMatchedPolicy AS ""Endpoint Matched Policy"" EndPointMatchedProfile AS ""Matched Profile"" EndpointNADAddress AS ""Endpoint NAD Address"" EndpointPolicy AS ""Endpoint Policy"" EndpointOUI AS ""Endpoint OUI"" EndpointSourceEvent AS ""Endpoint Source Event"" FailureReason AS ""Failure Reason"" Framed_IP_Address AS ""Framed IP Address"" host_name AS ""Host"" HostIdentityGroup AS ""Host Identity Group"" IdentityGroup AS ""Identity Group"" IpAddress AS ""IP Address"" ise_servername AS ""ISE Server Name"" MacAddress AS ""MAC Adderess"" MESSAGE_CODE AS ""Message Code"" NAS_IP_Address AS ""NAS IP Address"" NAS_Identifier AS ""NAS Identifier"" NAS_Port AS ""NAS Port"" NAS_Port_Id AS ""NAS Port ID"" NAS_Port_Type AS ""NAS Port Type"" NetworkDeviceGroups AS ""Network Device Groups"" NetworkDeviceName AS ""Network Device Name"" OperatingSystem AS ""Operating System"" OperationMessageText AS ""Operational Message"" PIX7x_Client_Type AS ""PIX 7.x Client Type"" PIX7x_Tunnel_Group_Name AS ""PIX 7.x Tunnel Group Name"" PortalName AS ""Portal Name"" PortalUser AS ""Portal User"" PostureAgentVersion AS ""Posture Agent Version"" PosturePolicyMatched AS ""Posture Policy Matched"" PostureReport AS ""Posture Report"" PostureStatus AS ""Posture Status"" SelectedAuthorizationProfiles AS ""Selected Authorization Profiles"" system_mgmt_desc AS ""System Management Description"" SystemName AS ""System Name"" SystemUser AS ""System User"" Tunnel_Client_Endpoint AS ""Tunnel Client Endpoint"" UserName AS ""User Name"" UserType AS ""User Type"""
fortinet_appliance_auth_bypass_filter,search *
fsutil_zeroing_file_filter,search *
gcp_authentication_failed_during_mfa_challenge_filter,search *
gcp_detect_accounts_with_high_risk_roles_by_project_filter,search *
gcp_detect_gcploit_framework_filter,search *
gcp_detect_high_risk_permissions_by_resource_and_account_filter,search *
gcp_detect_oauth_token_abuse_filter,search *
gcp_kubernetes_cluster_pod_scan_detection_filter,search *
gcp_kubernetes_cluster_scan_detection_filter,search *
gcp_multi_factor_authentication_disabled_filter,search *
gcp_multiple_failed_mfa_requests_for_user_filter,search *
gcp_multiple_users_failing_to_authenticate_from_ip_filter,search *
gcp_successful_single_factor_authentication_filter,search *
gcp_unusual_number_of_failed_authentications_from_ip_filter,search *
gdrive_suspicious_file_sharing_filter,search *
genColorFromComponents(4),"| eval _red = $red$ | eval _green = $green$ | eval _blue = $blue$ | eval _outcolor = ""#"" + upper(printf(""%02x"", _red)) + upper(printf(""%02x"", _green)) + upper(printf(""%02x"", _blue)) | eval $outcolorfieldname$ = _outcolor"
generate_identities,
get_addefaultdomainpasswordpolicy_with_powershell_filter,search *
get_addefaultdomainpasswordpolicy_with_powershell_script_block_filter,search *
get_aduser_with_powershell_filter,search *
get_aduser_with_powershell_script_block_filter,search *
get_aduserresultantpasswordpolicy_with_powershell_filter,search *
get_aduserresultantpasswordpolicy_with_powershell_script_block_filter,search *
get_application_protocol,"lookup local=true application_protocol_lookup transport,dest_port OUTPUTNEW app | fillnull value=unknown app"
get_arrow(1),"search security_domain=$security_domain$ | stats sum(count) as count by security_domain,timeDiff_type | fields - security_domain | sort + timeDiff_type | transpose | search column=count | rename ""row 1"" as current_count | rename ""row 2"" as historical_count | eval count_diff=current_count-historical_count | eval arrow=if(count_diff<0,""down"",""up"") | eval arrow=if(count_diff==0,""no_change"",arrow)"
get_asset(1),"`get_asset_by(""str"",$subject$)` | `get_asset_by(""cidr"",$subject$)` | lookup asset_lookup_default_fields key as $subject$ OUTPUTNEW pci_domain as $subject$_pci_domain, is_expected as $subject$_is_expected, requires_av as $subject$_requires_av, should_timesync as $subject$_should_timesync, should_update as $subject$_should_update | eval ""$subject$_ip""=case(match('$subject$_ip', ""^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$""),'$subject$_ip',match('$subject$', ""^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$""),$subject$,1=1,null()),`mvappend_field_meval(tag,$subject$_asset_tag)`"
get_asset_by(2),"lookup update=true asset_lookup_by_$key$ asset as ""$subject$"" OUTPUTNEW `prepend_alias_assets($subject$)`"
get_asset_simple(1),"(dns=""$subject$"" OR nt_host=""$subject$"" OR mac=""$subject$"" OR ip=""$subject$"")"
get_bunit(1),"(tag=""$bunit$"" OR bunit=""$bunit$"" OR ((host_bunit=""$bunit$"" OR host_owner_bunit=""$bunit$"") NOT sourcetype=stash) OR orig_host_bunit=""$bunit$"" OR src_bunit=""$bunit$"" OR dest_bunit=""$bunit$"" OR dvc_bunit=""$bunit$"" OR src_user_bunit=""$bunit$"" OR user_bunit=""$bunit$"" OR orig_host_owner_bunit=""$bunit$"" OR src_owner_bunit=""$bunit$"" OR dest_owner_bunit=""$bunit$"" OR dvc_owner_bunit=""$bunit$"")"
get_bunit_dm(2),"(""$object$.tag""=""$bunit$"" OR ""$object$.bunit""=""$bunit$"" OR ((""$object$.host_bunit""=""$bunit$"" OR ""$object$.host_owner_bunit""=""$bunit$"") NOT sourcetype=stash) OR ""$object$.orig_host_bunit""=""$bunit$"" OR ""$object$.src_bunit""=""$bunit$"" OR ""$object$.dest_bunit""=""$bunit$"" OR ""$object$.dvc_bunit""=""$bunit$"" OR ""$object$.src_user_bunit""=""$bunit$"" OR ""$object$.user_bunit""=""$bunit$"" OR ""$object$.orig_host_owner_bunit""=""$bunit$"" OR ""$object$.src_owner_bunit""=""$bunit$"" OR ""$object$.dest_owner_bunit""=""$bunit$"" OR ""$object$.dvc_owner_bunit""=""$bunit$"")"
get_category(1),"(tag=""$category$"" OR category=""$category$"" OR ((host_category=""$category$"" OR host_owner_category=""$category$"") NOT sourcetype=stash) OR orig_host_category=""$category$"" OR src_category=""$category$"" OR dest_category=""$category$"" OR dvc_category=""$category$"" OR src_user_category=""$category$"" OR user_category=""$category$"" OR orig_host_owner_category=""$category$"" OR src_owner_category=""$category$"" OR dest_owner_category=""$category$"" OR dvc_owner_category=""$category$"")"
get_category_dm(2),"(""$object$.tag""=""$category$"" OR ""$object$.category""=""$category$"" OR ((""$object$.host_category""=""$category$"" OR ""$object$.host_owner_category""=""$category$"") NOT sourcetype=stash) OR ""$object$.orig_host_category""=""$category$"" OR ""$object$.src_category""=""$category$"" OR ""$object$.dest_category""=""$category$"" OR ""$object$.dvc_category""=""$category$"" OR ""$object$.src_user_category""=""$category$"" OR ""$object$.user_category""=""$category$"" OR ""$object$.orig_host_owner_category""=""$category$"" OR ""$object$.src_owner_category""=""$category$"" OR ""$object$.dest_owner_category""=""$category$"" OR ""$object$.dvc_owner_category""=""$category$"")"
get_certificate_serial,"rex field=certificate_serial "".*(?<certificate_serial>0x.*[a-fA-F0-9]).*"" | rex mode=sed field=certificate_serial ""s/\([Nn]egative\)/-/g"" | eval certificate_serial=case(match(certificate_serial,""^[+]\d+$""),substr(certificate_serial,2),match(certificate_serial,""^[-]?\d+$""),certificate_serial,match(certificate_serial,""^[+][a-fA-F0-9]+(?:\:|$)""),""0x"".substr(certificate_serial,2),match(certificate_serial,""^[a-fA-F0-9]+(?:\:|$)""),""0x"".certificate_serial,match(certificate_serial,""^[-][a-fA-F0-9]+(?:\:|$)""),""-0x"".substr(certificate_serial,2),1=1,certificate_serial) | eval certificate_serial_dec=if(match(certificate_serial,""^[-]?\d+$""),certificate_serial,certificate_serial_dec) | eval certificate_serial=if(isnotnull(certificate_serial_dec),null(),certificate_serial) | `get_certificate_serial_clean` | lookup hex2dec hex as certificate_serial_clean OUTPUTNEW dec as certificate_serial_dec | lookup hex2dec dec as certificate_serial_dec OUTPUTNEW hex as certificate_serial | `get_certificate_serial_clean`"
get_certificate_serial_clean,"eval certificate_serial_clean=certificate_serial | rex mode=sed field=certificate_serial_clean ""s/://g"""
get_control(1),"control=""$value$"""
get_correlations,"lookup update=true correlationsearches_lookup _key as source OUTPUTNEW annotations, security_domain, severity, rule_name, description as savedsearch_description, rule_title, rule_description, drilldown_name, drilldown_search, drilldown_earliest_offset, drilldown_latest_offset, default_status, default_owner, default_disposition, next_steps, investigation_profiles, extract_artifacts, recommended_actions | eval `get_rule_title_meval`,drilldown_earliest=case(isint(drilldown_earliest_offset),_time-drilldown_earliest_offset,drilldown_earliest_offset=""$info_min_time$"",'info_min_time',1=1,null()),drilldown_latest=case(isint(drilldown_latest_offset),_time+drilldown_latest_offset,drilldown_latest_offset=""$info_max_time$"",'info_max_time',1=1,null()),security_domain=if(isnull(security_domain),""threat"",lower(security_domain)),`get_rule_description_meval` | `governance_lookup` | spathannotations"
get_current_status,"eval temp_time=time()+86400 | lookup update=true event_time_field=temp_time incident_review_lookup rule_id OUTPUT owner as new_owner, urgency as new_urgency, status as new_status, disposition as new_disposition | lookup update=true event_time_field=temp_time incident_review_comment_lookup rule_id OUTPUT time as review_time,user as reviewer,comment | eval owner=if(isnotnull(new_owner),new_owner,owner),status=case(isnotnull(new_status),new_status,isnotnull(status),status,1==1,default_status),urgency=if(isnotnull(new_urgency),new_urgency,urgency),disposition=if(isnotnull(new_disposition), new_disposition, default_disposition) | fields - temp_time,new_owner,new_status,new_urgency,new_disposition | `get_reviewstatuses` | `get_notable_disposition`"
get_date(1),"eval date='$field$' | `ctime(date,""%m-%d-%Y"")`"
get_delta,"`get_delta(current_count,historical_count)`"
get_delta(2),"eval ""$field1$""=if(isnum('$field1$'),'$field1$',0) | eval ""$field2$""=if(isnum('$field2$'),'$field2$',0) | eval delta='$field1$'-'$field2$'"
get_domainpolicy_with_powershell_filter,search *
get_domainpolicy_with_powershell_script_block_filter,search *
get_domaintrust_with_powershell_filter,search *
get_domaintrust_with_powershell_script_block_filter,search *
get_domainuser_with_powershell_filter,search *
get_domainuser_with_powershell_script_block_filter,search *
get_event_hash,eval `get_event_hash_meval`
get_event_hash_meval,event_hash=`hash_alg`(_time._raw)
get_event_id,eval `get_event_id_meval`
get_event_id_meval,"`get_indexer_guid_meval`,`get_event_hash_meval`,event_id=indexer_guid.""@@"".index.""@@"".event_hash"
get_events4identity(2),"(user_$field$=""$value$"" OR src_user_$field$=""$value$"" OR (host_owner_$field$=""$value$"" NOT sourcetype=stash) OR orig_host_owner_$field$=""$value$"" OR src_owner_$field$=""$value$"" OR dest_owner_$field$=""$value$"" OR dvc_owner_$field$=""$value$"")"
get_expected_views,"lookup local=true expected_views_lookup app,view OUTPUT app,is_expected | `str_to_bool(is_expected)`"
get_findbest_qualitative,"inputlookup append=T qualitative_thresholds_lookup | sort - threshold | eval n=1 | streamstats sum(n) as rank | eval threshold=if(rank==1 and threshold<1,1.0,threshold),threshold_id=""findbest_th="".threshold | sort threshold | eval subcase=""'"".threshold_id.""'=\""1.0\"",\"""".qualitative_label.""\"""" | stats values(subcase) as search | eval search=""current_count_qual=case("".mvjoin(search, "","")."",1=1,\""unknown\"")"""
get_findbest_thresholds,"inputlookup append=T qualitative_thresholds_lookup | sort - threshold | eval n=1 | streamstats sum(n) as rank | eval threshold=if(rank==1 and threshold<1,1.0,threshold) | stats values(threshold) as search | eval search=""threshold=\"""".mvjoin(mvsort(search), "","").""\"""""
get_foresttrust_with_powershell_filter,search *
get_foresttrust_with_powershell_script_block_filter,search *
get_governance(1),"(tag=""$value$"" OR governance=""$value$"")"
get_governance(2),`get_governance($governance$)` `get_control($control$)`
get_identity4events(1),"lookup update=true identity_lookup_expanded identity as $username$ OUTPUTNEW `prepend_alias_identities($username$)` | lookup identity_lookup_default_fields key as $username$ OUTPUTNEW watchlist as $username$_watchlist | eval `mvappend_field_meval(tag,$username$_identity_tag)`,`iden_mktime_meval($username$_startDate)`,`iden_mktime_meval($username$_endDate)`"
get_indexer_guid,"rex field=_bkt "".*~(?<indexer_guid>.+)"""
get_indexer_guid_meval,"indexer_guid=replace(_bkt,"".*~(.+)"",""\1"")"
get_integer_seq,"eval sub_raw=substr(_raw,11) | rex field=sub_raw max_match=10 ""(?<integer_seq>(?:\d+[\s]*){14,}|(?:\d+[-]*){14,})"""
get_interesting_ports,"lookup interesting_ports_lookup transport,dest_port,dest OUTPUTNEW is_required,is_prohibited,is_secure,note | fillnull value=""undefined"" is_required,is_prohibited,is_secure | `lower(is_required)` | `lower(is_prohibited)` | `lower(is_secure)`"
get_interesting_processes,"lookup interesting_processes_lookup app as process,dest OUTPUTNEW is_required,is_prohibited,is_secure,note | fillnull value=""undefined"" is_required,is_prohibited,is_secure | `lower(is_required)` | `lower(is_prohibited)` | `lower(is_secure)`"
get_interesting_services,"lookup interesting_services_lookup app as service,dest OUTPUTNEW is_required,is_prohibited,is_secure,note | fillnull value=""undefined"" is_required,is_prohibited,is_secure | `lower(is_required)` | `lower(is_prohibited)` | `lower(is_secure)`"
get_ksi_direction(3),"eval ""$outfield$""=if(!(isnum('$curr$') and isnum('$prev$')), ""undefined"", if('$curr$' > '$prev$', ""increasing"", if('$curr$' < '$prev$', ""decreasing"", ""unchanged"")))"
get_ksi_fields(2),"`get_ksi_fields($curr$,$prev$,""true"",0)`"
get_ksi_fields(4),"`convert_ksi_nonnumeric($curr$,$curr$,""$convert$"",$convert_to$)` | `convert_ksi_nonnumeric($prev$,$prev$,""$convert$"",$convert_to$)` | `get_ksi_direction($curr$,$prev$,""direction"")` | `get_ksi_percent_change($curr$,$prev$,""delta"")`"
get_ksi_percent_change(3),"`get_ksi_percent_change($curr$,$prev$,$outfield$,""true"")`"
get_ksi_percent_change(4),"eval ""$outfield$""=case((isnull('$curr$') or isnull('$prev$')) and convert!=""true"", ""undefined"", '$curr$'=='$prev$', 0, isnum('$curr$') and '$curr$'!=0 and ('$prev$'==0 or !isnum('$prev$')), '$curr$'/abs('$curr$') * 100.00, isnum('$prev$') and '$prev$'!=0 and ('$curr$'==0 or !isnum('$curr$')), (0-'$prev$')/abs('$prev$') * 100, isnum('$curr$') and isnum('$prev$') and '$prev$'!=0 and '$curr$'!=0, ('$curr$'-'$prev$')/'$prev$' * 100.0, 1==1, 0) | eval ""$outfield$""=if(isnum('$outfield$'),round('$outfield$', 2), '$outfield$')"
get_mitre_annotations,"lookup mitre_attack_lookup mitre_technique_id as annotations.mitre_attack OUTPUTNEW mitre_description as annotations.mitre_attack.mitre_description,mitre_detection as annotations.mitre_attack.mitre_detection,mitre_platform as annotations.mitre_attack.mitre_platform,mitre_software_name as annotations.mitre_attack.mitre_software_name,mitre_software_platform as annotations.mitre_attack.mitre_software_platform,mitre_software_type as annotations.mitre_attack.mitre_software_type,mitre_software_url as annotations.mitre_attack.mitre_software_url,mitre_tactic as annotations.mitre_attack.mitre_tactic,mitre_tactic_id as annotations.mitre_attack.mitre_tactic_id,mitre_technique as annotations.mitre_attack.mitre_technique,mitre_technique_id as annotations.mitre_attack.mitre_technique_id,mitre_threat_group_aliases as annotations.mitre_attack.mitre_threat_group_aliases,mitre_threat_group_id as annotations.mitre_attack.mitre_threat_group_id,mitre_threat_group_name as annotations.mitre_attack.mitre_threat_group_name,mitre_threat_group_url as annotations.mitre_attack.mitre_threat_group_url,mitre_url as annotations.mitre_attack.mitre_url"
get_mv_item0(1),"replace(mvindex($field$, 0), ""(?<!\\\\)[|].*"", """")"
get_namespace,lookup local=true sourcetype2namespace sourcetype OUTPUT namespace
get_notable_disposition,"eval temp_disposition=if(isnull(disposition),-3,disposition) | lookup update=true disposition_lookup _key as temp_disposition OUTPUT status as disposition,label as disposition_label,description as disposition_description,default as disposition_default | eval disposition=if(isnull(disposition),""disposition:0"",disposition),disposition_label=if(isnull(disposition_label),""Unassigned"",disposition_label),disposition_description=if(isnull(disposition_description),""An error is preventing the event from having a valid disposition."",disposition_description),`str_to_bool_meval(disposition_default)` | fields - temp_disposition"
get_notable_index,index=notable
get_notable_type,"eval notable_type=if(isnotnull(risk_object) AND isnotnull(risk_object_type), ""risk_event"", ""notable"")"
get_orig_source,"eval orig_source=if(isnotnull(source_correlation_search), source_correlation_search, orig_source)"
get_owner,"eval owner=case(isnotnull(owner),owner,isnotnull(default_owner),default_owner,1=1,""unassigned"") | `get_realname(owner)` | `get_realname(creator)`"
get_pci_domain(1),"(pci_domain=""$domain$"" OR (host_pci_domain=""$domain$"" NOT sourcetype=stash) OR orig_host_pci_domain=""$domain$"" OR src_pci_domain=""$domain$"" OR dest_pci_domain=""$domain$"" OR dvc_pci_domain=""$domain$"")"
get_percentage_qualitative(2),"eval ""$output$""=case(!isnum('$input$'),""unknown"",abs('$input$')>=90,""extremely"",abs('$input$')>=75,""greatly"",abs('$input$')>=50,""moderately"",abs('$input$')>=25,""slightly"",1=1,""minimally"")"
get_primary_function(1),"lookup primary_function_lookup $type$ OUTPUTNEW is_primary,function | `str_to_bool(is_primary)`"
get_primary_function-port,"`get_primary_function(""transport,port as dest_port"")`"
get_priority,eval `get_priority_meval` | fields - priorities
get_priority_meval,"priorities=lower(mvappend(priority, host_priority, orig_host_priority, src_priority, dest_priority, dvc_priority, src_user_priority, user_priority, host_owner_priority, orig_host_owner_priority, src_owner_priority, dest_owner_priority, dvc_owner_priority)),priority=case(priorities=""critical"", ""critical"", priorities=""high"", ""high"", priorities=""medium"", ""medium"", priorities=""low"", ""low"", priorities=""informational"", ""informational"", 1==1, ""unknown"")"
get_qualitative_lower_threshold(1),"inputlookup append=T qualitative_thresholds_lookup where qualitative_id=""$qualitative_id$"" | rename threshold as lower_threshold | return lower_threshold | eval search=replace(search,""\"""","""")"
get_qualitative_threshold(1),"inputlookup append=T qualitative_thresholds_lookup where qualitative_id=""$qualitative_id$"" | return threshold | eval search=replace(search,""\"""","""")"
get_qualitative_upper_threshold(1),"inputlookup append=T qualitative_thresholds_lookup where qualitative_id=""$qualitative_id$"" | rename threshold as upper_threshold | return upper_threshold | eval search=replace(search,""\"""","""")"
get_realname(1),"lookup update=true user_realnames_lookup user as ""$user$"" OUTPUTNEW realname as ""$user$_realname"" | eval ""$user$_realname""=if(isnull('$user$_realname'),'$user$','$user$_realname')"
get_reviewstatuses,"eval temp_status=if(isnull(status),-1,status) | lookup update=true reviewstatuses_lookup _key as temp_status OUTPUT status,label as status_label,description as status_description,default as status_default,end as status_end | eval status=if(isnull(status_label),0,status),status_label=if(isnull(status_label),""Unassigned"",status_label),status_description=if(isnull(status_description),""unknown"",status_description),`str_to_bool_meval(status_default)`,`str_to_bool_meval(status_end)`,status_group=case(status_default==""true"",""New"",status_end==""true"",""Closed"",status=0,""New"",1=1,""Open"") | fields - temp_status"
get_risk_index,index=risk
get_risk_severity(1),"eval severity=case('$score$'<100, ""low"", '$score$'>=100 and '$score$'<250, ""medium"", '$score$'>=250 and '$score$'<500, ""high"", '$score$'>=500, ""critical"")"
get_rule_description,eval `get_rule_description_meval`
get_rule_description_meval,"rule_description=case(isnotnull(rule_description),rule_description,isnotnull(savedsearch_description),savedsearch_description,1=1,""unknown"")"
get_rule_id(1),eval rule_id='$fields$'
get_rule_title,eval `get_rule_title_meval`
get_rule_title_meval,"rule_name=if(isnull(rule_name),source,rule_name),rule_title=if(isnull(rule_title),rule_name,rule_title)"
get_second2lastTime_meval(3),"""$second$""=mvdedup(mvappend('$second$',NULL,'$last_vals$')),`mvfilter_field_meval($second$,$last$)`,""$second$""=max('$second$')"
get_selected_enclave_id,appendcols [| rest splunk_server=local count=0 /servicesNS/nobody/missioncontrol/configs/conf-intelligence_management/im | rename enclave_ids as selected_enclave_ids | table selected_enclave_ids] | filldown selected_enclave_ids
get_sequenced_index,index=sequenced_events
get_severity_meval,"severities=if(in(lower(severity), ""critical"", ""high"", ""medium"", ""low"", ""informational""),lower(severity),""unknown""),severity=case(severities=""critical"", ""critical"", severities=""high"", ""high"", severities=""medium"", ""medium"", severities=""low"", ""low"", severities=""informational"", ""informational"", 1==1, ""unknown"")"
get_signature(1),"(signature=""*$value$*"" OR signature_id=""*$value$*"")"
get_src_user_only(1),"(src_user=""$src_user$"" OR src_user_identity=""$src_user$"")"
get_stdev_index(1),eval Z=(('$intField$'-'mean_$intField$')/stdev)
get_subject(2),"($subjectField$=""$bestmatch$"" OR $subjectField$_ip=""$bestmatch$"" OR $subjectField$_mac=""$bestmatch$"" OR $subjectField$_nt_host=""$bestmatch$"" OR $subjectField$_dns=""$bestmatch$"")"
get_summary(2),"index=""$index$"" search_name=""$search_name$"" | `makemv(orig_tag)` | `mvappend_field(tag,orig_tag)`"
get_suppression_end_time,"rex field=search ""_time<=?(?<end_time>\d+)"""
get_suppression_start_time,"rex field=search ""_time>=?(?<start_time>\d+)"""
get_threat_attribution(1),"lookup update=true threat_group_intel _key as ""$key$"" OUTPUTNEW | fillnull value=""undefined"" threat_group,threat_category"
get_threat_attribution_weight(1),"lookup update=true threat_group_intel _key as ""$key$"" OUTPUTNEW weight"
get_threat_download_status,"rex field=threat_key "".*?\|(?<threatlist_title>.+)_TAXII"" | eval threatlist_title=if(isnull(threatlist_title),threat_key,threatlist_title) | join type=outer threatlist_title [| rest splunk_server=local count=0 /services/data/inputs/threatlist | rename title as threatlist_title | table threatlist_title, disabled] | fields - threatlist_title"
get_tld,extract tld_extract | rename tld as tld_candidate | lookup update=true cim_http_tld_lookup tld as tld_candidate OUTPUT tld
get_tld(1),"rex field=$domain$ "".*\.(?<tld_candidate>.+)"" | lookup update=true cim_http_tld_lookup tld as tld_candidate OUTPUT tld"
get_transport_dest_port,"fillnull value=unknown transport | fillnull value=0 dest_port | eval transport_dest_port=transport.""/"".dest_port"
get_update_signature,"lookup update=true update_signature_reference_lookup signature_id,vendor_product OUTPUTNEW signature"
get_urgency,"eval `get_severity_meval`,`get_priority_meval` | lookup local=true urgency_lookup priority,severity OUTPUTNEW urgency | eval urgency=if(in(lower(urgency), ""critical"", ""high"", ""medium"", ""low"", ""informational""), lower(urgency), ""unknown"")"
get_user(1),(`get_src_user_only($user$)` OR `get_user_only($user$)`)
get_user_only(1),"(user=""$user$"" OR user_identity=""$user$"")"
get_vendor_product,"eval vendor_product=case(isnotnull(vendor_product),vendor_product,isnotnull(vendor) AND vendor!=""unknown"" AND isnotnull(product) AND product!=""unknown"",vendor."" "".product,isnotnull(vendor) AND vendor!=""unknown"" AND (isnull(product) OR product=""unknown""),vendor."" unknown"",(isnull(vendor) OR vendor=""unknown"") AND isnotnull(product) AND product!=""unknown"",""unknown "".product,isnotnull(sourcetype),sourcetype,1=1,""unknown"")"
get_vuln_signature_reference,"lookup local=true vuln_signature_reference signature OUTPUTNEW cve,bugtraq,cert,msft,mskb,xref | `makemv(cve)` | `makemv(bugtraq)` | `makemv(cert)` | `makemv(msft)` | `makemv(mskb)` | `makemv(xref)` | fillnull value="""" cve,bugtraq,cert,msft,mskb,xref"
get_whois,"`truncate_domain(dest, domain)` | lookup update=true whois_tracker domain OUTPUT _time as newly_seen,resolved_domain,created | eval created=if(match(created,""^\d{4}-\d{2}-\d{2}$""),strptime(created,""%Y-%m-%d""),created)"
get_wmiobject_group_discovery_filter,search *
get_wmiobject_group_discovery_with_script_block_logging_filter,search *
getadcomputer_with_powershell_filter,search *
getadcomputer_with_powershell_script_block_filter,search *
getadgroup_with_powershell_filter,search *
getadgroup_with_powershell_script_block_filter,search *
getcurrent_user_with_powershell_filter,search *
getcurrent_user_with_powershell_script_block_filter,search *
getdomaincomputer_with_powershell_filter,search *
getdomaincomputer_with_powershell_script_block_filter,search *
getdomaincontroller_with_powershell_filter,search *
getdomaincontroller_with_powershell_script_block_filter,search *
getdomaingroup_with_powershell_filter,search *
getdomaingroup_with_powershell_script_block_filter,search *
getlocaluser_with_powershell_filter,search *
getlocaluser_with_powershell_script_block_filter,search *
getnettcpconnection_with_powershell_filter,search *
getnettcpconnection_with_powershell_script_block_filter,search *
getwmiobject_ds_computer_with_powershell_filter,search *
getwmiobject_ds_computer_with_powershell_script_block_filter,search *
getwmiobject_ds_group_with_powershell_filter,search *
getwmiobject_ds_group_with_powershell_script_block_filter,search *
getwmiobject_ds_user_with_powershell_filter,search *
getwmiobject_ds_user_with_powershell_script_block_filter,search *
getwmiobject_user_account_with_powershell_filter,search *
getwmiobject_user_account_with_powershell_script_block_filter,search *
github,sourcetype=aws:firehose:json
github_actions_disable_security_workflow_filter,search *
github_commit_changes_in_master_filter,search *
github_commit_in_develop_filter,search *
github_dependabot_alert_filter,search *
github_known_users,user IN (user_names_here)
github_pull_request_from_unknown_user_filter,search *
globedistance(5),"`globedistance(""distance"",$lat1$,$long1$,$lat2$,$long2$,$units$,2)`"
globedistance(7),"eval lat1_r='$lat1$'*pi()/180 | eval lat2_r='$lat2$'*pi()/180 | eval delta=('$long2$'-'$long1$')*pi()/180 | eval R=if('$units$'=""m"",3959, 6372.8) | eval ""$outfield$""=R*acos(sin(lat1_r)*sin(lat2_r) + cos(lat1_r) * cos(lat2_r) * cos(delta)) | eval ""$outfield$""=round('$outfield$', $precision$) | fields - lat1_r,lat2_r,long1_r,long2_r,R,delta"
google_gcp_pubnet_message,"sourcetype=""google:gcp:pubsub:message"""
google_gcp_pubsub_message,"sourcetype=""google:gcp:pubsub:message"""
governance,inputlookup append=T governance_lookup | stats count by governance | fields - count
governance_lookup,"eval governance_lookup_type=""default"" | lookup update=true governance_lookup savedsearch as source, lookup_type as governance_lookup_type OUTPUT governance, control | eval governance_lookup_type=""tag"" | lookup update=true governance_lookup savedsearch as source, tag, lookup_type as governance_lookup_type OUTPUT governance as governance_tag, control as control_tag | eval ""governance""=mvappend('governance',NULL,'governance_tag'),""control""=mvappend('control',NULL,'control_tag') | fields - governance_lookup_type,governance_tag,control_tag"
gpupdate_with_no_command_line_arguments_with_network_filter,search *
group_filter(1),"| inputlookup em_groups where _key=$group_id$ | table filter | makemv delim="","" filter | mvexpand filter | rex field=filter ""(?<dim>.*)=(?<val>.*)"" | table dim, val | stats values(val) by dim | transpose 0 header_field=dim | fields - column"
gsuite_calendar,sourcetype=gsuite:calendar:json
gsuite_drive,sourcetype=gsuite:drive:json
gsuite_drive_share_in_external_email_filter,search *
gsuite_email_suspicious_attachment_filter,search *
gsuite_email_suspicious_subject_with_attachment_filter,search *
gsuite_email_with_known_abuse_web_service_link_filter,search *
gsuite_gmail,sourcetype=gsuite:gmail:bigquery
gsuite_outbound_email_with_attachment_to_external_domain_filter,search *
gsuite_suspicious_calendar_invite_filter,search *
gsuite_suspicious_shared_file_name_filter,search *
gws_login_mfa_methods,"event.parameters{}.multiValue{} IN (""backup_code"", ""google_authenticator"", ""google_prompt"", ""idv_any_phone"", ""idv_preregistered_phone"", ""internal_two_factor"", ""knowledge_employee_id"", ""knowledge_preregistered_email"", ""login_location"", ""knowledge_preregistered_phone"", ""offline_otp"", ""security_key"", ""security_key_otp"")"
gws_reports_admin,sourcetype=gws:reports:admin
gws_reports_login,sourcetype=gws:reports:login
hash_admission_rule_predicate(1),"rex field=predicate ""^(?<beforeStr>.*$arg$\s*=\s*)(?<value>\S+)(?<afterStr>.*)"" | eval predicate=beforeStr.sha1(value).afterStr"
hash_alg,md5
health_filter(1),"(nodename=All_Records)(All_Records.CONNECTION=""$Connection$"")"
health_filter(2),"(nodename=All_Records)(All_Records.CONNECTION=""$Connection$"")(All_Records.DB_USER=""$Login$"")"
health_filter(3),"(nodename=All_Records)(All_Records.CONNECTION=""$Connection$"")(All_Records.DB_USER=""$Login$"")(All_Records.FUNCTION=""$Function$"")"
health_transaction_filter(3),"search CONNECTION=""$CONNECTION$"" DB_USER=""$DB_USER$"" FUNCTION=""$FUNCTION$"""
hide_user_account_from_sign_in_screen_filter,search *
hiding_files_and_directories_with_attrib_exe_filter,search *
high_frequency_copy_of_files_in_network_share_filter,search *
high_number_of_login_failures_from_a_single_source_filter,search *
high_process_termination_frequency_filter,search *
histogram(2),"bin ""$var$"" bins=$bins$ | stats count by ""$var$"" | makecontinuous ""$var$"" | fillnull count"
histperc(3),"sort $le$ | eventstats max($hist_rate$) as total_hist_rate, last($le$) as uppermost_bound, count as num_buckets | eval rank=exact($perc$)*total_hist_rate | streamstats current=f last($le$) as gr, last($hist_rate$) as last_hist_rate | eval gr=if(isnull(gr), 0, gr), last_hist_rate=if(isnull(last_hist_rate), 0, last_hist_rate) | where $hist_rate$ >= rank | head 1 | eval res=case(lower(uppermost_bound) != ""+inf"" or num_buckets < 2, ""NaN"", lower($le$) == ""+inf"", gr, gr == 0 and $le$ <= 0, $le$, true(), exact(gr + ($le$-gr)*(rank - last_hist_rate) / ($hist_rate$ - last_hist_rate))) | fields res | rename res as ""histperc"""
histperc(4),"sort $groupby$, $le$ | eventstats max($hist_rate$) as total_hist_rate, last($le$) as uppermost_bound, count as num_buckets by $groupby$ | eval rank=exact($perc$)*total_hist_rate | streamstats current=f last($le$) as gr, last($hist_rate$) as last_hist_rate by $groupby$ | eval gr=if(isnull(gr), 0, gr), last_hist_rate=if(isnull(last_hist_rate), 0, last_hist_rate) | where $hist_rate$ >= rank | dedup $groupby$ | eval res=case(lower(uppermost_bound) != ""+inf"" or num_buckets < 2, ""NaN"", lower($le$) == ""+inf"", gr, gr == 0 and $le$ <= 0, $le$, true(), exact(gr + ($le$-gr)*(rank - last_hist_rate) / ($hist_rate$ - last_hist_rate))) | fields $groupby$, res | rename res as ""histperc"""
host_equal_local,rest splunk_server=local count=0 /services/server/info | table serverName | rename serverName as host
host_eventcount,"`host_eventcount(""*"")`"
host_eventcount(1),"metadata type=hosts index=$index$ | `lower(host)` | stats min(firstTime) as firstTime,max(recentTime) as recentTime,max(lastTime) as lastTime,sum(totalCount) as totalCount by host | eval _time=lastTime | `get_asset(host)` | `get_identity4events(host_owner)` | eval is_expected=host_is_expected | eval dayDiff=round((now()-lastTime)/86400,2) | sort 0 -dayDiff"
host_eventcount(2),"`host_eventcount` | `daysago($lessThan$)` | `hoursago($greaterThan$,"">"")`"
hosts_receiving_high_volume_of_network_traffic_from_email_server_filter,search *
hourDiff,`hourDiff(_time)`
hourDiff(1),eval hourDiff=((time()-'$field$')/3600)
hoursago(1),"`hoursago($num$,""<"")`"
hoursago(2),`hourDiff` | search hourDiff$comparator$$num$
http_category_sparkline_earliest,-24h@h
http_category_sparkline_span,1h
http_intel,`http_intel_by_threat_key(*)`
http_intel_by_threat_key(1),"inputlookup append=T http_intel where threat_key=""$threat_key$"" | fillnull value=0 updated,disabled | `set_threat_collection_name(""http_intel"")` | `get_threat_attribution_weight(threat_key)`"
http_intel_stats,"dc(http_user_agent),dc(http_referrer),dc(url),dc(header),dc(ip),dc(domain)"
http_user_agent_sparkline_earliest,-24h@h
http_user_agent_sparkline_span,1h
hunting_3cxdesktopapp_software_filter,search *
hunting_for_log4shell_filter,search *
icacls_deny_command_filter,search *
icacls_grant_command_filter,search *
icedid_exfiltrated_archived_file_creation_filter,search *
iden_mktime,"eval `iden_mktime_meval(startDate)`,`iden_mktime_meval(endDate)`"
iden_mktime(1),eval `iden_mktime_meval($field$)`
iden_mktime_meval(1),"""$field$""=case(isnum('$field$'),'$field$',isnum(strptime('$field$',""%m/%d/%Y %H:%M"")),strptime('$field$',""%m/%d/%Y %H:%M""),isnum(strptime('$field$',""%m/%d/%y %H:%M"")),strptime('$field$',""%m/%d/%y %H:%M""),1=1,'$field$')"
identify_new_user_accounts_filter,search *
identities,"inputlookup append=T identity_lookup_expanded | rename _key as identity_id | table identity_id,`identity_fields`"
identities(1),"inputlookup append=T identity_lookup_expanded where $filters$ | rename _key as identity_id | table identity_id,`identity_fields`"
identity_categories,"inputlookup append=T category_lookup WHERE category_source!=""asset"" | `lower(category)` | dedup category | sort + category | fields category"
identity_correlation_timeout,30
identity_fields,"bunit,category,email,endDate,first,identity,identity_tag,last,managedBy,nick,phone,prefix,priority,startDate,suffix,watchlist,work_city,work_country,work_lat,work_long"
identity_search(1),"`get_events4identity(identity, ""$val$"")` OR `get_events4identity(prefix, ""$val$"")` OR `get_events4identity(nick, ""$val$"")` OR `get_events4identity(first, ""$val$"")` OR `get_events4identity(last, ""$val$"")` OR `get_events4identity(suffix, ""$val$"")` OR `get_events4identity(email, ""$val$"")` OR `get_events4identity(phone, ""$val$"")` OR `get_events4identity(managedBy, ""$val$"")` OR `get_events4identity(priority, ""$val$"")` OR `get_events4identity(bunit, ""$val$"")` OR `get_events4identity(category, ""$val$"")` OR `get_events4identity(watchlist, ""$val$"")` OR `get_events4identity(startDate, ""$val$"")` OR `get_events4identity(endDate, ""$val$"")`"
identity_search(2),"(`get_events4identity(first, ""$first$"")` `get_events4identity(last, ""$last$"")`) OR (`get_events4identity(last, ""$first$"")` `get_events4identity(first, ""$last$"")`)"
identity_sources,inputlookup append=t administrative_identity_lookup | inputlookup append=t windows_captioncall_identities_lookup | inputlookup append=t windows_sorenson_identities_lookup
ids_attack,"tag=ids tag=attack | tags outputfield=tag | fillnull value=unknown dvc,category,ids_type,severity,signature,src,dest,user | `lower(transport)` | fillnull value=0 src_port,dest_port | `get_vendor_product` | `remap_subjects`"
ids_attack_tracker,inputlookup append=T ids_attack_tracker
ids_attack_tracker(1),"inputlookup append=T ids_attack_tracker where `tracker_trp($timefield$,$timefield$)`"
ids_category_tracker,inputlookup append=T ids_category_tracker | dedup category | eval category_lower=lower(category) | sort + category
iis_get_webglobalmodule,"sourcetype=""Pwsh:InstalledIISModules"""
iis_operational_logs,"sourcetype=""IIS:Configuration:Operational"""
impacket_lateral_movement_commandline_parameters_filter,search *
impacket_lateral_movement_smbexec_commandline_parameters_filter,search *
impacket_lateral_movement_wmiexec_commandline_parameters_filter,search *
inactive_account_usage(2),"inputlookup append=T access_tracker where [| makeresults | `make_ts_value(""-$lessThan$h"",lastTime_user)` | eval search=""lastTime_user>="".lastTime_user | return $search] | stats min(firstTime) as firstTime,values(second2lastTime) as second2lastTime,values(lastTime) as lastTime_vals,max(lastTime) as lastTime by user | eval `get_second2lastTime_meval(second2lastTime,lastTime_vals,lastTime)`,inactiveDays=round((lastTime-second2lastTime)/86400,2),_time=lastTime | search inactiveDays>=$greaterThan$ | `get_identity4events(user)`"
inactive_accounts(1),"inputlookup append=T access_tracker where [| makeresults | `make_ts_value(""-$greaterThan$d"",lastTime_user)` | eval search=""lastTime_user<="".lastTime_user | return $search] | stats min(firstTime) as firstTime,max(lastTime) as lastTime by user | eval _time=lastTime,inactiveDays=round(((time()-lastTime)/86400),2) | `get_identity4events(user)`"
incident_review,"inputlookup append=T incident_review_lookup | rename user as reviewer | `get_realname(owner)` | `get_realname(reviewer)` | eval nullstatus=if(isnull(status),""true"",""false"") | `get_reviewstatuses` | eval status=if((isnull(status) OR isnull(status_label)) AND nullstatus==""false"",0,status) | eval status_label=if(isnull(status_label) AND nullstatus==""false"",""Unassigned"",status_label) | eval status_description=if(isnull(status_description) AND nullstatus==""false"",""unknown"",status_description) | eval _time=time | `uitime(time)` | fields - nullstatus"
incident_review_analyst_capacity,12
incident_review_capacity,"`notable_owners` | search owner!=""unassigned"" | stats count as analyst_count | eval incident_review_capacity=analyst_count*`incident_review_analyst_capacity`"
index_thruput(1),"index=_internal source=""*metrics.log*"" group=per_$metric$_thruput | eval KBytes=kb | eval MBytes=KBytes/1024 | eval GBytes=MBytes/1024 | eval KBps=kbps | eval MBps=KBps/1024 | eval GBps=MBps/1024"
index_time_delta,"index=endpoint_summary source=""Endpoint - Index Time Delta 2 - Summary Gen"" | rename orig_* as * | rename tag::orig_* as tag::*"
infer_logouts(1),"streamstats current=false global=false window=1 first(startTime) as endTime by $field$ | eval endTime=if(isnotnull(endTime),endTime-1,endTime) | fields _time,ip,mac,nt_host,dns,user,startTime,endTime"
instrumentation_distribution_strings(3),"""\""avg\"":""+`instrumentation_number_format($name$_avg,$multiplier$,$round_digits$)` + "","" + ""\""min\"":""+`instrumentation_number_format($name$_min,$multiplier$,$round_digits$)` + "","" + ""\""max\"":""+`instrumentation_number_format($name$_max,$multiplier$,$round_digits$)` + "","" + ""\""p10\"":""+`instrumentation_number_format($name$_p10,$multiplier$,$round_digits$)` + "","" + ""\""p20\"":""+`instrumentation_number_format($name$_p20,$multiplier$,$round_digits$)` + "","" + ""\""p30\"":""+`instrumentation_number_format($name$_p30,$multiplier$,$round_digits$)` + "","" + ""\""p40\"":""+`instrumentation_number_format($name$_p40,$multiplier$,$round_digits$)` + "","" + ""\""p50\"":""+`instrumentation_number_format($name$_p50,$multiplier$,$round_digits$)` + "","" + ""\""p60\"":""+`instrumentation_number_format($name$_p60,$multiplier$,$round_digits$)` + "","" + ""\""p70\"":""+`instrumentation_number_format($name$_p70,$multiplier$,$round_digits$)` + "","" + ""\""p80\"":""+`instrumentation_number_format($name$_p80,$multiplier$,$round_digits$)` + "","" + ""\""p90\"":""+`instrumentation_number_format($name$_p90,$multiplier$,$round_digits$)`"
instrumentation_distribution_values(1),avg($name$) as $name$_avg min($name$) as $name$_min max($name$) as $name$_max perc10($name$) as $name$_p10 perc20($name$) as $name$_p20 perc30($name$) as $name$_p30 perc40($name$) as $name$_p40 perc50($name$) as $name$_p50 perc60($name$) as $name$_p60 perc70($name$) as $name$_p70 perc80($name$) as $name$_p80 perc90($name$) as $name$_p90
instrumentation_number_format(3),"tostring(coalesce(round($name$*$multiplier$,$round_digits$), ""null""))"
interactive_session_on_remote_endpoint_with_powershell_filter,search *
interpolateColor(4),"| eval _col1 = $col1$ | eval _col2 = $col2$ | eval _lerpt = $lerpt$ | eval _outcolor = ""#ZZZZZZ"" | eval _lerpt = if(_lerpt > 1, 1.0, _lerpt) | eval _lerpt = if(_lerpt < 0.0, 0.0, _lerpt) `splitColorIntoComponents(_col1, ""_col1r"", ""_col1g"", ""_col1b"")` `splitColorIntoComponents(_col2, ""_col2r"", ""_col2g"", ""_col2b"")` | eval _deltaRed = _col2r - _col1r, _deltaGreen = _col2g - _col1g, _deltaBlue = _col2b - _col1b | eval _outRed = _col1r + _lerpt * _deltaRed, _outGreen = _col1g + _lerpt * _deltaGreen, _outBlue = _col1b + _lerpt * _deltaBlue `genColorFromComponents(_outRed, _outGreen, _outBlue, ""_outcolor"")` | eval $outcolorfieldname$ = _outcolor"
investigation_annotate_status,"`investigation_annotate_status(status_id, status_end)`"
investigation_annotate_status(2),"join type=outer ""$status_id_field$"" [| rest splunk_server=local count=0 /services/alerts/reviewstatuses | search status_type=investigation | rename title as ""$status_id_field$"", end as ""$output_field$""| fields ""$status_id_field$"", ""$output_field$""]"
investigation_get_collaborator_count,"`investigation_get_collaborator_count(collaborators, collaborator_count)`"
investigation_get_collaborator_count(2),"spath output=""temp_es_$collaborators_field$"" input=""$collaborators_field$"" path={} | eval ""$output_field$""=mvcount('temp_es_$collaborators_field$') | eval ""$output_field$""=if(isNull('$output_field$'), 0, '$output_field$') | fields - temp_es_*"
investigation_get_current_status,"`investigation_get_current_status(status, current_status)`"
investigation_get_current_status(2),"spath output=""temp_es_$status_field$"" input=""$status_field$"" path={} | spath output=""$output_field_prefix$_name"" input=""temp_es_$status_field$"" path=name | spath output=""$output_field_prefix$_id"" input=""temp_es_$status_field$"" path=id | spath output=""$output_field_prefix$_time"" input=""temp_es_$status_field$"" path=time | fields - temp_es_* | `investigation_annotate_status($output_field_prefix$_id, $output_field_prefix$_end)`"
investigation_get_open_duration(2),"`investigation_get_status_transistion($status_field$, temp_transition_es_$status_field$)` | eval ""temp_transition_es_$output_field$""=if('temp_transition_es_$status_field$_prev_end'=0,abs('temp_transition_es_$status_field$_time'-'temp_transition_es_$status_field$_prev_time'), 0) | stats sum(""temp_transition_es_$output_field$"") as ""$output_field$"", last(*) as * by id | eval ""$output_field$""=if(current_status_end=0,'$output_field$'+now()-current_status_time, '$output_field$') | fields - temp_transition_es_*"
investigation_get_reopen_count,"`investigation_get_reopen_count(status, status_reopen_count)`"
investigation_get_reopen_count(2),"`investigation_get_status_transistion($status_field$, transition_$status_field$)` | eval temp_es_reopen=if('transition_$status_field$_prev_end'=1 AND 'transition_$status_field$_end'=0, 1, 0) | fields - transition_* | stats sum(temp_es_reopen) as ""$output_field$"", first(*) as * by title | fields - temp_es_reopen"
investigation_get_status_transistion(2),"spath output=""temp_es_$status_field$"" input=""$status_field$"" path={} | mvexpand ""temp_es_$status_field$"" | spath output=""$output_field_prefix$_name"" input=""temp_es_$status_field$"" path=name | spath output=""$output_field_prefix$_id"" input=""temp_es_$status_field$"" path=id | spath output=""$output_field_prefix$_time"" input=""temp_es_$status_field$"" path=time | sort 0 + title, ""$output_field_prefix$_time"" | `investigation_annotate_status($output_field_prefix$_id, $output_field_prefix$_end)` | fields - temp_es_* | streamstats current=t window=2 first(""$output_field_prefix$_end"") as $output_field_prefix$_prev_end, min($output_field_prefix$_time) as $output_field_prefix$_prev_time by title"
investigations,rest splunk_server=local count=0 /services/storage/investigation/investigation
investigationstatuses,"inputlookup append=T investigationstatuses_lookup | rename label as status_label,description as status_description | `investigationstatuses_exclusions`"
investigationstatuses_exclusions,search _key!=-2 NOT ((disabled=1 OR disabled=t OR disabled=true) AND (hidden=1 OR hidden=t OR hidden=true))
ip_intel,`ip_intel_by_threat_key(*)`
ip_intel_by_threat_key(1),"inputlookup append=T ip_intel where threat_key=""$threat_key$"" | fillnull value=0 updated,disabled | `set_threat_collection_name(""ip_intel"")` | `get_threat_attribution_weight(threat_key)`"
ip_intel_stats,"dc(ip),dc(domain)"
ipv4_cidr_regex,"""^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}/(\d|[12]\d|3[012])$"""
ipv4_regex,"""^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$"""
is_net_windows_file,lookup update=true is_net_windows_file filename as process_name OUTPUT netFile | lookup update=true is_net_windows_file originalFileName as original_file_name OUTPUT netFile | search netFile=true
is_nirsoft_software,lookup update=true is_nirsoft_software filename as process_name OUTPUT nirsoftFile | search nirsoftFile=true
is_traffic_prohibited(1),"`is_traffic_prohibited($field$, ""category"")` | rename ""$field$_is_prohibited"" as is_prohibited | rename ""$field$_is_secure"" as is_secure | fillnull value=""false"" is_prohibited | fillnull value=""unknown"" is_secure | `lower(is_prohibited)` | `lower(is_secure)`"
is_traffic_prohibited(2),"eval ""tmp_src_$qual$""=if(isnull('src_$qual$'), ""unknown"", 'src_$qual$') | eval ""tmp_dest_$qual$""=if(isnull('dest_$qual$'), ""unknown"", 'dest_$qual$') | lookup local=true prohibited_traffic_lookup_by_$qual$ transport,""src_$qual$"" AS ""tmp_src_$qual$"",""dest_$qual$"" AS ""tmp_dest_$qual$"",dest_port AS ""$field$"" OUTPUTNEW is_prohibited as ""$field$_is_prohibited"", is_secure as ""$field$_is_secure"", note as ""$field$_note"" | fields - ""tmp_src_$qual$"" ""tmp_dest_$qual$"""
is_windows_system_file,lookup update=true is_windows_system_file filename as process_name OUTPUT systemFile | search systemFile=true
java_class_file_download_by_java_user_agent_filter,search *
java_writing_jsp_file_filter,search *
jscript_execution_using_cscript_app_filter,search *
kerberoasting_spn_request_with_rc4_encryption_filter,search *
kerberos_pre_authentication_flag_disabled_in_useraccountcontrol_filter,search *
kerberos_pre_authentication_flag_disabled_with_powershell_filter,search *
kerberos_service_ticket_request_using_rc4_encryption_filter,search *
kerberos_tgt_request_using_rc4_encryption_filter,search *
kerberos_user_enumeration_filter,search *
known_services_killed_by_ransomware_filter,search *
kube_objects_events,sourcetype=kube:objects:events
kubernetes_aws_detect_most_active_service_accounts_by_pod_filter,search *
kubernetes_aws_detect_sensitive_role_access_filter,search *
kubernetes_aws_detect_service_accounts_forbidden_failure_access_filter,search *
kubernetes_aws_detect_suspicious_kubectl_calls_filter,search *
kubernetes_azure,sourcetype=mscs:storage:blob:json
kubernetes_azure_active_service_accounts_by_pod_namespace_filter,search *
kubernetes_azure_detect_rbac_authorization_by_account_filter,search *
kubernetes_azure_detect_sensitive_object_access_filter,search *
kubernetes_azure_detect_sensitive_role_access_filter,search *
kubernetes_azure_detect_service_accounts_forbidden_failure_access_filter,search *
kubernetes_azure_detect_suspicious_kubectl_calls_filter,search *
kubernetes_azure_pod_scan_fingerprint_filter,search *
kubernetes_azure_scan_fingerprint_filter,search *
kubernetes_container_controller,sourcetype=kube:container:controller
kubernetes_gcp_detect_most_active_service_accounts_by_pod_filter,search *
kubernetes_gcp_detect_rbac_authorizations_by_account_filter,search *
kubernetes_gcp_detect_sensitive_object_access_filter,search *
kubernetes_gcp_detect_sensitive_role_access_filter,search *
kubernetes_gcp_detect_service_accounts_forbidden_failure_access_filter,search *
kubernetes_gcp_detect_suspicious_kubectl_calls_filter,search *
kubernetes_nginx_ingress_lfi_filter,search *
kubernetes_nginx_ingress_rfi_filter,search *
kubernetes_scanner_image_pulling_filter,search *
large_email_threshold,2097152
large_volume_of_dns_any_queries_filter,search *
license_info,"index=_internal source=""*license_audit.log*"" todaysBytesIndexed | eval exceedTimeDiff=now()-lastExceedDate | `ctime(lastExceedDate)` | eval peakGBytes=peak/1073741824 | eval todaysGBytesIndexed=todaysBytesIndexed/1073741824"
licensing_epd,inputlookup append=t licensing_epd | bucket _time span=1d
linux_account_manipulation_of_ssh_config_and_keys_filter,search *
linux_add_files_in_known_crontab_directories_filter,search *
linux_add_user_account_filter,search *
linux_adding_crontab_using_list_parameter_filter,search *
linux_apt_get_privilege_escalation_filter,search *
linux_apt_privilege_escalation_filter,search *
linux_at_allow_config_file_creation_filter,search *
linux_at_application_execution_filter,search *
linux_awk_privilege_escalation_filter,search *
linux_busybox_privilege_escalation_filter,search *
linux_c89_privilege_escalation_filter,search *
linux_c99_privilege_escalation_filter,search *
linux_change_file_owner_to_root_filter,search *
linux_clipboard_data_copy_filter,search *
linux_common_process_for_elevation_control_filter,search *
linux_composer_privilege_escalation_filter,search *
linux_cpulimit_privilege_escalation_filter,search *
linux_csvtool_privilege_escalation_filter,search *
linux_curl_upload_file_filter,search *
linux_data_destruction_command_filter,search *
linux_dd_file_overwrite_filter,search *
linux_decode_base64_to_shell_filter,search *
linux_deleting_critical_directory_using_rm_command_filter,search *
linux_deletion_of_cron_jobs_filter,search *
linux_deletion_of_init_daemon_script_filter,search *
linux_deletion_of_services_filter,search *
linux_deletion_of_ssl_certificate_filter,search *
linux_disable_services_filter,search *
linux_doas_conf_file_creation_filter,search *
linux_doas_tool_execution_filter,search *
linux_docker_privilege_escalation_filter,search *
linux_edit_cron_table_parameter_filter,search *
linux_emacs_privilege_escalation_filter,search *
linux_file_created_in_kernel_driver_directory_filter,search *
linux_file_creation_in_init_boot_directory_filter,search *
linux_file_creation_in_profile_directory_filter,search *
linux_find_privilege_escalation_filter,search *
linux_gdb_privilege_escalation_filter,search *
linux_gem_privilege_escalation_filter,search *
linux_gnu_awk_privilege_escalation_filter,search *
linux_hardware_addition_swapoff_filter,search *
linux_high_frequency_of_file_deletion_in_boot_folder_filter,search *
linux_high_frequency_of_file_deletion_in_etc_folder_filter,search *
linux_hosts,index=*
linux_impair_defenses_process_kill_filter,search *
linux_indicator_removal_clear_cache_filter,search *
linux_indicator_removal_service_file_deletion_filter,search *
linux_ingress_tool_transfer_hunting_filter,search *
linux_ingress_tool_transfer_with_curl_filter,search *
linux_insert_kernel_module_using_insmod_utility_filter,search *
linux_install_kernel_module_using_modprobe_utility_filter,search *
linux_iptables_firewall_modification_filter,search *
linux_java_spawning_shell_filter,search *
linux_kernel_module_enumeration_filter,search *
linux_kworker_process_in_writable_process_path_filter,search *
linux_make_privilege_escalation_filter,search *
linux_mysql_privilege_escalation_filter,search *
linux_ngrok_reverse_proxy_usage_filter,search *
linux_node_privilege_escalation_filter,search *
linux_nopasswd_entry_in_sudoers_file_filter,search *
linux_obfuscated_files_or_information_base64_decode_filter,search *
linux_octave_privilege_escalation_filter,search *
linux_openvpn_privilege_escalation_filter,search *
linux_persistence_and_privilege_escalation_risk_behavior_filter,search *
linux_php_privilege_escalation_filter,search *
linux_pkexec_privilege_escalation_filter,search *
linux_possible_access_or_modification_of_sshd_config_file_filter,search *
linux_possible_access_to_credential_files_filter,search *
linux_possible_access_to_sudoers_file_filter,search *
linux_possible_append_command_to_at_allow_config_file_filter,search *
linux_possible_append_command_to_profile_config_file_filter,search *
linux_possible_append_cronjob_entry_on_existing_cronjob_file_filter,search *
linux_possible_cronjob_modification_with_editor_filter,search *
linux_possible_ssh_key_file_creation_filter,search *
linux_preload_hijack_library_calls_filter,search *
linux_proxy_socks_curl_filter,search *
linux_puppet_privilege_escalation_filter,search *
linux_rpm_privilege_escalation_filter,search *
linux_ruby_privilege_escalation_filter,search *
linux_service_file_created_in_systemd_directory_filter,search *
linux_service_restarted_filter,search *
linux_service_started_or_enabled_filter,search *
linux_setuid_using_chmod_utility_filter,search *
linux_setuid_using_setcap_utility_filter,search *
linux_shells,"(Processes.process_name IN (""sh"", ""ksh"", ""zsh"", ""bash"", ""dash"", ""rbash"", ""fish"", ""csh"", ""tcsh"", ""ion"", ""eshell""))"
linux_shred_overwrite_command_filter,search *
linux_sqlite3_privilege_escalation_filter,search *
linux_ssh_authorized_keys_modification_filter,search *
linux_ssh_remote_services_script_execute_filter,search *
linux_stdout_redirection_to_dev_null_file_filter,search *
linux_stop_services_filter,search *
linux_sudo_or_su_execution_filter,search *
linux_sudoers_tmp_file_creation_filter,search *
linux_system_network_discovery_filter,search *
linux_system_reboot_via_system_request_key_filter,search *
linux_unix_shell_enable_all_sysrq_functions_filter,search *
linux_visudo_utility_execution_filter,search *
listeningports,"tag=listening tag=port | tags outputfield=tag | fillnull value=0 dest_port | fillnull value=""unknown"" dest,transport | eval transport=lower(transport) | `get_transport_dest_port`"
listeningports(1),dest=$host$ `listeningports`
listeningports(2),"`listeningports($host$)` | transaction _time,dest | head $limit$"
listeningports_tracker,inputlookup append=T listeningports_tracker | `get_asset(dest)` | `get_identity4events(dest_owner)`
listeningports_tracker(1),"inputlookup append=T listeningports_tracker where `tracker_trp($timefield$,$timefield$)` | `get_asset(dest)` | `get_identity4events(dest_owner)`"
living_off_the_land_filter,search *
loading_of_dynwrapx_module_filter,search *
local_account_discovery_with_net_filter,search *
local_account_discovery_with_wmic_filter,search *
localprocesses,"tag=process tag=report | tags outputfield=tag | fillnull value=""unknown"" dest,process | eval UsedMBytes=UsedBytes/1048576"
localprocesses(1),dest=$host$ `localprocesses`
localprocesses(2),"`localprocesses($host$)` | transaction _time,dest | head $limit$"
localprocesses_tracker,inputlookup append=T localprocesses_tracker | `get_asset(dest)` | `get_identity4events(dest_owner)`
localprocesses_tracker(1),"inputlookup append=T localprocesses_tracker where `tracker_trp($timefield$,$timefield$)` | `get_asset(dest)` | `get_identity4events(dest_owner)`"
log4shell_cve_2021_44228_exploitation_filter,search *
log4shell_jndi_payload_injection_attempt_filter,search *
log4shell_jndi_payload_injection_with_outbound_connection_filter,search *
log-names-search,eventtype=wineventlog_windows | stats count by LogName | sort +LogName
logon_script_event_trigger_execution_filter,search *
lolbas_with_network_traffic_filter,search *
long_running_searches(1),"`sim_set_search_head` `sim_audit_get_searches_for_groups(*)` | stats min(_time) as _time, values(user) as user, max(total_run_time) as total_run_time, first(search) as search, first(search_type) as search_type, first(search_et) as search_et, first(search_lt) as search_lt, first(api_et) as api_et, first(api_lt) as api_lt by search_id, host | where search_type==""ad hoc"" AND isnotnull(search) AND isnotnull(user) | eval api_et = if(api_et=""N/A"", search_et, api_et) | eval api_lt = if(api_lt=""N/A"", search_lt, api_lt) | eval earliest=if(api_et=""N/A"", ""AllTime"", strftime(api_et, ""%Y-%m-%d %H:%M:%S"")) | eval latest=if(api_lt=""N/A"", ""AllTime"", strftime(api_lt, ""%Y-%m-%d %H:%M:%S"")) | `sim_time_format(_time)` | stats max(total_run_time) as total_run_time by search, search_type, user, host, search_id | search total_run_time > $minutes$ | sort - total_run_time | stats count as Searches"
lookup_ko_fqn_from_title(1),"`comment(""Lookup private ko of owner in current app"")` | eval ref_sharing=""user"" | lookup $ko_lookup$ title as reference, sharing as ref_sharing, owner, app OUTPUT fqn as new_private_ref_fqn `comment(""Lookup ko first in current app, then globally"")` | eval ref_sharing=""app"" | lookup $ko_lookup$ title as reference, sharing as ref_sharing, app OUTPUT fqn as new_ref_fqn | eval ref_sharing=""global"" | lookup $ko_lookup$ title as reference, sharing as ref_sharing, app OUTPUTNEW fqn as new_ref_fqn | lookup $ko_lookup$ title as reference, sharing as ref_sharing OUTPUTNEW fqn as new_ref_fqn `comment(""Private KO refs are only allowed from private KOs"")` | eval new_ref_fqn=if(sharing=""user"", coalesce(new_private_ref_fqn,new_ref_fqn), new_ref_fqn) | eval ref_fqn=if(!isnull(ref_fqn) and !like(ref_fqn,""BROKEN REFERENCE:%""), ref_fqn, coalesce(new_ref_fqn, ""BROKEN REFERENCE: "".reference)) | fields - ref_sharing new_*"
lookup_ko_fqn_from_title_and_app(1),"`comment(""Lookup KO for each sharing permission"")` | eval ref_sharing=""user"" | lookup $ko_lookup$ sharing as ref_sharing, title as ref_title, app as ref_app OUTPUT fqn as private_ref_fqn | eval ref_sharing=""app"" | lookup $ko_lookup$ sharing as ref_sharing, title as ref_title, app as ref_app OUTPUT fqn as app_ref_fqn | eval ref_sharing=""global"" | lookup $ko_lookup$ sharing as ref_sharing, title as ref_title, app as ref_app OUTPUT fqn as global_ref_fqn `comment(""Private KO refs are only allowed from private KOs & app shared KO refs are only valid within app"")` `comment(""Private KO refs are only allowed from private KOs & app shared KOs can't be referenced from other apps"")` | eval ref_fqn=coalesce(if(sharing=""user"" and !isnull(private_ref_fqn), private_ref_fqn, if(app=ref_app and !isnull(app_ref_fqn), app_ref_fqn, global_ref_fqn)), ""BROKEN REFERENCE: "".reference) | fields - reference *_ref_fqn *sharing *owner *app *title"
lookup_tables_with_size,"rest splunk_server=local count=0 /services/data/transforms/lookups | join type=inner title [| rest splunk_server=local count=0 /services/data/transforms/managed_lookups | rex field=endpoint "".*\/(?<title>.+)"" | table title,size]"
lower(1),"eval ""$field1$""=lower('$field1$')"
macos___re_opened_applications_filter,search *
macos_lolbin_filter,search *
macos_plutil_filter,search *
mailsniper_invoke_functions_filter,search *
make_category(1),"eval `makemv_meval($category$)`,""$category$""=if('$category$'==""cardholder"" AND '$category$'!=""pci"",mvappend('$category$',""pci""),'$category$')"
make_ip_cidr,"eval tmp=trim(split(mvjoin(ip, ""|""), ""|"")), ip=mvdedup(mvfilter(tmp!="""")) | fields - tmp | expandiprange ip allow_ipv6=true | eval ip=mvfilter(match(ip, `ipv4_cidr_regex`)) | where isnotnull(ip) | eval ip=mvjoin(ip, ""|"")"
make_ip_str,"eval tmp=trim(split(mvjoin(ip, ""|""), ""|"")), ip=mvdedup(mvfilter(tmp!="""")) | fields - tmp | expandiprange ip allow_ipv6=true | eval ipv4_cidr=mvfilter(match(ip, `ipv4_cidr_regex`)), ip=mvfilter(!match(ip, `ipv4_cidr_regex`)), ip=mvjoin(ip, ""|"")"
make_previous_time_range(2),"makeresults | `make_ts_value($earliest$,earliest)` | `make_ts_value($latest$,latest)` | eval time_span_diff=latest-earliest,latest=if(round(earliest)<0,0,round(earliest)),earliest=if(round(earliest-time_span_diff)<0,0,round(earliest-time_span_diff)),search=""earliest="".earliest."" latest="".latest | table search"
make_subject(1),"eval ""$subjectField$""=case(isnotnull('$subjectField$'), '$subjectField$', isnotnull('$subjectField$_dns'), '$subjectField$_dns', isnotnull('$subjectField$_nt_host'), '$subjectField$_nt_host', isnotnull('$subjectField$_mac'), '$subjectField$_mac', isnotnull('$subjectField$_ip'), '$subjectField$_ip')"
make_ts_field(2),"eval ""$fieldOut$""=case(match('$fieldIn$', ""^\d""), tostring('$fieldIn$'), match('$fieldIn$', ""^([@\+-]){1}""), relative_time(time(), '$fieldIn$'), true(), time())"
make_ts_value(2),"eval ""$fieldOut$""=case(match(""$value$"", ""^\d""), tostring(""$value$""), match(""$value$"", ""^([@\+-]){1}""), relative_time(time(), ""$value$""), true(), time())"
makemv(1),"`makemv($field$,""|"")`"
makemv(2),"eval ""$field$""=split('$field$',""$sep$"")"
makemv_meval(1),"`makemv_meval($field$,""|"")`"
makemv_meval(2),"""$field$""=split('$field$',""$sep$"")"
makesv(1),"`makesv($field$,""|"")`"
makesv(2),"eval ""$field$""=mvjoin('$field$',""$sep$"")"
malicious_inprocserver32_modification_filter,search *
malicious_powershell_executed_as_a_service_filter,search *
malicious_powershell_process___encoded_command_filter,search *
malicious_powershell_process___execution_policy_bypass_filter,search *
malicious_powershell_process_with_obfuscation_techniques_filter,search *
malware,"tag=malware tag=attack | tags outputfield=tag | fillnull value=unknown action,category,signature,dest,dest_nt_domain,user,file_name,file_path,file_hash | `get_vendor_product`"
malware_operations,"tag=malware tag=operations | eval dest_nt_domain=if(isnull(dest_nt_domain),""unknown"",dest_nt_domain) | eval vendor_product=case(isnotnull(vendor_product),vendor_product,isnotnull(vendor) AND vendor!=""unknown"" AND isnotnull(product) AND product!=""unknown"",vendor."" "".product,isnotnull(vendor) AND vendor!=""unknown"" AND (isnull(product) OR product=""unknown""),vendor."" unknown"",(isnull(vendor) OR vendor=""unknown"") AND isnotnull(product) AND product!=""unknown"",""unknown "".product,isnotnull(sourcetype),sourcetype,1=1,""unknown"")"
malware_operations_tracker,inputlookup append=T malware_operations_tracker | `get_asset(dest)` | `get_identity4events(dest_owner)`
malware_operations_tracker(1),"inputlookup append=T malware_operations_tracker where `tracker_trp($timefield$,$timefield$)` | `get_asset(dest)` | `get_identity4events(dest_owner)`"
malware_product_deployment_tracker,"`assets` | join type=outer asset_id [| `malware_operations_tracker` | eval lastTime=_time | rename dest_asset_id as asset_id | fields asset_id,lastTime] | eval _time=lastTime | `timeDiff` | `dayDiff`"
malware_product_versions,"tag=endpoint tag=application tag=version | dedup dest | tags outputfield=tag | `get_vendor_product` | fillnull value=""unknown"" product_version"
malware_signature_updates,"tag=endpoint tag=application tag=signature tag=update | dedup dest | tags outputfield=tag | `get_vendor_product` | fillnull value=""unknown"" signature_version"
malware_tracker,inputlookup append=T malware_tracker | `get_asset(dest)` | `get_identity4events(dest_owner)`
malware_tracker(1),"inputlookup append=T malware_tracker where `tracker_trp($timefield$,$timefield$)` | `get_asset(dest)` | `get_identity4events(dest_owner)`"
map_notable_fields,noop
mc_assign_incident_type,"eval incident_type="""""
mc_extend_observables_using_event_id(1),"mcgetobservableobjects event_id=$event_id$ | join type=outer observable observable_type max=0 [ | from datamodel Risk.All_Risk | where threat_object!="""" | rename risk_object as observable, risk_object_type as observable_type | eval threat_content=mvzip(threat_object, threat_object_type) | mvexpand threat_content | fields threat_content, observable, observable_type ] | table observable, observable_object, observable_type, threat_content | eval observable=mvappend(observable, threat_content) | fields - threat_content | mvexpand observable | dedup observable, observable_type, observable_object | eval observable=split(observable, "","") | eval new_observable=mvindex(observable, 0), new_observable_type=mvindex(observable, 1) | eval observable_object=if(isnotnull(new_observable_type), ""threat_object"", observable_object) | eval new_observable_type=if(isnull(new_observable_type), observable_type, new_observable_type) | rename new_observable as observable_value, new_observable_type as observable_type | fields - observable"
mc_extend_observables_using_summary_json(1),"mcgetobservableobjects summary_json=$summary_json$ | join type=outer observable observable_type max=0 [ | from datamodel Risk.All_Risk | where threat_object!="""" | rename risk_object as observable, risk_object_type as observable_type | eval threat_content=mvzip(threat_object, threat_object_type) | mvexpand threat_content | fields threat_content, observable, observable_type ] | table observable, observable_object, observable_type, threat_content | eval observable=mvappend(observable, threat_content) | fields - threat_content | mvexpand observable | dedup observable, observable_type, observable_object | eval observable=split(observable, "","") | eval new_observable=mvindex(observable, 0), new_observable_type=mvindex(observable, 1) | eval observable_object=if(isnotnull(new_observable_type), ""threat_object"", observable_object) | eval new_observable_type=if(isnull(new_observable_type), observable_type, new_observable_type) | rename new_observable as observable_value, new_observable_type as observable_type | fields - observable"
mc_incident_by_id(1),"mcincidentbyid id=""$id$"" | eval _time=create_time | `mc_retrieve_es_full_details`"
mc_incident_types,"inputlookup mc_incident_types | eval incident_type=_key | where incident_type!=""DEFAULT"" | dedup incident_type | table incident_type"
mc_incidents,`mc_incidents_internal`
mc_incidents_internal,"search index=""mc_aux_incidents"" | eval id=id | localop | mcincidentsstream | `mc_retrieve_es_details_for_listing`"
mc_retrieve_es_details_for_listing,"eval rule_id=notable_id | eval mcname=name | `notable_xref_lookup` | `get_correlations` | eval temp_time=time()+86400 | lookup update=true event_time_field=temp_time incident_review_lookup rule_id OUTPUT owner as new_owner, urgency as new_urgency, status as new_status, disposition as new_disposition | lookup update=true event_time_field=temp_time incident_review_comment_lookup rule_id OUTPUT time as review_time,user as reviewer,comment | eval owner=if(isnotnull(new_owner),new_owner,owner),status=case(isnotnull(new_status),new_status,isnotnull(status),status,1==1,default_status),urgency=if(isnotnull(new_urgency),new_urgency,urgency) | eval disposition=case(isnotnull(new_disposition),new_disposition,isnotnull(disposition),disposition,1==1,default_disposition) | fields - temp_time,new_owner,new_status,new_urgency,new_disposition | `get_reviewstatuses` | `get_notable_disposition` | `get_urgency` | typer | tags outputfield=tag | `mvappend_field(tag,orig_tag)` | `suppression_extract` | `risk_correlation` | `get_notable_type` | eval status_name = status_label, disposition_name=disposition_label | fields - disposition_description, disposition_default, | fields - status_group, status_end, status_description, status_default | eval status_name=if(isnull(status_name), ""Unassigned"", status_name) | eval assignee=if(isnull(owner), assignee, owner) | fields - owner | eval name=mcname | fields - owner_realname, priority, severities, severity, notable_type | fields - rule_description, security_domain, mcname"
mc_retrieve_es_full_details,`mc_retrieve_es_full_details_internal` | mcexpandtoken
mc_retrieve_es_full_details_internal,`mc_retrieve_es_util_no_mitre`
mc_retrieve_es_util_no_mitre,`mc_retrieve_es_details_for_listing`
mc_retrieve_es_util_with_mitre,`mc_retrieve_es_details_for_listing` | `get_mitre_annotations` | `get_orig_source`
mc_select_latest_values,localop | mcmvtostring | transaction mc_event_id mvlist=true | selectlatest
memory,"(sourcetype=""*:Memory"" OR sourcetype=vmstat) NOT sourcetype=Perfmon:Memory | append [search sourcetype=Perfmon:Memory | transaction _time, dest, collection, object | search FreeMBytes=* UsedBytes=*] | tags outputfield=tag | eval UsedMBytes=UsedBytes/1048576 | eval TotalMBytes=if(sourcetype==""WMI:Memory"" OR sourcetype=""Perfmon:Memory"", FreeMBytes+UsedMBytes, TotalMBytes) | eval FreeMBytes=round(FreeMBytes) | eval UsedMBytes=round(UsedMBytes) | eval TotalMBytes=round(TotalMBytes)"
memory(1),dest=$host$ `memory`
memory(2),`memory($host$)` | head $limit$
memtable_bytes_appendcol,"appendcols [| rest splunk_server=local count=0 /services/configs/conf-limits/lookup | table max_memtable_bytes] | filldown max_memtable_bytes | fillnull value=""10000000"" max_memtable_bytes"
mimikatz_passtheticket_commandline_parameters_filter,search *
mktime(1),"`mktime($field$,""%m/%d/%Y %H:%M:%S"")`"
mktime(2),"convert timeformat=""$format$"" mktime($field$)"
mktime(3),"`mktime($inField$,""$format$"")` as $outField$"
mltk_apply(3),"apply $model$ [| `get_qualitative_threshold($qualitative_id$)`] | search ""IsOutlier($field$)""=1"
mltk_apply_lower(3),"apply $model$ [| `get_qualitative_lower_threshold($qualitative_id$)`] | search ""IsOutlier($field$)""=1"
mltk_apply_upper(3),"apply $model$ [| `get_qualitative_upper_threshold($qualitative_id$)`] | search ""IsOutlier($field$)""=1"
mltk_findbest(1),"apply $model$ as findbest [| `get_findbest_thresholds`] | eval [| `get_findbest_qualitative`] | fields - BoundaryRanges,findbest*"
mmc_lolbas_execution_process_spawn_filter,search *
modification_of_wallpaper_filter,search *
modify_acl_permission_to_files_or_folder_filter,search *
modular_action_invocations(2),"tstats summariesonly=false latest(Modular_Actions.action_status) as action_status from datamodel=Splunk_Audit.Modular_Actions where [search index=notable orig_sid=""$sid$"" orig_rid=""$rid$"" | eval earliest=(_indextime - 60) | table earliest] Modular_Actions.action_name!=""unknown"" (Modular_Actions.sid=""$sid$"" Modular_Actions.rid=""$rid$"") OR (Modular_Actions.orig_sid=""$sid$"" Modular_Actions.orig_rid=""$rid$"") by _time,nodename,Modular_Actions.action_name,Modular_Actions.sid,Modular_Actions.rid,Modular_Actions.action_mode,Modular_Actions.user span=1s | `drop_dm_object_name(""Modular_Actions"")` | eventstats latest(action_status) as action_status by action_name,sid,rid | search nodename=""Modular_Actions.Modular_Action_Invocations"" | sort 0 -_time | join type=outer action_name [| rest splunk_server=local count=0 /services/alerts/alert_actions | spath input=param._cam path=drilldown_uri output=action_drilldown_uri | rename title as action_name,label as action_label | fields action_name,action_label,action_drilldown_uri] | eval action_label=if(isnotnull(action_label),action_label,action_name),epoch_time=_time | fields _time,epoch_time,action_status,action_name,action_label,action_mode,action_drilldown_uri,sid,rid,user"
modvizpredict(6),"predict ""$v$"" as prediction algorithm=$a$ future_timespan=$f$ holdback=$h$ $p$ lower$ci$=lower$ci$ upper$ci$=upper$ci$ | eval _ft=$f$, _hb=$h$, _vars=""$v$"", _ci=$ci$"
monitor_dns_for_brand_abuse_filter,search *
monitor_email_for_brand_abuse_filter,search *
monitor_registry_keys_for_print_monitors_filter,search *
monitor_web_traffic_for_brand_abuse_filter,search *
ms_exchange_mailbox_replication_service_writing_active_server_pages_filter,search *
ms_scripting_process_loading_ldap_module_filter,search *
ms_scripting_process_loading_wmi_module_filter,search *
msbuild_suspicious_spawned_by_script_process_filter,search *
msexchange_management,sourcetype=MSExchange:management
mshta_spawning_rundll32_or_regsvr32_process_filter,search *
mshtml_module_load_in_office_product_filter,search *
msi_module_loaded_by_non_system_binary_filter,search *
msmpeng_application_dll_side_loading_filter,search *
multiple_archive_files_http_post_traffic_filter,search *
multiple_okta_users_with_invalid_credentials_from_the_same_ip_filter,search *
mvappend_bool(3),"eval ""$field$""=if(match('$bool$', ""1|[Tt]|[Tt][Rr][Uu][Ee]""),mvdedup(mvappend('$field$',""$value$"",NULL)),'$field$')"
mvappend_bool_meval(3),"""$field$""=if('$bool$'==""true"",mvdedup(mvappend('$field$',""$value$"",NULL)),'$field$')"
mvappend_field(2),"eval ""$field1$""=mvdedup(mvappend('$field1$',NULL,'$field2$'))"
mvappend_field_meval(2),"""$field1$""=mvdedup(mvappend('$field1$',NULL,'$field2$'))"
mvappend_is(2),"`mvappend_bool($field$,$value$,""is_$value$"")`"
mvappend_is_meval(2),"`mvappend_bool_meval($field$,$value$,""is_$value$"")`"
mvappend_requires(2),"`mvappend_bool($field$,requires_$value$,""requires_$value$"")`"
mvappend_requires_meval(2),"`mvappend_bool_meval($field$,requires_$value$,""requires_$value$"")`"
mvappend_should(2),"`mvappend_bool($field$,should_$value$,""should_$value$"")`"
mvappend_should_meval(2),"`mvappend_bool_meval($field$,should_$value$,""should_$value$"")`"
mvappend_value(2),"eval ""$field$""=mvdedup(mvappend('$field$',""$value$"",NULL))"
mvdedup(1),"`mvdedup($input$,$input$)`"
mvdedup(2),"eval ""$output$""=mvdedup('$input$')"
mvfilter_field(2),"eval `mvfilter_field_meval($field$,$filter_field$)`"
mvfilter_field_meval(2),"""$field$""=if(mvcount('$filter_field$')=1 AND mvcount('$field$')>1 AND '$field$'='$filter_field$',split(ltrim(replace(""|"".mvjoin('$field$',""|""),""\|"".'$filter_field$',""""),""|""), ""|""),'$field$')"
mvfilter_value(2),"eval ""$field$""=if(mvcount('$field$')>1 AND '$field$'=""$value$"", mvfilter('$field$'!=""$value$""), '$field$')"
mvtruncate(1),"`mvtruncate($input$,$input$,10)`"
mvtruncate(3),"eval ""$output$""=if(mvcount('$input$')>$count$,mvappend(mvindex('$input$',0,$count$-1),NULL,""...truncated...""),'$input$')"
net_localgroup_discovery_filter,search *
net_profiler_uac_bypass_filter,search *
netbackup,"sourcetype=""netbackup_logs"""
netmon-hosts-search,eventtype=netmon_windows | stats count by host | sort +host
network_acl_events,(eventName = CreateNetworkAcl OR eventName = CreateNetworkAclEntry OR eventName = DeleteNetworkAcl OR eventName = DeleteNetworkAclEntry OR eventName = ReplaceNetworkAclEntry OR eventName = ReplaceNetworkAclAssociation)
network_change,"tag=network tag=modify | eval command=if(sourcetype==""opsec_audit"",Operation."" "".ObjectName,command) | fillnull value=unknown dvc,action,user,command"
network_connection_discovery_with_arp_filter,search *
network_connection_discovery_with_net_filter,search *
network_connection_discovery_with_netstat_filter,search *
network_discovery_using_route_windows_app_filter,search *
network_share_discovery_via_dir_command_filter,search *
new_domain_analysis_sparkline_span,1h
ngrok_reverse_proxy_on_network_filter,search *
nishang_powershelltcponeline_filter,search *
nix-netmon-hosts-search,eventtype=netstat | stats count by host | sort +host
nltest_domain_trust_discovery_filter,search *
no_windows_updates_in_a_time_frame_filter,search *
non_chrome_process_accessing_chrome_default_dir_filter,search *
non_firefox_process_access_firefox_profile_dir_filter,search *
notable,"`notable_by_id(""*"")`"
notable,index=notable
notable(1),"source=""$search_name$"" `notable_by_id(""*"")`"
notable_adhoc_invocation(3),"_time=""$time$"" source=""$search_name$"" `notable_by_id($event_id$)` | fields - _raw,*risk_score,*risk_object,*risk_object_type"
notable_by_id(1),"`get_notable_index` | eval `get_event_id_meval`,rule_id=event_id | search event_id=""$event_id$"" | fields - host_* | tags outputfield=tag | `mvappend_field(tag,orig_tag)` | dedup rule_id | `notable_xref_lookup` | `get_correlations` | `get_current_status` | `get_owner` | `get_urgency` | typer | tags outputfield=tag | `mvappend_field(tag,orig_tag)` | `suppression_extract` | `risk_correlation` | `get_mitre_annotations` | `get_notable_type` | `get_orig_source` | `add_normalized_risk_object`"
notable_owners,"inputlookup append=T notable_owners_lookup | join type=outer owner [| rest splunk_server=local count=0 /services/authentication/current-context | eval owner=username,current=username | fields owner,current] | eval owner_realname=if(isnull(realname),owner,realname),sort_name=if(isnotnull(current),""_"",lower(owner_realname)) | sort 0 +sort_name | fields owner,owner_realname"
notable_xref_lookup,"lookup update=true notable_xref_lookup event_id OUTPUTNEW xref_name as notable_xref_name,xref_id as notable_xref_id | eval notable_xref=mvzip(notable_xref_name,notable_xref_id,"":"")"
notable_xref_subsearch(3),"inputlookup append=T notable_xref_lookup where xref_name=""$xref_name$"" xref_id=""$xref_id$"" | eval _time=notable_time | return 100 $output_fields$"
notable_xrefs,from inputlookup:notable_xref_lookup
notable_xrefs(2),"inputlookup append=T notable_xref_lookup where xref_name=""$xref_name$"" xref_id=""$xref_id$"""
notable_xrefs_by_event_id(1),"inputlookup append=T notable_xref_lookup where event_id=""$event_id$"""
notepad_with_no_command_line_arguments_filter,search *
ntdsutil_export_ntds_filter,search *
ntp_startmode,"`ntp_startmode(""*"")`"
ntp_startmode(1),tag=time `service($host$)` | dedup dest
o365-index,index = `o365-index-value`
o365-index-value,o365_security
o365_add_app_role_assignment_grant_user_filter,search *
o365_added_service_principal_filter,search *
o365_bypass_mfa_via_trusted_ip_filter,search *
o365_disable_mfa_filter,search *
o365_excessive_authentication_failures_alert_filter,search *
o365_excessive_sso_logon_errors_filter,search *
o365_management_activity,sourcetype=o365:management:activity
o365_new_federated_domain_added_filter,search *
o365_pst_export_alert_filter,search *
o365_suspicious_admin_email_forwarding_filter,search *
o365_suspicious_rights_delegation_filter,search *
o365_suspicious_user_email_forwarding_filter,search *
office_application_drop_executable_filter,search *
office_application_spawn_regsvr32_process_filter,search *
office_application_spawn_rundll32_process_filter,search *
office_document_creating_schedule_task_filter,search *
office_document_executing_macro_code_filter,search *
office_document_spawned_child_process_to_download_filter,search *
office_product_spawn_cmd_process_filter,search *
office_product_spawning_bitsadmin_filter,search *
office_product_spawning_certutil_filter,search *
office_product_spawning_mshta_filter,search *
office_product_spawning_rundll32_with_no_dll_filter,search *
office_product_spawning_windows_script_host_filter,search *
office_product_spawning_wmic_filter,search *
office_product_writing_cab_or_inf_filter,search *
office_spawning_control_filter,search *
okta,eventtype=okta_log
okta_account_locked_out_filter,search *
okta_account_lockout_events_filter,search *
okta_failed_sso_attempts_filter,search *
okta_mfa_exhaustion_hunt_filter,search *
okta_mismatch_between_source_and_response_for_verify_push_request_filter,search *
okta_multiple_failed_requests_to_access_applications_filter,search *
okta_new_api_token_created_filter,search *
okta_new_device_enrolled_on_account_filter,search *
okta_phishing_detection_with_fastpass_origin_check_filter,search *
okta_risk_threshold_exceeded_filter,search *
okta_suspicious_activity_reported_filter,search *
okta_suspicious_use_of_a_session_cookie_filter,search *
okta_threatinsight_login_failure_with_high_unknown_users_filter,search *
okta_threatinsight_suspected_passwordspray_attack_filter,search *
okta_threatinsight_threat_detected_filter,search *
okta_two_or_more_rejected_okta_pushes_filter,search *
okta_user_logins_from_multiple_cities_filter,search *
open_redirect_in_splunk_web_filter,search *
os_normalization,"eval os=replace(os,""\(R\)"","""") | eval os=replace(os,""\\\\xA8"","""") | eval os=replace(os,""MS Windows"",""Microsoft Windows"") | eval os=replace(os,""^Windows"",""Microsoft Windows"")"
osquery,sourcetype=osquery:results
osquery_pack___coldroot_detection_filter,search *
osquery_process,"eventtype=""osquery-process"""
outbound_network_connection_from_java_using_default_ports_filter,search *
outputcheckpoint_whois,noop
overwriting_accessibility_binaries_filter,search *
papercut_ng_remote_web_access_attempt_filter,search *
papercut_ng_suspicious_behavior_debug_log_filter,search *
papercutng,"sourcetype=""papercutng"""
parse_event_id(1),"rex field=""$event_id$"" ""(?<orig_indexer_guid>.*?)\@\@(?<orig_index>.*?)\@\@(?<orig_event_hash>.*)"""
parse_simplexml_reference,"`comment(""Lookup fqn of referenced title and app"")` | rex field=reference ""ref *= *([\""'])(?<ref_title>.+?)\1"" | rex field=reference ""app *= *([\""'])(?<ref_app>.+?)\1"" `unescape_simplexml(""ref_title"")` | eval ref_app = coalesce(ref_app,app) | dedup fqn ref_app ref_title"
password_policy_discovery_with_net_filter,search *
path_traversal_spl_injection,index=_internal sourcetype=splunkd_ui_access
path_traversal_spl_injection_filter,search *
pci_domains,"inputlookup append=T pci_domains_lookup WHERE pci_domain_source=""static"" | `lower(pci_domain)` | dedup pci_domain | sort + pci_domain | fields pci_domain"
per_panel_filter(2),"`per_panel_filter(""$lookup$"",""$inputFields$"",time())`"
per_panel_filter(3),"`per_panel_filter_lookup(""$lookup$"",""$inputFields$"",$compareTime$)` | search NOT ppf_filter=whitelist | fields - ppf_lookup_type,ppf_st,ppf_et,temp_time | eval ppf_cell=if(isnull(ppf_filter),mvappend("""", $inputFields$),mvappend(ppf_filter,$inputFields$))"
per_panel_filter_lookup(3),"eval temp_time=time(),ppf_lookup_type=""blacklist"" | lookup update=true event_time_field=temp_time $lookup$ $inputFields$,filter as ppf_lookup_type OUTPUT start_time as ppf_st,end_time as ppf_et,filter as ppf_filter | eval ppf_filter=if(ppf_filter=""blacklist"" AND ppf_st<$compareTime$ AND (ppf_et>$compareTime$ OR isnull(ppf_et)),ppf_filter,null()) | fields - ppf_st,ppf_et | eval ppf_lookup_type=""whitelist"" | lookup update=true event_time_field=temp_time $lookup$ $inputFields$,filter as ppf_lookup_type OUTPUTNEW start_time as ppf_st,end_time as ppf_et,filter as ppf_filter | eval ppf_filter=if(ppf_filter=""blacklist"" OR (ppf_filter=""whitelist"" AND ppf_st<$compareTime$ AND (ppf_et>$compareTime$ OR isnull(ppf_et))),ppf_filter,null())"
permission_modification_using_takeown_app_filter,search *
persistent_xss_in_rapiddiag_through_user_interface_views_filter,search *
petitpotam_network_share_access_request_filter,search *
petitpotam_suspicious_kerberos_tgt_request_filter,search *
ping_sleep_batch_command_filter,search *
plain_http_post_exfiltrated_data_filter,search *
port_protocol_tracker,inputlookup append=T port_protocol_tracker | `get_application_protocol`
possible_browser_pass_view_parameter_filter,search *
possible_lateral_movement_powershell_spawn_filter,search *
potential_password_in_username_false_positive_reduction,search *
potential_password_in_username_filter,search *
potentially_malicious_code_on_cmdline_tokenize_score,"eval orig_process=process, process=replace(lower(process), ""`"", """") | makemv tokenizer=""([\w\d\-]+)"" process | eval unusual_cmdline_feature_for=if(match(process, ""^for$""), mvcount(mvfilter(match(process, ""^for$""))), 0), unusual_cmdline_feature_netsh=if(match(process, ""^netsh$""), mvcount(mvfilter(match(process, ""^netsh$""))), 0), unusual_cmdline_feature_readbytes=if(match(process, ""^readbytes$""), mvcount(mvfilter(match(process, ""^readbytes$""))), 0), unusual_cmdline_feature_set=if(match(process, ""^set$""), mvcount(mvfilter(match(process, ""^set$""))), 0), unusual_cmdline_feature_unrestricted=if(match(process, ""^unrestricted$""), mvcount(mvfilter(match(process, ""^unrestricted$""))), 0), unusual_cmdline_feature_winstations=if(match(process, ""^winstations$""), mvcount(mvfilter(match(process, ""^winstations$""))), 0), unusual_cmdline_feature_-value=if(match(process, ""^-value$""), mvcount(mvfilter(match(process, ""^-value$""))), 0), unusual_cmdline_feature_compression=if(match(process, ""^compression$""), mvcount(mvfilter(match(process, ""^compression$""))), 0), unusual_cmdline_feature_server=if(match(process, ""^server$""), mvcount(mvfilter(match(process, ""^server$""))), 0), unusual_cmdline_feature_set-mppreference=if(match(process, ""^set-mppreference$""), mvcount(mvfilter(match(process, ""^set-mppreference$""))), 0), unusual_cmdline_feature_terminal=if(match(process, ""^terminal$""), mvcount(mvfilter(match(process, ""^terminal$""))), 0), unusual_cmdline_feature_-name=if(match(process, ""^-name$""), mvcount(mvfilter(match(process, ""^-name$""))), 0), unusual_cmdline_feature_catch=if(match(process, ""^catch$""), mvcount(mvfilter(match(process, ""^catch$""))), 0), unusual_cmdline_feature_get-wmiobject=if(match(process, ""^get-wmiobject$""), mvcount(mvfilter(match(process, ""^get-wmiobject$""))), 0), unusual_cmdline_feature_hklm=if(match(process, ""^hklm$""), mvcount(mvfilter(match(process, ""^hklm$""))), 0), unusual_cmdline_feature_streamreader=if(match(process, ""^streamreader$""), mvcount(mvfilter(match(process, ""^streamreader$""))), 0), unusual_cmdline_feature_system32=if(match(process, ""^system32$""), mvcount(mvfilter(match(process, ""^system32$""))), 0), unusual_cmdline_feature_username=if(match(process, ""^username$""), mvcount(mvfilter(match(process, ""^username$""))), 0), unusual_cmdline_feature_webrequest=if(match(process, ""^webrequest$""), mvcount(mvfilter(match(process, ""^webrequest$""))), 0), unusual_cmdline_feature_count=if(match(process, ""^count$""), mvcount(mvfilter(match(process, ""^count$""))), 0), unusual_cmdline_feature_webclient=if(match(process, ""^webclient$""), mvcount(mvfilter(match(process, ""^webclient$""))), 0), unusual_cmdline_feature_writeallbytes=if(match(process, ""^writeallbytes$""), mvcount(mvfilter(match(process, ""^writeallbytes$""))), 0), unusual_cmdline_feature_convert=if(match(process, ""^convert$""), mvcount(mvfilter(match(process, ""^convert$""))), 0), unusual_cmdline_feature_create=if(match(process, ""^create$""), mvcount(mvfilter(match(process, ""^create$""))), 0), unusual_cmdline_feature_function=if(match(process, ""^function$""), mvcount(mvfilter(match(process, ""^function$""))), 0), unusual_cmdline_feature_net=if(match(process, ""^net$""), mvcount(mvfilter(match(process, ""^net$""))), 0), unusual_cmdline_feature_com=if(match(process, ""^com$""), mvcount(mvfilter(match(process, ""^com$""))), 0), unusual_cmdline_feature_http=if(match(process, ""^http$""), mvcount(mvfilter(match(process, ""^http$""))), 0), unusual_cmdline_feature_io=if(match(process, ""^io$""), mvcount(mvfilter(match(process, ""^io$""))), 0), unusual_cmdline_feature_system=if(match(process, ""^system$""), mvcount(mvfilter(match(process, ""^system$""))), 0), unusual_cmdline_feature_new-object=if(match(process, ""^new-object$""), mvcount(mvfilter(match(process, ""^new-object$""))), 0), unusual_cmdline_feature_if=if(match(process, ""^if$""), mvcount(mvfilter(match(process, ""^if$""))), 0), unusual_cmdline_feature_threading=if(match(process, ""^threading$""), mvcount(mvfilter(match(process, ""^threading$""))), 0), unusual_cmdline_feature_mutex=if(match(process, ""^mutex$""), mvcount(mvfilter(match(process, ""^mutex$""))), 0), unusual_cmdline_feature_cryptography=if(match(process, ""^cryptography$""), mvcount(mvfilter(match(process, ""^cryptography$""))), 0), unusual_cmdline_feature_computehash=if(match(process, ""^computehash$""), mvcount(mvfilter(match(process, ""^computehash$""))), 0)"
potentially_malicious_code_on_commandline_filter,search *
powershell,"(source=WinEventLog:Microsoft-Windows-PowerShell/Operational OR source=""XmlWinEventLog:Microsoft-Windows-PowerShell/Operational"")"
powershell_4104_hunting_filter,search *
powershell___connect_to_internet_with_hidden_window_filter,search *
powershell_com_hijacking_inprocserver32_modification_filter,search *
powershell_creating_thread_mutex_filter,search *
powershell_disable_security_monitoring_filter,search *
powershell_domain_enumeration_filter,search *
powershell_enable_powershell_remoting_filter,search *
powershell_enable_smb1protocol_feature_filter,search *
powershell_execute_com_object_filter,search *
powershell_fileless_process_injection_via_getprocaddress_filter,search *
powershell_fileless_script_contains_base64_encoded_content_filter,search *
powershell_get_localgroup_discovery_filter,search *
powershell_get_localgroup_discovery_with_script_block_logging_filter,search *
powershell_invoke_cimmethod_cimsession_filter,search *
powershell_invoke_wmiexec_usage_filter,search *
powershell_load_module_in_meterpreter_filter,search *
powershell_loading_dotnet_into_memory_via_reflection_filter,search *
powershell_processing_stream_of_data_filter,search *
powershell_remote_thread_to_known_windows_process_filter,search *
powershell_remove_windows_defender_directory_filter,search *
powershell_start_bitstransfer_filter,search *
powershell_start_or_stop_service_filter,search *
powershell_using_memory_as_backing_store_filter,search *
powershell_windows_defender_exclusion_commands_filter,search *
ppf_subsearch(3),"inputlookup append=t $lookup$ | table $inputFields$ | dedup $inputFields$ | `per_panel_filter_lookup(""$lookup$"",""$inputFields$"",$compareTime$)` | search ppf_filter=whitelist | table $inputFields$ | format | table search"
ppf_subsearch_dm(4),"inputlookup append=t $lookup$ | table $inputFields$ | dedup $inputFields$ | `per_panel_filter_lookup(""$lookup$"",""$inputFields$"",$compareTime$)` | search ppf_filter=whitelist | table $inputFields$ | rename * as $object$.* | format | table search"
ppf_updates,eventtype=ppf_updates | fillnull value=unknown filter | fillnull value=edit action
prepend_alias_assets(1),"_key as $subject$_asset_id,asset as $subject$_asset,asset_tag as $subject$_asset_tag,bunit as $subject$_bunit,category as $subject$_category,city as $subject$_city,country as $subject$_country,dns as $subject$_dns,ip as $subject$_ip,is_expected as $subject$_is_expected,lat as $subject$_lat,long as $subject$_long,mac as $subject$_mac,nt_host as $subject$_nt_host,owner as $subject$_owner,pci_domain as $subject$_pci_domain,priority as $subject$_priority,requires_av as $subject$_requires_av,should_timesync as $subject$_should_timesync,should_update as $subject$_should_update"
prepend_alias_identities(1),"_key as $subject$_identity_id,bunit as $subject$_bunit,category as $subject$_category,email as $subject$_email,endDate as $subject$_endDate,first as $subject$_first,identity as $subject$_identity,identity_tag as $subject$_identity_tag,last as $subject$_last,managedBy as $subject$_managedBy,nick as $subject$_nick,phone as $subject$_phone,prefix as $subject$_prefix,priority as $subject$_priority,startDate as $subject$_startDate,suffix as $subject$_suffix,watchlist as $subject$_watchlist,work_city as $subject$_work_city,work_country as $subject$_work_country,work_lat as $subject$_work_lat,work_long as $subject$_work_long"
prepend_assets(1),rename `prepend_alias_assets($subject$)`
prepend_identities(1),rename `prepend_alias_identities($subject$)`
prevent_automatic_repair_mode_using_bcdedit_filter,search *
previously_seen_cloud_api_calls_per_user_role_forget_window,"""-90d@d"""
previously_seen_cloud_compute_creations_by_user_search_window_begin_offset,"""-70m@m"""
previously_seen_cloud_compute_image_search_window_begin_offset,"""-70m@m"""
previously_seen_cloud_compute_images_forget_window,"""-90d@d"""
previously_seen_cloud_compute_instance_type_forget_window,"""-90d@d"""
previously_seen_cloud_compute_instance_types_search_window_begin_offset,"""-70m@m"""
previously_seen_cloud_instance_modifications_by_user_search_window_begin_offset,"""-70m@m"""
previously_seen_cloud_provisioning_activity_forget_window,"""-90d@d"""
previously_seen_cloud_region_forget_window,"""-90d@d"""
previously_seen_cloud_regions_search_window_begin_offset,"""-70m@m"""
previously_seen_windows_services_forget_window,"""-90d@d"""
previously_seen_windows_services_window,"""-70m@m"""
previously_seen_zoom_child_processes_forget_window,"""-90d@d"""
previously_seen_zoom_child_processes_window,"""-70m@m"""
previously_unseen_cloud_provisioning_activity_window,"""-70m@m"""
primary_functions,inputlookup append=T primary_function_lookup
primary_functions_tracker,"inputlookup append=T localprocesses_tracker | `get_primary_function(process)` | inputlookup append=T services_tracker | where isnotnull(process) OR (isnotnull(service) AND start_mode!=""Auto"") | `get_primary_function(service)` | inputlookup append=T listeningports_tracker | `get_primary_function-port` | `get_asset(dest)` | `get_identity4events(dest_owner)`"
primary_functions_tracker(1),"inputlookup append=T localprocesses_tracker where `tracker_trp($timefield$,$timefield$)` | `get_primary_function(process)` | inputlookup append=T services_tracker where `tracker_trp($timefield$,$timefield$)` | where isnotnull(process) OR (isnotnull(service) AND start_mode!=""Auto"") | `get_primary_function(service)` | inputlookup append=T listeningports_tracker where `tracker_trp($timefield$,$timefield$)` | `get_primary_function-port` | `get_asset(dest)` | `get_identity4events(dest_owner)`"
print_processor_registry_autostart_filter,search *
print_spooler_adding_a_printer_driver_filter,search *
print_spooler_failed_to_load_a_plug_in_filter,search *
printservice,"source=""wineventlog:microsoft-windows-printservice/operational"" OR source=""WinEventLog:Microsoft-Windows-PrintService/Admin"""
process_bitsadmin,(Processes.process_name=bitsadmin.exe OR Processes.original_file_name=bitsadmin.exe)
process_certutil,(Processes.process_name=certutil.exe OR Processes.original_file_name=CertUtil.exe)
process_cmd,(Processes.process_name=cmd.exe OR Processes.original_file_name=Cmd.Exe)
process_copy,(Processes.process_name=copy.exe OR Processes.original_file_name=copy.exe OR Processes.process_name=xcopy.exe OR Processes.original_file_name=xcopy.exe)
process_creating_lnk_file_in_suspicious_location_filter,search *
process_csc,(Processes.process_name=csc.exe OR Processes.original_file_name=csc.exe)
process_curl,(Processes.process_name=curl.exe OR Processes.original_file_name=Curl.exe)
process_deleting_its_process_file_path_filter,search *
process_diskshadow,(Processes.process_name=diskshadow.exe OR Processes.original_file_name=diskshadow.exe)
process_dllhost,(Processes.process_name=dllhost.exe OR Processes.original_file_name=dllhost.exe)
process_dsquery,(Processes.process_name=dsquery.exe OR Processes.original_file_name=dsquery.exe)
process_dxdiag,(Processes.process_name=dxdiag.exe OR Processes.original_file_name=dxdiag.exe)
process_esentutl,(Processes.process_name=esentutl.exe OR Processes.original_file_name=esentutl.exe)
process_execution_via_wmi_filter,search *
process_fodhelper,(Processes.process_name=fodhelper.exe OR Processes.original_file_name=FodHelper.EXE)
process_gpupdate,(Processes.process_name=gpupdate.exe OR Processes.original_file_name=GPUpdate.exe)
process_hh,(Processes.process_name=hh.exe OR Processes.original_file_name=HH.EXE)
process_installutil,(Processes.process_name=installutil.exe OR Processes.original_file_name=InstallUtil.exe)
process_intel,`process_intel_by_threat_key(*)`
process_intel_by_threat_key(1),"inputlookup append=T process_intel where threat_key=""$threat_key$"" | fillnull value=0 updated,disabled | `set_threat_collection_name(""process_intel"")` | `get_threat_attribution_weight(threat_key)`"
process_intel_stats,"dc(process),dc(process_file_name),dc(process_handle_name),dc(src),dc(dest)"
process_kill_base_on_file_path_filter,search *
process_microsoftworkflowcompiler,(Processes.process_name=microsoft.workflow.compiler.exe OR Processes.original_file_name=Microsoft.Workflow.Compiler.exe)
process_msbuild,(Processes.process_name=msbuild.exe OR Processes.original_file_name=MSBuild.exe)
process_mshta,(Processes.process_name=mshta.exe OR Processes.original_file_name=MSHTA.EXE)
process_msiexec,(Processes.process_name=msiexec.exe OR Processes.original_file_name=msiexec.exe)
process_net,"(Processes.process_name=""net.exe"" OR Processes.original_file_name=""net.exe"" OR Processes.process_name=""net1.exe"" OR Processes.original_file_name=""net1.exe"")"
process_netsh,(Processes.process_name=netsh.exe OR Processes.original_file_name=netsh.exe)
process_nltest,(Processes.process_name=nltest.exe OR Processes.original_file_name=nltestrk.exe)
process_ntdsutil,(Processes.process_name=ntdsutil.exe OR Processes.original_file_name=ntdsutil.exe)
process_ping,(Processes.process_name=ping.exe OR Processes.original_file_name=ping.exe)
process_powershell,(Processes.process_name=pwsh.exe OR Processes.process_name=sqlps.exe OR Processes.process_name=sqltoolsps.exe OR Processes.process_name=powershell.exe OR Processes.process_name=powershell_ise.exe OR Processes.original_file_name=pwsh.dll OR Processes.original_file_name=PowerShell.EXE OR Processes.original_file_name=powershell_ise.EXE)
process_procdump,(Processes.process_name=procdump.exe OR Processes.process_name=procdump64.exe OR Processes.original_file_name=procdump)
process_psexec,(Processes.process_name=psexec.exe OR Processes.process_name=psexec64.exe OR Processes.original_file_name=psexec.c)
process_rclone,(Processes.original_file_name=rclone.exe OR Processes.process_name=rclone.exe)
process_reg,(Processes.process_name=reg.exe OR Processes.original_file_name=reg.exe)
process_regasm,(Processes.process_name=regasm.exe OR Processes.original_file_name=RegAsm.exe)
process_regsvcs,(Processes.process_name=regsvcs.exe OR Processes.original_file_name=RegSvcs.exe)
process_regsvr32,(Processes.process_name=regsvr32.exe OR Processes.original_file_name=REGSVR32.EXE)
process_route,(Processes.process_name=route.exe OR Processes.original_file_name=route.exe)
process_runas,(Processes.process_name=runas.exe OR Processes.original_file_name=runas.exe)
process_rundll32,(Processes.process_name=rundll32.exe OR Processes.original_file_name=RUNDLL32.EXE)
process_schtasks,(Processes.process_name=schtasks.exe OR Processes.original_file_name=schtasks.exe)
process_sdelete,(Processes.process_name=sdelete.exe OR Processes.original_file_name=sdelete.exe)
process_setspn,(Processes.process_name=setspn.exe OR Processes.original_file_name=setspn.exe)
process_verclsid,(Processes.process_name=verclsid.exe OR Processes.original_file_name=verclsid.exe)
process_vssadmin,(Processes.process_name=vssadmin.exe OR Processes.original_file_name=VSSADMIN.EXE)
process_wbadmin,(Processes.process_name=wbadmin.exe OR Processes.original_file_name=WBADMIN.EXE)
process_wermgr,(Processes.process_name=wermgr.exe OR Processes.original_file_name=wermgr.EXE)
process_wmic,(Processes.process_name=wmic.exe OR Processes.original_file_name=wmic.exe)
process_writing_dynamicwrapperx_filter,search *
processes_created_by_netsh_filter,search *
processes_launching_netsh_filter,search *
processes_tapping_keyboard_events_filter,search *
prohibited_apps_launching_cmd,"| inputlookup prohibited_apps_launching_cmd | rename prohibited_applications as parent_process_name | eval parent_process_name=""*"" . parent_process_name | table parent_process_name"
prohibited_network_traffic_allowed_filter,search *
prohibited_software_on_endpoint_filter,search *
prohibited_softwares,lookup prohibited_softwares app as process_name OUTPUT is_prohibited | search is_prohibited=True
prohibited_traffic,"`prohibited_traffic(""category"")`"
prohibited_traffic(1),`prohibited_traffic_by_$qual$`
prohibited_traffic_by_category,"inputlookup append=T prohibited_traffic_lookup_by_category | fields transport,src_category,dest_category,dest_port,is_prohibited,is_secure,note"
prohibited_traffic_by_pci_domain,"inputlookup append=T prohibited_traffic_lookup_by_pci_domain | fields transport,src_pci_domain,dest_pci_domain,dest_port,is_prohibited,is_secure,note"
protocol_or_port_mismatch_filter,search *
protocols_passing_authentication_in_cleartext_filter,search *
proxy,"tag=web tag=proxy | tags outputfield=tag | fillnull value="""" uri_scheme,dest,uri_path,uri_query | eval url=if(isnull(url),uri_scheme.""://"".dest.uri_path.uri_query,url) | eval url=trim(url,"" "") | eval url=if(url==""://"",""-"",url) | eval url_length=len(url) | fillnull value=""-"" action,category,status,src,http_content_type,http_method,http_referrer,http_user_agent,user | fillnull value=0 bytes_in,bytes_out | eval dest=if(dest=="""",""-"",dest)"
proxyshell_proxynotshell_behavior_detected_filter,search *
randomly_generated_scheduled_task_name_filter,search *
randomly_generated_windows_service_name_filter,search *
ransomware_extensions,lookup update=true ransomware_extensions_lookup Extensions AS file_extension OUTPUT Name | search Name !=False
ransomware_notes,"lookup ransomware_notes_lookup ransomware_notes as file_name OUTPUT status as ""Known Ransomware Notes"" | search ""Known Ransomware Notes""=True"
ransomware_notes_bulk_creation_filter,search *
recommended_datamodel_attributes(2),"datamodel ""$model$"" ""$object$"" | spath output=calcs path=calculations{} | spath output=fields path=fields{} | eval outfields=mvappend(fields,NULL,calcs) | mvexpand outfields | spath output=fields input=outfields path=outputFields{} | eval fields=if(isnull(fields),outfields,fields) | mvexpand fields | spath output=field input=fields path=fieldName | spath output=recommended input=fields path=comment.recommended | search recommended=""true"" | table field | sort field"
recon_avproduct_through_pwh_or_wmi_filter,search *
recon_using_wmi_class_filter,search *
recursive_delete_of_directory_in_batch_cmd_filter,search *
reg_exe_manipulating_windows_services_registry_keys_filter,search *
reg_exe_used_to_hide_files_directories_via_registry_keys_filter,search *
regex_spl_param_value(2),"""(\""(?<ref_$r1$>([^\\\\\""]|\\\\.)*)\""|(?<ref_$r2$>[^|\""',\[\]= \r\n]+))([|\""',\[\] \r\n]|$)"""
registry_intel,`registry_intel_by_threat_key(*)`
registry_intel_by_threat_key(1),"inputlookup append=T registry_intel where threat_key=""$threat_key$"" | fillnull value=0 updated,disabled | `set_threat_collection_name(""registry_intel"")` | `get_threat_attribution_weight(threat_key)`"
registry_intel_stats,"dc(registry_path),dc(registry_value_name),dc(registry_value_text)"
registry_keys_for_creating_shim_databases_filter,search *
registry_keys_used_for_persistence_filter,search *
registry_keys_used_for_privilege_escalation_filter,search *
registry_tracker,inputlookup append=T registry_tracker | `get_asset(dest)` | `get_identity4events(dest_owner)`
regressionstatistics(2),"rename ""$a$"" as _actual, ""$p$"" as _predicted | eventstats avg(_actual) as _avgActual | eval _actualMinusAvg = _actual - _avgActual, _residual = _actual - _predicted | stats sumsq(_actualMinusAvg) as _sumsqActualMinusAvg, sumsq(_residual) as _sumsqResidual, count(_residual) as _sampleCount | eval _sumsqActualMinusAvg=round(_sumsqActualMinusAvg,6), _sumsqResidual = round(_sumsqResidual, 6) | eval rSquared = if(_sumsqActualMinusAvg == 0, ""NaN"", round(1 - _sumsqResidual / _sumsqActualMinusAvg, 4)), RMSE = round(sqrt(_sumsqResidual / _sampleCount), 2) | table rSquared RMSE"
regsvr32_silent_and_install_param_dll_loading_filter,search *
regsvr32_with_known_silent_switch_cmdline_filter,search *
remap_subjects,"tags outputfield=evtTags | `swap_if_tagged(src, dest, evtTags)` | fields - evtTags"
remcos_client_registry_install_entry_filter,search *
remcos_rat_file_creation_in_remcos_folder_filter,search *
remote_desktop_network_bruteforce_filter,search *
remote_desktop_network_traffic_filter,search *
remote_desktop_process_running_on_system_filter,search *
remote_process_instantiation_via_dcom_and_powershell_filter,search *
remote_process_instantiation_via_dcom_and_powershell_script_block_filter,search *
remote_process_instantiation_via_winrm_and_powershell_filter,search *
remote_process_instantiation_via_winrm_and_powershell_script_block_filter,search *
remote_process_instantiation_via_winrm_and_winrs_filter,search *
remote_process_instantiation_via_wmi_and_powershell_filter,search *
remote_process_instantiation_via_wmi_and_powershell_script_block_filter,search *
remote_process_instantiation_via_wmi_filter,search *
remote_registry_key_modifications_filter,search *
remote_system_discovery_with_adsisearcher_filter,search *
remote_system_discovery_with_dsquery_filter,search *
remote_system_discovery_with_net_filter,search *
remote_system_discovery_with_wmic_filter,search *
remote_wmi_command_attempt_filter,search *
remoteconnectionmanager,"source=""WinEventLog:Microsoft-Windows-TerminalServices-RemoteConnectionManager/Operational"""
remove_valid_domains,"eval domain=trim(domain,""*"") | search NOT[| inputlookup domains] NOT[ |inputlookup cim_corporate_email_domain_lookup] NOT[inputlookup cim_corporate_web_domain_lookup] | eval domain=""*""+domain+""*"""
rename_all,"rename ""All_Records.*"" as *"
resize_shadowstorage_volume_filter,search *
response_plan_by_id(3),"mcincidents fields=""id,incident_type,response_plans,attachments"" query=""{\""id\"": \""$incident_id$\""}"" incident_type=""$incident_type$"" | transformincidentdata $response_plan_id$ | fields response_plans"
rest_handler_transactions,"index=_internal sourcetype=*:rest_handler (Entering OR ""completed successfully"") | `get_namespace` | rex field=sourcetype ""(?<handler>\w+):rest_handler"" | rex ""ACTION_(?<action>\w+)"" | transaction handler,action startswith=Entering endswith=""completed successfully"" maxspan=30s maxpause=30s maxevents=2"
reverse_asset_lookup(1),"makeresults | eval key=""$value$"" | lookup update=true asset_lookup_by_str asset as key OUTPUTNEW _key as asset_id,`asset_fields` | lookup update=true asset_lookup_by_cidr asset as key OUTPUTNEW _key as asset_id,`asset_fields` | eval ip=case(match(ip, ""^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$""),ip,match(key, ""^\d{1,3}\.\d{1,3}\.\d{1,3}\.\d{1,3}$""),key,1=1,null()) | where isnotnull(asset_id)"
reverse_identity_lookup(1),"makeresults | eval key=""$value$"" | lookup update=true identity_lookup_expanded identity as key OUTPUTNEW _key as identity_id,`identity_fields` | where isnotnull(identity_id)"
reviewstatus_exclusions,search _key!=-1 NOT ((disabled=1 OR disabled=t OR disabled=true) AND (hidden=1 OR hidden=t OR hidden=true))
reviewstatus_groups,inputlookup append=T expected_status_group_lookup
reviewstatuses,"inputlookup append=T reviewstatuses_lookup | rename label as status_label,description as status_description | `reviewstatus_exclusions`"
revil_common_exec_parameter_filter,search *
revil_registry_entry_filter,search *
risk_correlation,"`risk_correlation_assets(""orig_host"")` | `risk_correlation_assets(""dvc"")` | `risk_correlation_assets(""src"")` | `risk_correlation_assets(""dest"")` | `risk_correlation_identities(""src_user"")` | `risk_correlation_identities(""user"")` | eval `risk_correlation_object_types_meval`,`risk_correlation_score_meval`"
risk_correlation_assets(1),"lookup update=true risk_correlation_by_system_lookup risk_object as ""$subject$"" OUTPUT risk_score as ""_$subject$_risk_score"" | eval ""$subject$_risk_score""=if(isnotnull($subject$_risk_score),$subject$_risk_score,_$subject$_risk_score) | fields - _$subject$_risk_score"
risk_correlation_identities(1),"lookup update=true risk_correlation_by_user_lookup risk_object as ""$user$"" OUTPUT risk_score as ""_$user$_risk_score"" | eval ""$user$_risk_score""=if(isnotnull($user$_risk_score),$user$_risk_score,_$user$_risk_score) | fields - _$user$_risk_score"
risk_correlation_object_type_meval(2),"""$field$_risk_object_type""=if(isnotnull('$field$_risk_score'),""$value$"",null())"
risk_correlation_object_types_meval,"`risk_correlation_object_type_meval(host,""system"")`,`risk_correlation_object_type_meval(orig_host,""system"")`,`risk_correlation_object_type_meval(dvc,""system"")`,`risk_correlation_object_type_meval(src,""system"")`,`risk_correlation_object_type_meval(dest,""system"")`,`risk_correlation_object_type_meval(src_user,""user"")`,`risk_correlation_object_type_meval(user,""user"")`"
risk_correlation_others(2),"lookup update=true risk_correlation_by_other_lookup risk_object as ""$other$"", risk_object_type as ""$risk_object_type$"" OUTPUT risk_score as ""_$other$_risk_score"" | eval ""$other$_risk_score""=if(isnotnull($other$_risk_score),$other$_risk_score,_$other$_risk_score) | fields - _$other$_risk_score"
risk_correlation_score,eval `risk_correlation_score_meval`
risk_correlation_score_meval,"risk_score=if(isnotnull(risk_score),risk_score,max(orig_host_risk_score,dvc_risk_score,src_risk_score,dest_risk_score,src_user_risk_score,user_risk_score))"
risk_index,index=risk
risk_object_types,inputlookup risk_object_types_lookup
round(1),"`round(""$field$"",2)`"
round(2),"`round(""$field$"",""$field$"",$precision$)`"
round(3),"eval ""$outField$""=round('$inField$',$precision$)"
rubeus_command_line_parameters_filter,search *
rubeus_kerberos_ticket_exports_through_winlogon_access_filter,search *
runas_execution_in_commandline_filter,search *
rundll32_control_rundll_hunt_filter,search *
rundll32_control_rundll_world_writable_directory_filter,search *
rundll32_create_remote_thread_to_a_process_filter,search *
rundll32_createremotethread_in_browser_filter,search *
rundll32_dnsquery_filter,search *
rundll32_lockworkstation_filter,search *
rundll32_process_creating_exe_dll_files_filter,search *
rundll32_shimcache_flush_filter,search *
rundll32_with_no_command_line_arguments_with_network_filter,search *
rundll_loading_dll_by_ordinal_filter,search *
ryuk_test_files_detected_filter,search *
ryuk_wake_on_lan_command_filter,search *
s3_accesslogs,sourcetype=aws:s3:accesslogs
sai_events_indexes,index!=_* AND index!=infra_alerts
sai_metadata_indexes,index=em_meta
sai_metrics_indexes,index = em_metrics OR index = vmware-perf-metrics
sam_database_file_access_attempt_filter,search *
samsam_test_file_write_filter,search *
sc_exe_manipulating_windows_services_filter,search *
schcache_change_by_app_connect_and_create_adsi_object_filter,search *
schedule_task_with_http_command_arguments_filter,search *
schedule_task_with_rundll32_command_trigger_filter,search *
scheduled_search_skip_ratio,"`sim_set_index_internal` `sim_set_search_head` sourcetype=scheduler `sim_all_search_status` search_type!=""*_acceleration"" | `sim_savedsearch_dedup` | stats count(eval(`sim_all_search_status`)) AS total_exec, count(eval(status==""skipped"")) AS skipped_exec | eval skip_ratio = round(skipped_exec / total_exec * 100, 2) | fields skip_ratio"
scheduled_task_creation_on_remote_endpoint_using_at_filter,search *
scheduled_task_deleted_or_created_via_cmd_filter,search *
scheduled_task_initiation_on_remote_endpoint_filter,search *
scheduled_tasks_used_in_badrabbit_ransomware_filter,search *
schtasks_run_task_on_demand_filter,search *
schtasks_scheduling_job_on_remote_system_filter,search *
schtasks_used_for_forcing_a_reboot_filter,search *
screensaver_event_trigger_execution_filter,search *
script_error_msg_ignore,"(match(script, ""(streamfwd|splunk-(wmi\.path|MonitorNoHandle\.exe|winevtlog\.exe|netmon\.exe|perfmon\.exe|regmon\.exe|winprintmon\.exe|admon\.exe|powershell\.exe))"") AND exit_status=1) OR (script LIKE ""%instrumentation.py"" AND exit_status=114)"
script_execution_via_wmi_filter,search *
sdclt_uac_bypass_filter,search *
sdelete_application_execution_filter,search *
searchprotocolhost_with_no_command_line_with_network_filter,search *
secretdumps_offline_ntds_dumping_tool_filter,search *
security_content_ctime(1),"convert timeformat=""%Y-%m-%dT%H:%M:%S"" ctime($field$)"
security_content_summariesonly,summariesonly=false allow_old_summaries=true fillnull_value=null
security_domains,inputlookup append=T security_domain_lookup | fillnull value=true is_expected | rename label as security_domain_label
security_group_api_calls,(eventName=AuthorizeSecurityGroupIngress OR eventName=CreateSecurityGroup OR eventName=DeleteSecurityGroup OR eventName=DescribeClusterSecurityGroups OR eventName=DescribeDBSecurityGroups OR eventName=DescribeSecurityGroupReferences OR eventName=DescribeSecurityGroups OR eventName=DescribeStaleSecurityGroups OR eventName=RevokeSecurityGroupIngress OR eventName=UpdateSecurityGroupRuleDescriptionsIngress)
selinuxconfig,"sourcetype=""*:SELinuxConfig"""
selinuxconfig(1),dest=$host$ `selinuxconfig`
selinuxconfig(2),`selinuxconfig($host$)` | head $limit$
sentinelone_agents,eventtype=sentinelone_base_index sourcetype=sentinelone:channel:agents
sentinelone_base_index,eventtype=sentinelone_base_index
sentinelone_data_present,"search eventtype=sentinelone_base_index sourcetype=sentinelone:* | stats dc(sourcetype) as count by host| eval total_failures = if(count > 0, ""0"", ""1""), severity_level = if(total_failures > 0, 3, 0), message =if(total_failures>0,""No Data Found"", ""Data Found"") | rename host as instance | fields - count"
sentinelone_management_groups(2),"inputlookup sentinelone_groups_lookup | search (host=""$mgmt_host$"") (siteName=""$siteName$"")| eval ""Type""=case(ad_query!=""null"", ""AD synchronised"", rank==""null"", ""Static"", rank!=""null"", ""Dynamic"" )"
sentinelone_management_hosts,"inputlookup sentinelone_lookup | stats count by host | append [makeresults | eval host =""sentinelone""]"
sentinelone_management_sites(1),inputlookup sentinelone_lookup | search $management_host$ | stats count by siteName
sentinelone_management_sites_management(1),inputlookup sentinelone_lookup | search $management_host$ | stats count by siteName
sentinelone_threats,eventtype=sentinelone_base_index sourcetype=sentinelone:channel:threats
sentinelone_zero_groups_lookup,inputlookup sentinelone_groups_lookup | eval blank=null() | where isnotnull(blank) | outputlookup sentinelone_groups_lookup
sentinelone_zero_lookup,inputlookup sentinelone_lookup | eval blank=null() | where isnotnull(blank) | outputlookup sentinelone_lookup
service,"tag=service tag=report | tags outputfield=tag | fillnull value=""unknown"" dest,service,start_mode,status,State"
service(1),dest=$host$ `service`
service(2),"`service($host$)` | transaction _time,dest | head $limit$"
service_intel,`service_intel_by_threat_key(*)`
service_intel_by_threat_key(1),"inputlookup append=T service_intel where threat_key=""$threat_key$"" | fillnull value=0 updated,disabled | `set_threat_collection_name(""service_intel"")` | `get_threat_attribution_weight(threat_key)`"
service_intel_stats,"dc(service),dc(service_file_hash),dc(service_dll_file_hash)"
serviceprincipalnames_discovery_with_powershell_filter,search *
serviceprincipalnames_discovery_with_setspn_filter,search *
services_escalate_exe_filter,search *
services_lolbas_execution_process_spawn_filter,search *
services_tracker,inputlookup append=T services_tracker | `get_asset(dest)` | `get_identity4events(dest_owner)`
services_tracker(1),"inputlookup append=T services_tracker where `tracker_trp($timefield$,$timefield$)` | `get_asset(dest)` | `get_identity4events(dest_owner)`"
session_search(1),"(All_Sessions.dest_ip=""$bestmatch$"" OR All_Sessions.dest_mac=""$bestmatch$"" OR All_Sessions.dest_nt_host=""$bestmatch$"" OR All_Sessions.dest_dns=""$bestmatch$"" OR All_Sessions.user=""$bestmatch$"")"
session_start,"tag=network tag=session tag=start | fillnull value=unknown dest_ip,dest_mac,dest_nt_host,dest_dns,user"
sessions,"tstats `summariesonly` count from datamodel=Network_Sessions.All_Sessions where nodename=All_Sessions.Session_Start by _time,All_Sessions.dest_ip,All_Sessions.dest_mac,All_Sessions.dest_nt_host,All_Sessions.dest_dns,All_Sessions.user span=1s | `drop_dm_object_name(""All_Sessions"")` | rename dest_ip as ip, dest_mac as mac, dest_nt_host as nt_host, dest_dns as dns | sort 0 - _time | eval startTime=_time | fields _time,ip,mac,nt_host,dns,user,startTime"
sessions(1),"tstats `summariesonly` count from datamodel=Network_Sessions.All_Sessions where nodename=All_Sessions.Session_Start `session_search(""$bestmatch$"")` by _time,All_Sessions.dest_ip,All_Sessions.dest_mac,All_Sessions.dest_nt_host,All_Sessions.dest_dns,All_Sessions.user span=1s | `drop_dm_object_name(""All_Sessions"")` | rename dest_ip as ip, dest_mac as mac, dest_nt_host as nt_host, dest_dns as dns | sort 0 - _time | eval startTime=_time | fields _time,ip,mac,nt_host,dns,user,startTime"
set_default_powershell_execution_policy_to_unrestricted_or_bypass_filter,search *
set_local_host,rest splunk_server=local /services/server/info | return host
set_threat_collection_name(1),"eval threat_collection=if(isnull(threat_collection),""$string$"",threat_collection)"
set_time,"`set_time(""-0s"")`"
set_time(1),"eval _time=relative_time(time(),""$qual$"")"
settags(1),eval tag=mvfilter(`settags_$domain$` OR `settags_governance`) | rename tag as orig_tag
settags_access,"tag LIKE ""%"""
settags_endpoint,"tag LIKE ""%"""
settags_governance,"(tag LIKE ""%"")"
settags_network,"tag LIKE ""%"""
shc_mode_appendcol,"appendcols [| rest splunk_server=local count=0 /services/shcluster/config/config | rename mode as shc_mode | table shc_mode] | filldown shc_mode | fillnull value=""disabled"" shc_mode"
shc_replication_change(1),"[| `host_equal_local`] index=_internal source=*conf.log (data.process=""pullFrom"" OR data.process=""acceptPush"") data.asset_uri{}=""$config$"" data.status=""applied"""
shim_database_file_creation_filter,search *
shim_database_installation_with_suspicious_parameters_filter,search *
short_lived_scheduled_task_filter,search *
short_lived_windows_accounts_filter,search *
silentcleanup_uac_bypass_filter,search *
sim_all_search_status,"status=""completed"" OR status=""success"" OR status=""skipped"" OR status=""continued"" OR status=""deferred"""
sim_audit_get_search_type,"eval search_type = case( match(search_id, ""^SummaryDirector_""), ""summarization"", match(savedsearch_name, ""^_ACCELERATE_""), ""acceleration"", match(search_id, ""^((rt_)?scheduler_|alertsmanager_)""), ""scheduled"", match(search_id, ""\d{10}\.\d+(_[0-9A-F]{8}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{4}-[0-9A-F]{12})?$""), ""ad hoc"", savedsearch_name="""",""ad hoc"", true(), ""other"") | eval search_type=case( match(savedsearch_name,""search\d""),""dashboard"", match(search_id,""rt_*""),""realtime"", match(search_id,""subsearch_*""),""subsearch"", true(),search_type)"
sim_audit_get_searches(1),"`sim_set_index_audit` host=$host$ action=search sourcetype=audittrail search_id=* | where NOT match(info, ""^granted|^denied"") | eval user = if(user=""n/a"", null(), user)"
sim_audit_get_searches_for_groups(1),"`sim_set_index_audit` action=search sourcetype=audittrail | where NOT match(info, ""^granted|^denied"") | eval user = if(user=""n/a"", null(), user) | `sim_audit_get_search_type` | eval search=if(isnull(savedsearch_name) OR savedsearch_name=="""", search, savedsearch_name)"
sim_build_forwarder_assets(1),"`sim_get_forwarder_tcpin` | stats latest(fwdType) as forwarder_type, latest(version) as version, latest(arch) as arch, latest(os) as os, max(_time) as last_connected, sum(kb) as new_sum_kb, sparkline(avg(tcp_KBps), $sparkline_span$) as new_avg_tcp_kbps_sparkline, avg(tcp_KBps) as new_avg_tcp_kbps, avg(tcp_eps) as new_avg_tcp_eps by guid, hostname"
sim_cache_activity_base,"(index=_internal host=`sim_indexer_url` sourcetype=splunkd source=/opt/splunk/var/log/splunk/splunkd.log* component=CacheManager TERM(status=succeeded) (TERM(action=download))) | rex field=cache_id ""(?<bucket_type>[^|]++)\|(?<index_name>[^~]++)\~[^|\""]++\|(?<bucket_extraId>[^|\""]*+)"" | search index_name!=""_*"" | stats sum(kb) as kb by action, index_name | eval total_capacity= [ search earliest=-10m index=_introspection sourcetype=splunk_disk_objects data.mount_point=/opt* host=`sim_indexer_url` | dedup host | stats sum(data.capacity) as MB | eval total_capacity=MB/1024 | return $total_capacity] | eval gb=(kb/1024)/1024, {action}=gb, cache_churn_percent=round((download/total_capacity)*100, 2) | eval status=case(cache_churn_percent <= 5, ""Conforming"", cache_churn_percent > 5 AND cache_churn_percent <=10, ""Warning"", cache_churn_percent > 10, ""Critical"") | fields - action kb gb total_capacity"
sim_cache_activity_detail,"| eval download = round(download,2) | sort - download | eval cache_churn_percent=cache_churn_percent.""%"", download=download."" GB"" | rename download AS ""Download"", index_name as ""Index"", cache_churn_percent as ""Cache churn percentage"", status as ""Status"""
sim_cache_activity_sum,"| stats count(eval(status=""Conforming"")) as conforming count(eval(status=""Warning"")) as warning count(eval(status=""Critical"")) as critical | fillnull critical warning conforming value=0 | eval indicator=""Cache transfer activity"""
sim_convert_runtime(1),"case( round($runtime$ / (3600*24) - 0.5) > 0, round($runtime$ / (3600*24) - 0.5).""d "".round(($runtime$ % (3600*24)) / 3600 - 0.5).""h "".round(($runtime$ % 3600) / 60 - 0.5).""min "".round($runtime$ % 60, 2).""s"", round(($runtime$ % (3600*24)) / 3600 - 0.5) > 0, round(($runtime$ % (3600*24)) / 3600 - 0.5).""h "".round(($runtime$ % 3600) / 60 - 0.5).""min "".round($runtime$ % 60, 2).""s"", round(($runtime$ % 3600) / 60 - 0.5) > 0, round(($runtime$ % 3600) / 60 - 0.5).""min "".round($runtime$ % 60, 2).""s"", 1 = 1, round($runtime$ % 60, 2).""s"" )"
sim_dbinspect_check,"rest splunk_server=local count=1 /services/server/info | stats max(version) as splV | rex field=splV ""^(?<major>\d+)\.(?<minor>\d+)(\.(?<point>\d+)|)(\.(?<fix>\d+)|)"" | eval 7xstack=if(major < 8 , 1, 0) | eval 8xstack=if(major > 7, 1, 0) | fields 7xstack, 8xstack"
sim_exclude_internal_monitoring_user,"NOT user IN(cmon_user,internal_observability)"
sim_exclude_internal_sourcetypes(1),NOT ($sourcetype$=splunkd OR $sourcetype$=splunkd_* OR $sourcetype$=splunk_* OR $sourcetype$=mongod OR $sourcetype$=kvstore OR $sourcetype$=http_event_collector_metrics)
sim_filter_stack(1),"rex field=host ""^[^.]+[.](?<event_stack>[^.]+)"" | where event_stack=""$local_stack$"""
sim_forwarder_eosl(1),"eval fwd_7_3_eos=relative_time(strptime(""22-Oct-2021"", ""%d-%b-%Y""), ""+1d@d""), fwd_8_0_eos=relative_time(strptime(""22-Oct-2021"", ""%d-%b-%Y""), ""+1d@d""), fwd_8_1_eos=relative_time(strptime(""19-Apr-2023"", ""%d-%b-%Y""), ""+1d@d""), fwd_8_2_eos=relative_time(strptime(""30-Sep-2023"", ""%d-%b-%Y""), ""+1d@d""), fwd_9_0_eos=relative_time(strptime(""14-Jun-2024"", ""%d-%b-%Y""), ""+1d@d""), fwd_9_1_eos=relative_time(strptime(""28-Jun-2025"", ""%d-%b-%Y""), ""+1d@d""), fwd_default_eos=relative_time(strptime(""01-Jan-1971"", ""%d-%b-%Y""), ""+1d@d"") | eval expTimestamp = case( match($fwd_version$, ""^7\.3""), fwd_7_3_eos, match($fwd_version$, ""^8\.0""), fwd_8_0_eos, match($fwd_version$, ""^8\.1""), fwd_8_1_eos, match($fwd_version$, ""^8\.2""), fwd_8_2_eos, match($fwd_version$, ""^9\.0""), fwd_9_0_eos, match($fwd_version$, ""^9\.1""), fwd_9_1_eos, 1==1, fwd_default_eos) | fields - fwd_*_eos"
sim_forwarder_status(1),"eval fwd_status=case( now() < $expiration$-3888000, ""Conforming"", now() <= $expiration$-1296000, ""Warning"", $expiration$ < now() + 1296000, ""Critical"", 1==1, ""Critical"")"
sim_get_all_triggered_alerts(1),"rest splunk_server=local /servicesNS/nobody/splunk_instance_monitoring/alerts/fired_alerts/- | rename savedsearch_name as title | join type=outer title [|rest splunk_server=local /servicesNS/nobody/splunk_instance_monitoring/saved/searches ] | rename title as ""Alert Name"" | join type=outer sid [rest splunk_server=local /servicesNS/nobody/splunk_instance_monitoring/search/jobs/] | eval now=relative_time(now(),""-$minute_offset$m"") | where trigger_time > now | rename trigger_time AS ""_time"", description as ""Description"", sid AS Instance | convert timeformat=""%b. %d, %Y %l:%M %p"" ctime(_time) AS ""Time Triggered"" | fields - _time | fields ""Alert Name"", Instance, ""Time Triggered"", ""Description"" | where 'Alert Name'=""SIM Alert - Missing Forwarders"""
sim_get_forwarder_info,inputlookup sim_forwarder_assets
sim_get_forwarder_tcpin,"`sim_set_index_internal` sourcetype=splunkd TERM(group=tcpin_connections) TERM(""cooked"") OR TERM(""cookedSSL"") (hostname!=`sim_hostname_url`)"
sim_get_local_stack,"rest /services/server/info splunk_server=local | fields splunk_server | rex field=splunk_server ""^[^.]+[.](?<stack>[^.]+)"""
sim_get_version,rest splunk_server=local count=1 /services/server/info | fields version
sim_health_heavy_fwd_base,"index=_internal sourcetype=splunkd source=*metrics.log* TERM(group=tcpin_connections) AND (TERM(fwdType=full) OR TERM(fwdType=lwf) OR TERM(fwdType=uf)) AND NOT TERM(hostname=`sim_hostname_url`) ``` Workaround to remove garbage metric data due to SPL-224063 ``` | eval field_size_raw = len(_raw) | where field_size_raw<1000 | rex max_match=0 ""\bfwdType=(?<fwdtype>\S+)\,"" | search (fwdtype=full OR fwdtype=lwf) | `sim_rename_forwarder_type(fwdtype)` | stats latest(sourceIp) AS customer_source_ip latest(_time) AS last_connected by hostname fwdtype version guid os arch | `sim_forwarder_eosl(version)` | `sim_forwarder_status(expTimestamp)`"
sim_health_high_mem_search_base,"tstats prestats=t max(data.mem_used) where index=_introspection AND (host=`sim_search_head_url` OR host=`sim_indexer_url`) AND sourcetype=splunk_resource_usage AND component::PerProcess by host data.search_props.app data.search_props.sid | tstats prestats=t append=t max(data.mem) where index=_introspection AND (host=`sim_search_head_url` OR host=`sim_indexer_url`) AND sourcetype=splunk_resource_usage AND component::HostWide by host | rename data.search_props.* as * | fillnull value=""N/A"" app | eventstats values(psrsvd_*_data.mem) as psrsvd_*_total_mem by host | stats max(data.mem_used) as mem_used, max(total_mem) as total_mem by host app sid | eval perc=round((mem_used*100)/total_mem,1) | eval mem_used= round(mem_used, 1)"
sim_health_skipped_search_base,"index=_internal host IN(`sim_search_head_url`) sourcetype=scheduler `sim_all_search_status` search_type!=""acceleration"" savedsearch_name!=""_ACCELERATE_*"" | `sim_savedsearch_dedup` | stats values(search_type) AS search_type, count(eval(`sim_all_search_status`)) AS total_exec, count(eval(status==""skipped"")) AS skipped_exec latest(reason) as most_recent_skipped_reason by app, savedsearch_name, user | eval skip_ratio = skipped_exec . "":"" . total_exec | eval percent_skipped = round((skipped_exec/total_exec)*100,1) | eval status=case(percent_skipped>25, ""Critical"", percent_skipped>10, ""Warning"", true(), ""Conforming"") | sort - percent_skipped"
sim_hostname_url,*.splunk*.*
sim_indexer_url,idx-`sim_hostname_url`
sim_licensing_limit,"index=summary source=""splunk-entitlements"" | rex field=host ""^[^.]+[.](?<stack>[^.]+)"" | search [| `sim_get_local_stack` | fields stack] | rex field=_raw ""^(?<timestring>\d\d/\d\d/\d{4}\s\d\d:\d\d:\d\d\s\+\d{4})"" | eval _time=strptime(timestring,""%m/%d/%Y %H:%M:%S %z"") | `sim_offset_utc_mins_relative_time(-1440)` | eval _time=relative_time(_time, rel_time) | bin _time span=1d | stats max(ingest_license) as ""license limit"" by _time"
sim_licensing_summary_base,"`sim_set_index_telemetry` `sim_set_license_manager` source=*license_usage_summary.log* TERM(""type=RolloverSummary"") | rex field=_raw ""^(?<timestring>\d\d-\d\d-\d{4}\s\d\d:\d\d:\d\d.\d{3}\s\+\d{4})"" | eval _time=strptime(timestring,""%m-%d-%Y %H:%M:%S.%N%z"") | `sim_offset_utc_mins_relative_time(-1440)` | eval _time=relative_time(_time, rel_time) | bin _time span=1d | stats latest(b) AS b by slave, pool, _time"
sim_licensing_summary_maxavg_no_split(2),"stats sum(b) AS volume by _time | stats avg(volume) AS avgVolume max(volume) AS maxVolume | eval maxVolumeGB=round(maxVolume/pow(2,30),3) | eval avgVolumeGB=round(avgVolume/pow(2,30),3) | rename avgVolumeGB AS ""average"" maxVolumeGB AS ""peak"" | eval ""All Pools"" = """" | fields ""All Pools"", ""average"", ""peak"""
sim_licensing_summary_no_split,"timechart span=1d sum(b) AS ""volume"" fixedrange=false | eval GB=round(volume/pow(2,30),3)"
sim_licensing_usage_all(1),"timechart span=1d eval(round((sum(b)/pow(2,30)),3)) AS Volume by $split_by_field_name$"
sim_licensing_usage_base,"`sim_set_index_internal` `sim_set_license_manager` source=*license_usage.log* type=""Usage"" | eval h=if(len(h)=0 OR isnull(h),""(SQUASHED)"",h) | eval s=if(len(s)=0 OR isnull(s),""(SQUASHED)"",s) | eval idx=if(len(idx)=0 OR isnull(idx),""(UNKNOWN)"",idx)"
sim_licensing_usage_maxavg_all(2),"bin _time span=1d | stats sum(b) AS volume by $split_by_field_name$, _time | stats avg(volume) AS avgVolume max(volume) AS maxVolume by $split_by_field_name$ | eval avgVolumeGB=round(avgVolume/pow(2,30),3) | eval maxVolumeGB=round(maxVolume/pow(2,30),3) | fields $split_by_field_name$, avgVolumeGB, maxVolumeGB | rename avgVolumeGB AS ""average"" maxVolumeGB AS ""peak"" $split_by_field_name$ AS ""$split_by_label$"" | sort 5 - ""average"""
sim_match_all_scheduled_search_types,"((data.search_props.type=""datamodel acceleration"" OR search_props.type=""datamodel acceleration"") OR (data.search_props.type=""report acceleration"" OR search_props.type=""report acceleration"") OR (data.search_props.type=""scheduled"" OR search_props.type=""scheduled"") OR (data.search_props.type=""summary indexing"" OR search_props.type=""summary indexing""))"
sim_offset_utc_mins_relative_time(1),"eval z=strftime(now(),""%z"") | eval m=substr(z,-2) | eval h=substr(z,2,2) | eval mzone=if(z != 0, ((h*60)+m)*(z/abs(z)), 0) | eval min_to_utc=$offset_mins$-mzone | eval rel_time=min_to_utc.""m"""
sim_re_build_forwarder_assets(1),"`sim_build_forwarder_assets($sparkline_span$)` | rename new_sum_kb as sum_kb, new_avg_tcp_kbps_sparkline as avg_tcp_kbps_sparkline, new_avg_tcp_kbps as avg_tcp_kbps, new_avg_tcp_eps as avg_tcp_eps | eval avg_tcp_kbps_sparkline = ""N/A"" | addinfo | eval status = if(isnull(sum_kb) or (sum_kb <= 0) or (last_connected < (info_max_time - 900)), ""missing"", ""active"") | eval sum_kb = round(sum_kb, 2) | eval avg_tcp_kbps = round(avg_tcp_kbps, 2) | eval avg_tcp_eps = round(avg_tcp_eps, 2) | fields guid, hostname, forwarder_type, version, arch, os, status, last_connected, sum_kb, avg_tcp_kbps_sparkline, avg_tcp_kbps, avg_tcp_eps | outputlookup sim_forwarder_assets"
sim_rename_forwarder_type(1),"eval $type$ = case($type$ == ""full"", ""Heavy Forwarder"", $type$ == ""uf"", ""Universal Forwarder"", 1 == 1, ""Light Forwarder"")"
sim_rename_introspection_fields,eval process = 'data.process' | eval args = 'data.args' | eval sid = 'data.search_props.sid' | eval elapsed = 'data.elapsed' | eval mem_used = 'data.mem_used' | eval mem = 'data.mem' | eval pct_memory = 'data.pct_memory' | eval app = 'data.search_props.app' | eval label = 'data.search_props.label' | eval type = 'data.search_props.type' | eval mode = 'data.search_props.mode' | eval user = 'data.search_props.user' | eval role = 'data.search_props.role'
sim_savedsearch_dedup,"fillnull value=""no_sid_yet"" sid | eval tuple=savedsearch_name . "";"" . tostring(round(relative_time(scheduled_time, ""@m""), 0))."":::"".sid.status | dedup tuple"
sim_scheduler_instance_search_concurrency_drilldown(3),"`sim_set_index_introspection` host=$host$ sourcetype=splunk_resource_usage component=PerProcess data.search_props.sid::* `sim_match_all_scheduled_search_types` | `sim_rename_introspection_fields` | where $concurrencySplitBy$==""$type$"" | stats latest(pid) as ""PID"", latest(ppid) as ""PPID"", latest(label) as Label, latest(provenance) as Provenance, latest(search_head) as ""Search Head"", latest(type) as Type, latest(user) as User, latest(app) as App, latest(mode) as Mode, latest(role) as Role, avg(pct_cpu) as avg_pct_cpu, max(mem_used) as ""Physical Memory Usage (MB)"", min(_time) as min_time, max(_time) as max_time, max(elapsed) as ""Elapsed Time"" by sid | eval avg_pct_cpu = round(avg_pct_cpu, 2) | `sim_time_format(min_time)` | `sim_time_format(max_time)` | rename avg_pct_cpu as ""Average CPU Usage (%)"", min_time as ""First Time Seen"", max_time as ""Last Time Seen"""
sim_search_head_url,sh-`sim_hostname_url`
sim_searchable_index_storage,"`sim_workload_license_usage_storage` | stats sum(size_GB) as ""Total"""
sim_set_bin,bin _time span=10s
sim_set_cluster_manager,(host=c0m1*.*splunk*.* OR `sim_set_si_host`)
sim_set_index_audit,index=_audit
sim_set_index_internal,index=_internal
sim_set_index_introspection,index=_introspection
sim_set_index_telemetry,index=_telemetry
sim_set_indexer,(host=idx*.*splunk*.* OR `sim_set_si_host`)
sim_set_license_manager,(host=*.*splunk*.* NOT host=sh*.*splunk*.*)
sim_set_search_head,(host=sh*.*splunk*.* OR `sim_set_si_host`)
sim_set_si_host,host=si*.*splunk*.*
sim_set_wlm(1),`sim_set_index_internal` $selected_host_scope$ sourcetype=wlm_*
sim_si_url,si-`sim_hostname_url`
sim_stack_license_svc(1),"index=summary source=""splunk-svc"" | `sim_filter_stack($local_stack$)` | stats max(stack_license_svc) as stack_license_svc"
sim_time_format(1),"eval $time$ = strftime($time$, ""%m/%d/%Y %H:%M:%S %z"")"
sim_timechart,timechart minspan=10s
sim_timechart_for_metrics_log,timechart minspan=30s
sim_universal_forwarder_base,"index=_internal sourcetype=splunkd source=*metrics.log* TERM(group=tcpin_connections) AND TERM(fwdType=uf) AND NOT TERM(hostname=`sim_hostname_url`) | eval field_size_raw = len(_raw) | where field_size_raw<1000 | rex max_match=0 ""\bfwdType=(?<fwdtype>\S+)\,"" | stats dc(hostname) as fwd_count by fwdtype version | `sim_forwarder_eosl(version)` | `sim_forwarder_status(expTimestamp)` | fields - expTimestamp"
sim_universal_forwarder_drilldown,"index=_internal sourcetype=splunkd source=*metrics.log* TERM(group=tcpin_connections) AND TERM(fwdType=uf) AND NOT TERM(hostname=`sim_hostname_url`) ``` Workaround to remove garbage metric data due to SPL-224063 ``` | eval field_size_raw = len(_raw) | where field_size_raw<1000 | rex max_match=0 ""\bfwdType=(?<fwdtype>\S+)\,"" | `sim_rename_forwarder_type(fwdtype)` | stats latest(sourceIp) AS customer_source_ip latest(_time) AS last_connected by hostname fwdtype version | `sim_forwarder_eosl(version)` | `sim_forwarder_status(expTimestamp)` | `sim_time_format(last_connected)`"
sim_workload_license_usage_storage,"index=_introspection host=`sim_search_head_url` component=DistributedIndexes | eval size_GB=(round('data.rawSizeBytes'/pow(2,30))) | rename data.idxName as ""Index Name"" | stats max(size_GB) as size_GB by ""Index Name"""
single_letter_process_on_endpoint_filter,search *
sistats_max_rename(2),"eval ""psrsvd_ct_$output$""=if(isnull('psrsvd_ct_$output$'),'psrsvd_ct_$input$','psrsvd_ct_$output$') | eval ""psrsvd_nc_$output$""=if(isnull('psrsvd_nc_$output$'),'psrsvd_nc_$input$','psrsvd_nc_$output$') | eval ""psrsvd_nx_$output$""=if(isnull('psrsvd_nx_$output$'),'psrsvd_nx_$input$','psrsvd_nx_$output$') | eval ""psrsvd_sx_$output$""=if(isnull('psrsvd_sx_$output$'),'psrsvd_sx_$input$','psrsvd_sx_$output$') | eval ""psrsvd_vt_$output$""=if(isnull('psrsvd_vt_$output$'),'psrsvd_vt_$input$','psrsvd_vt_$output$')"
sistats_min_rename(2),"eval ""psrsvd_ct_$output$""=if(isnull('psrsvd_ct_$output$'),'psrsvd_ct_$input$','psrsvd_ct_$output$') | eval ""psrsvd_nc_$output$""=if(isnull('psrsvd_nc_$output$'),'psrsvd_nc_$input$','psrsvd_nc_$output$') | eval ""psrsvd_nn_$output$""=if(isnull('psrsvd_nn_$output$'),'psrsvd_nn_$input$','psrsvd_nn_$output$') | eval ""psrsvd_sn_$output$""=if(isnull('psrsvd_sn_$output$'),'psrsvd_sn_$input$','psrsvd_sn_$output$') | eval ""psrsvd_vt_$output$""=if(isnull('psrsvd_vt_$output$'),'psrsvd_vt_$input$','psrsvd_vt_$output$')"
sistats_values_rename(2),"eval ""psrsvd_ct_$output$""=if(isnull('psrsvd_ct_$output$'),'psrsvd_ct_$input$','psrsvd_ct_$output$') | eval ""psrsvd_nc_$output$""=if(isnull('psrsvd_nc_$output$'),'psrsvd_nc_$input$','psrsvd_nc_$output$') | eval ""psrsvd_vm_$output$""=if(isnull('psrsvd_vm_$output$'),'psrsvd_vm_$input$','psrsvd_vm_$output$')"
slui_runas_elevated_filter,search *
slui_spawning_a_process_filter,search *
smartforecastviz(1),"eval _vars=""$v1$"""
smartforecastviz(2),"eval _vars=mvappend(""$v1$"", ""$v2$"")"
smartforecastviz(3),"eval _vars=mvappend(""$v1$"", ""$v2$"", ""$v3$"")"
smartforecastviz(4),"eval _vars=mvappend(""$v1$"", ""$v2$"", ""$v3$"", ""$v4$"")"
smartforecastviz(5),"eval _vars=mvappend(""$v1$"", ""$v2$"", ""$v3$"", ""$v4$"", ""$v5$"")"
smb_traffic_spike___mltk_filter,search *
smb_traffic_spike_filter,search *
sort_chart,`sort_chart(10)`
sort_chart(1),"addtotals fieldname=Total | eval Total=if(isnotnull(src_port),Total-src_port,Total) | eval Total=if(isnotnull(dest_port),Total-dest_port,Total) | sort $head$ - Total | fields - Total"
sort_chart(2),addtotals fieldname=Total $fields$ | sort $head$ - Total | fields - Total
sort_reviewstatus_groups,"eval sortorder=case(status_group==""New"",1,status_group==""Open"",2,status_group==""Closed"",3) | sort sortorder | fields - sortorder"
source-names-search(1),"eventtype=wineventlog_windows LogName=""$LogName$"" | stats count by SourceName | sort +SourceName"
spectre_and_meltdown_vulnerable_systems_filter,search *
spike_in_file_writes_filter,search *
splitColorIntoComponents(4),"| eval _color = $color$ | rex field=_color ""^#(?<_red>[0-9a-zA-Z]{2,2})(?<_green>[0-9a-zA-Z]{2,2})(?<_blue>[0-9a-zA-Z]{2,2})$"" | eval _red = tonumber(_red, 16), _green = tonumber(_green, 16), _blue = tonumber(_blue, 16) | eval $outfieldname_red$ = _red | eval $outfieldname_green$ = _green | eval $outfieldname_blue$ = _blue"
split_transport_dest_port(1),"rex field=""$field$"" ""(?<transport>[^/]+)/(?<port>\d+)"" | fillnull value=unknown transport | fillnull value=0 dest_port"
splitby(1),"eval _split_by=""$s$"""
splitby(2),"eval _split_by=mvappend(""$s1$"", ""$s2$"")"
splitby(3),"eval _split_by=mvappend(""$s1$"", ""$s2$"", ""$s3$"")"
splitby(4),"eval _split_by=mvappend(""$s1$"", ""$s2$"", ""$s3$"", ""$s4$"")"
splitby(5),"eval _split_by=mvappend(""$s1$"", ""$s2$"", ""$s3$"", ""$s4$"", ""$s5$"")"
splunk_account_discovery_drilldown_dashboard_disclosure_filter,search *
splunk_code_injection_via_custom_dashboard_leading_to_rce_filter,search *
splunk_command_and_scripting_interpreter_delete_usage_filter,search *
splunk_command_and_scripting_interpreter_risky_commands_filter,search *
splunk_command_and_scripting_interpreter_risky_spl_mltk_filter,search *
splunk_crash_log,(index=_internal AND sourcetype=splunkd_crash_log)
splunk_csrf_in_the_ssg_kvstore_client_endpoint_filter,search *
splunk_data_exfiltration_from_analytics_workspace_using_sid_query_filter,search *
splunk_digital_certificates_infrastructure_version_filter,search *
splunk_digital_certificates_lack_of_encryption_filter,search *
splunk_dos_via_dump_spl_command_filter,search *
splunk_dos_via_malformed_s2s_request_filter,search *
splunk_edit_user_privilege_escalation_filter,search *
splunk_endpoint_denial_of_service_dos_zip_bomb_filter,search *
splunk_enterprise_information_disclosure_filter,search *
splunk_http_response_splitting_via_rest_spl_command_filter,search *
splunk_identified_ssl_tls_certificates_filter,search *
splunk_improperly_formatted_parameter_crashes_splunkd_filter,search *
splunk_list_all_nonstandard_admin_accounts_filter,search *
splunk_low_privilege_user_can_view_hashed_splunk_password_filter,search *
splunk_path_traversal_in_splunk_app_for_lookup_file_edit_filter,search *
splunk_persistent_xss_via_url_validation_bypass_w_dashboard_filter,search *
splunk_process_injection_forwarder_bundle_downloads_filter,search *
splunk_protocol_impersonation_weak_encryption_configuration_filter,search *
splunk_protocol_impersonation_weak_encryption_selfsigned_filter,search *
splunk_protocol_impersonation_weak_encryption_simplerequest_filter,search *
splunk_python,index=_internal sourcetype=splunk_python
splunk_rbac_bypass_on_indexing_preview_rest_endpoint_filter,search *
splunk_rce_via_splunk_secure_gateway__splunk_mobile_alerts_feature_filter,search *
splunk_reflected_xss_in_the_templates_lists_radio_filter,search *
splunk_risky_command_abuse_disclosed_february_2023_filter,search *
splunk_stored_xss_via_data_model_objectname_field_filter,search *
splunk_unnecessary_file_extensions_allowed_by_lookup_table_uploads_filter,search *
splunk_user_enumeration_attempt_filter,search *
splunk_xss_in_monitoring_console_filter,search *
splunk_xss_in_save_table_dialog_header_in_search_page_filter,search *
splunk_xss_via_view_filter,search *
splunkd,index=_internal sourcetype=splunkd
splunkd_failed_auths,"index=_audit ""action=login attempt"" ""info=failed"""
splunkd_startmode,"`splunkd_startmode(""*"")`"
splunkd_startmode(1),`service($host$)` | search (app=Splunkd OR app=splunk)
splunkd_ui,index=_internal sourcetype=splunkd_ui_access
splunkd_utilization,"`splunkd_utilization(""*"")`"
splunkd_utilization(1),"`localprocesses($host$)` | search app=""*splunkd*"""
splunkd_web,index=_internal sourcetype=splunk_web_access
splunkd_webx,index=_internal sourcetype=splunk_web_access
splunkda,index=_internal sourcetype=splunkd_access
spoolsv_spawning_rundll32_filter,search *
spoolsv_suspicious_loaded_modules_filter,search *
spoolsv_suspicious_process_access_filter,search *
spoolsv_writing_a_dll___sysmon_filter,search *
spoolsv_writing_a_dll_filter,search *
spring4shell_payload_url_request_filter,search *
sql_injection_with_long_urls_filter,search *
sqlite_module_in_temp_folder_filter,search *
src_dest_tstats,"`src_dest_tstats(""*"")`"
src_dest_tstats(1),"tstats prestats=f local=false summariesonly=true allow_old_summaries=true count,values(All_Traffic.src_port), values(All_Traffic.dest_port), values(sourcetype) from datamodel=Network_Traffic.All_Traffic where All_Traffic.action=allowed by All_Traffic.src,All_Traffic.dest | `drop_dm_object_name(""All_Traffic"")` | `tstats` append=true count,values(sourcetype) from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.src,IDS_Attacks.dest | `drop_dm_object_name(""IDS_Attacks"")` | `tstats` append=true count,values(sourcetype) from datamodel=Web.Web by Web.src,Web.dest | `drop_dm_object_name(""Web"")` | rename ""Web.*"" as *, psrsvd_vm_All_Traffic.dest_port AS dest_port, psrsvd_vm_All_Traffic.src_port AS src_port, ""values(All_Traffic.src_port)"" AS src_port, ""values(All_Traffic.dest_port)"" AS dest_port, ""values(sourcetype)"" AS sourcetype | stats count,values(src_port), values(dest_port), values(sourcetype) as sourcetype by src,dest"
src_stream,source=stream*
src_tstats,"`src_tstats(""*"")`"
src_tstats(1),"`tstats` count,values(sourcetype),values(All_Traffic.user) from datamodel=Network_Traffic.All_Traffic where All_Traffic.action=$action$ by All_Traffic.src | eval src=if(isnull(src),'All_Traffic.src',src) | `sistats_values_rename(All_Traffic.user,user)` | `tstats` append=true count,values(sourcetype),values(IDS_Attacks.user) from datamodel=Intrusion_Detection.IDS_Attacks by IDS_Attacks.src | eval src=if(isnull(src),'IDS_Attacks.src',src) | `sistats_values_rename(IDS_Attacks.user,user)` | `tstats` append=true count,values(sourcetype),values(Web.user) from datamodel=Web.Web by Web.src | eval src=if(isnull(src),'Web.src',src) | `sistats_values_rename(Web.user,user)` | stats count,values(sourcetype) as sourcetype,values(user) as user by src"
sshdconfig,"sourcetype=""*:SSHDConfig"""
sshdconfig(1),dest=$host$ `sshdconfig`
sshdconfig(2),`sshdconfig($host$)` | head $limit$
ssl_certificates_with_punycode_filter,search *
standard_deviations,inputlookup append=T standard_deviations
stats2chart(1),"eval temp="""" | chart useother=`useother` first(count) over temp by $str_field$ | rename temp as count"
stdev(2),"eventstats min($intField$) as min_$intField$,max($intField$) as max_$intField$,sum($countField$) as total | eventstats sum(eval($intField$*$countField$/total)) as mean_$intField$ | eventstats sum(eval(pow($intField$-mean_$intField$,2)*$countField$)) as sumsq | eval stdev=sqrt(sumsq/(total-1)) | `get_stdev_index($intField$)` | eval stdev=if(isnull(stdev),0,stdev)"
stdev_desired_result(3),"eval ""$outField$""=($Z$*stdev)+'$mean$'"
steal_or_forge_authentication_certificates_behavior_identified_filter,search *
str_to_bool(1),"`str_to_bool($field$,$field$)`"
str_to_bool(2),"eval `str_to_bool_meval($inField$,$outField$)`"
str_to_bool_meval(1),"`str_to_bool_meval($field$,$field$)`"
str_to_bool_meval(2),"""$outField$""=case(match('$inField$', ""1|[Tt]|[Tt][Rr][Uu][Ee]""),""true"",match('$inField$', ""0|[Ff]|[Ff][Aa][Ll][Ss][Ee]""),""false"",1=1,'$inField$')"
stream_dns,sourcetype=stream:dns
stream_http,sourcetype=stream:http
stream_tcp,sourcetype=stream:tcp
summariesonly,summariesonly=`summariesonly_bool`
summariesonly_bool,TRUE
sunburst_correlation_dll_and_network_event_filter,search *
supernova_webshell_filter,search *
suppressed_notables,"`suppressed_notables(""*"")`"
suppressed_notables(1),`notable($search_name$)` | search `suppression`
suppression,(eventtype=notable_suppression-* OR suppression=*)
suppression_audit,"eventtype=suppression_audit | fillnull value=unknown suppression, action, status, signature, user"
suppression_audit-expired,"eventtype=suppression_audit-expired | fillnull value=unknown signature,suppression"
suppression_eventtypes,rest splunk_server=local count=0 /services/saved/eventtypes | search title=notable_suppression* | rename title as eventtype | `suppression_extract` | `get_suppression_start_time` | `get_suppression_end_time`
suppression_extract,"rex field=eventtype ""notable_suppression-(?<suppression>.+)"""
suspicious_changes_to_file_associations_filter,search *
suspicious_computer_account_name_change_filter,search *
suspicious_copy_on_system32_filter,search *
suspicious_curl_network_connection_filter,search *
suspicious_dllhost_no_command_line_arguments_filter,search *
suspicious_driver_loaded_path_filter,search *
suspicious_email___uba_anomaly_filter,search *
suspicious_email_attachment_extensions_filter,search *
suspicious_email_attachments,lookup update=true is_suspicious_file_extension_lookup file_name OUTPUT suspicious | search suspicious=true
suspicious_event_log_service_behavior_filter,search *
suspicious_file_write_filter,search *
suspicious_gpupdate_no_command_line_arguments_filter,search *
suspicious_icedid_rundll32_cmdline_filter,search *
suspicious_image_creation_in_appdata_folder_filter,search *
suspicious_java_classes_filter,search *
suspicious_kerberos_service_ticket_request_filter,search *
suspicious_linux_discovery_commands_filter,search *
suspicious_microsoft_workflow_compiler_rename_filter,search *
suspicious_microsoft_workflow_compiler_usage_filter,search *
suspicious_msbuild_path_filter,search *
suspicious_msbuild_rename_filter,search *
suspicious_msbuild_spawn_filter,search *
suspicious_mshta_child_process_filter,search *
suspicious_mshta_spawn_filter,search *
suspicious_plistbuddy_usage_filter,search *
suspicious_plistbuddy_usage_via_osquery_filter,search *
suspicious_powershell_command_line_arguments_filter,search *
suspicious_process_dns_query_known_abuse_web_services_filter,search *
suspicious_process_file_path_filter,search *
suspicious_process_with_discord_dns_query_filter,search *
suspicious_reg_exe_process_filter,search *
suspicious_regsvr32_register_suspicious_path_filter,search *
suspicious_rundll32_dllregisterserver_filter,search *
suspicious_rundll32_no_command_line_arguments_filter,search *
suspicious_rundll32_plugininit_filter,search *
suspicious_rundll32_rename_filter,search *
suspicious_rundll32_startw_filter,search *
suspicious_scheduled_task_from_public_directory_filter,search *
suspicious_searchprotocolhost_no_command_line_arguments_filter,search *
suspicious_sqlite3_lsquarantine_behavior_filter,search *
suspicious_ticket_granting_ticket_request_filter,search *
suspicious_wav_file_in_appdata_folder_filter,search *
suspicious_wevtutil_usage_filter,search *
suspicious_writes,"lookup suspicious_writes_lookup file as file_name OUTPUT note as ""Reference"" | search ""Reference"" != False"
suspicious_writes_to_system_volume_information_filter,search *
suspicious_writes_to_windows_recycle_bin_filter,search *
svchost_lolbas_execution_process_spawn_filter,search *
swap_if_tagged(3),"eval swapTmp='$second$' | eval ""$second$""=if('$tagField$'=""swap_$first$_$second$"", '$first$', '$second$') | eval ""$first$""=if('$tagField$'=""swap_$first$_$second$"", swapTmp, '$first$') | fields - swapTmp"
swap_resolved_domain(1),"eval ""$field$""=if(isnotnull(resolved_domain) AND resolved_domain!=""unknown"",resolved_domain,'$field$')"
sysmon,sourcetype=XmlWinEventLog:Microsoft-Windows-Sysmon/Operational OR source=XmlWinEventLog:Microsoft-Windows-Sysmon/Operational OR source=Syslog:Linux-Sysmon/Operational
system_info_gathering_using_dxdiag_application_filter,search *
system_information_discovery_detection_filter,search *
system_network_configuration_discovery_tools,"(process_name= ""arp.exe"" OR process_name= ""at.exe"" OR process_name= ""attrib.exe"" OR process_name= ""cscript.exe"" OR process_name= ""dsquery.exe"" OR process_name= ""hostname.exe"" OR process_name= ""ipconfig.exe"" OR process_name= ""mimikatz.exe"" OR process_name= ""nbstat.exe"" OR process_name= ""net.exe"" OR process_name= ""netsh.exe"" OR process_name= ""nslookup.exe"" OR process_name= ""ping.exe"" OR process_name= ""quser.exe"" OR process_name= ""qwinsta.exe"" OR process_name= ""reg.exe"" OR process_name= ""runas.exe"" OR process_name= ""sc.exe"" OR process_name= ""schtasks.exe"" OR process_name= ""ssh.exe"" OR process_name= ""systeminfo.exe"" OR process_name= ""taskkill.exe"" OR process_name= ""telnet.exe"" OR process_name= ""tracert.exe"" OR process_name=""wscript.exe"" OR process_name= ""xcopy.exe"")"
system_processes_run_from_unexpected_locations_filter,search *
system_update,"tag=system tag=update tag=status | tags outputfield=tag | fillnull value=unknown signature_id,signature,status,dest"
system_update_tracker,"tstats `summariesonly` max(_time) as _time,latest(Updates.status) as status,latest(Updates.dest_should_update) as dest_should_update from datamodel=Updates.Updates by Updates.dest,Updates.signature_id,Updates.vendor_product | `drop_dm_object_name(""Updates"")` | `get_update_signature` | sort - _time,dest,signature | fields _time,status,signature_id,signature,dest,dest_should_update"
system_user_discovery_with_query_filter,search *
system_user_discovery_with_whoami_filter,search *
system_version,"tag=system tag=version | tags outputfield=tag | fillnull value=unknown os | eval os=if(os==""unknown"",os_name."" "".os_release,os) | `os_normalization` | dedup dest"
tag2field(1),"eval ""is_$field$""=if(tag==""$field$"",""true"",""false"")"
tag2field_requires(1),"eval ""requires_$field$""=if(tag==""requires_$field$"",""true"",""false"")"
tag2field_should(1),"eval ""should_$field$""=if(tag==""should_$field$"",""true"",""false"")"
task-categories-search(2),"eventtype=wineventlog_windows LogName=""$LogName$"" SourceName=""$SourceName$"" | stats count by TaskCategory | sort +TaskCategory"
threat_artifacts_max,10000
threat_categories,`threat_group_intel` | stats count by threat_category | fields threat_category | sort + threat_category
threat_group_intel,"inputlookup append=T threat_group_intel | fillnull value=""undefined"" threat_group,threat_category"
threat_groups,`threat_group_intel` | stats count by threat_group | fields threat_group | sort + threat_group
threat_sources,`threat_group_intel` | fields source_id | dedup source_id | sort + source_id
threatintel_collection_keys,"inputlookup append=T threatintel_collection_key_lookup | dedup collection,key | sort + collection,key"
threatintel_domain_lookup(1),"`truncate_domain_dedup($source$)` | lookup update=true threatintel_by_domain value as ""$source$"" OUTPUTNEW | lookup update=true threatintel_by_domain value as ""$source$_domain"" OUTPUTNEW"
threatintel_multilookup(1),"lookup update=true threatintel_by_system value as ""$field$"" OUTPUTNEW | lookup update=true threatintel_by_cidr value as ""$field$"" OUTPUTNEW | `threatintel_domain_lookup($field$)` | eval threat_match_field=case(isnotnull(threat_match_field),threat_match_field,isnotnull('$field$') AND isnotnull(threat_collection_key),""$field$"",1=1,threat_match_field) | eval threat_match_value=case(isnotnull(threat_match_value),threat_match_value,isnotnull('$field$') AND isnotnull(threat_collection_key),'$field$',1=1,threat_match_value)"
threatintel_outputlookup(1),"`threatintel_outputlookup(""$field$"",""threatintel_by_$field$"")`"
threatintel_outputlookup(2),"`get_threat_download_status` | `threatintel_outputlookup_exclusions` | mvexpand ""$field$"" | where isnotnull('$field$') AND NOT '$field$'="""" AND NOT ('$field$' LIKE ""*%"" OR '$field$' LIKE ""%*"") | eval key=md5('threat_collection'.'_key'.'$field$'),threat_collection_key='_key',value=lower('$field$') | `threatintel_upsert($collection$)`"
threatintel_outputlookup_exclusions,"where NOT match(disabled, ""1|[Tt]|[Tt][Rr][Uu][Ee]"")"
threatintel_outputlookup_wildcard(1),"`threatintel_outputlookup_wildcard(""$field$"",""threatintel_by_$field$_wildcard"")`"
threatintel_outputlookup_wildcard(2),"`get_threat_download_status` | `threatintel_outputlookup_exclusions` | mvexpand ""$field$"" | where isnotnull('$field$') AND NOT '$field$'="""" AND ('$field$' LIKE ""*%"" OR '$field$' LIKE ""%*"") AND len('$field$')>=`threatintel_wildcard_minlength` | eval key=md5('threat_collection'.'_key'.'$field$'),threat_collection_key='_key',value=lower('$field$') | `threatintel_upsert($collection$)`"
threatintel_upsert(1),"table key,threat_collection,threat_collection_key,value | threatintelupsert collection=$collection$ | outputlookup append=T key_field=key $collection$ | threatintelbydelete collection=$collection$ | stats count"
threatintel_url_lookup(1),"lookup update=true threatintel_by_url value as ""$url$"" OUTPUTNEW | lookup update=true threatintel_by_url_wildcard value as ""$url$"" OUTPUTNEW"
threatintel_wildcard_minlength,3
tim_iocs_library,"inputlookup tim_iocs max=1000 | spath input=indicator_json | rename observable.value AS observable_value, observable.type as type, scoreContexts{}.sourceName as intel_sources, scoreContexts{}.passThroughScore.scoreName as passThroughScore_name, scoreContexts{}.passThroughScore.scoreValue as passThroughScore_value, userTags{} as observable_tags, submissionTags{} as intel_document_tags, attributes{}.type as attributes_type, attributes{}.value as attributes_value, processedAt as processed_at, priorityScore as priority_score, workflowId as workflow_id| eval relationships=mvzip(attributes_type,attributes_value, "" : ""), pass_through_score=mvzip(source_name, mvzip(passThroughScore_name,passThroughScore_value, "" : ""),"" - "")| fields id, observable_value, type, workflow_id, priority_score, intel_sources, pass_through_score, intel_document_tags, observable_tags, relationships, created, processed_at| dedup observable_value, workflow_id"
timeDiff,`timeDiff(_time)`
timeDiff(1),eval timeDiff=(time()-'$field$')
time_provider_persistence_registry_filter,search *
time_subsearch(2),"makeresults | eval search=""_time>"".floor(relative_time(time(),""$earliest$""))."" _time<"".floor(relative_time(time(),""$latest$"")) | table search"
time_sync,tag=time tag=synchronize
time_sync(1),tag=$action$ `time_sync`
top_1m_sites,cisco_top_one_million_sites
top_by_errors,addtotals fieldname=totalErrors | sort by -totalErrors| fields - totalErrors | head 8
tor_traffic_filter,search *
total_page_views,"`user_activity_base` | stats sum(Pageviews) as ""Total Pageviews"""
tracker_timerange_by_field(2),"`tracker_timerange_by_field($begin$, $end$, firstTime, lastTime)`"
tracker_timerange_by_field(4),"`make_ts_field($begin$, earliestQual)` | `make_ts_field($end$, latestQual)` | where ('$lastTime$'>earliestQual AND '$firstTime$'<latestQual) | fields - earliestQual, latestQual"
tracker_timerange_by_value(2),"`tracker_timerange_by_value($begin$, $end$, firstTime, lastTime)`"
tracker_timerange_by_value(4),"`make_ts_value($begin$, earliestQual)` | `make_ts_value($end$, latestQual)` | where ('$lastTime$'>earliestQual AND '$firstTime$'<latestQual) | fields - earliestQual, latestQual"
tracker_trp,"`tracker_trp(firstTime,lastTime)`"
tracker_trp(2),"[| makeresults | addinfo | eval search=""$begin$>="".if(isnotnull(info_min_time),info_min_time,0).if(isnull(info_max_time) OR info_max_time=""+Infinity"","""","" AND $end$<="".info_max_time) | return $search]"
transform_all_sai_groups,`transform_sai_groups(*)`
transform_sai_groups(1),"inputlookup em_groups where title=""$group_title$"" | makemv delim="","" filter | mvexpand filter | rex field=filter ""(?<dim>.*)=(?<val>.*)"" | stats values(val) as vals by title, dim | eval {dim}=vals | fields - dim, vals, filter | stats values(*) as * by title"
trickbot_named_pipe_filter,search *
trim(1),"eval ""$field$""=trim('$field$',"" "")"
truncate(2),"eval ""$field$""=if(length('$field$')>$length$, substr('$field$', 0, $length$) + ""..."", '$field$')"
truncate_domain(1),"`truncate_domain($source$, $source$)`"
truncate_domain(2),"eval SEGMENTS=split(ltrim('$source$', "".""), "".""),SEG1=mvindex(SEGMENTS, -1),SEG2=mvjoin(mvindex(SEGMENTS, -2, -1), "".""),SEG3=mvjoin(mvindex(SEGMENTS, -3, -1), "".""),SEG4=mvjoin(mvindex(SEGMENTS, -4, -1), ""."") | lookup mozilla_public_suffix_lookup domain AS SEG1 OUTPUTNEW length AS SEG1_LENGTH | lookup mozilla_public_suffix_lookup domain AS SEG2 OUTPUTNEW length AS SEG2_LENGTH | lookup mozilla_public_suffix_lookup domain AS SEG3 OUTPUTNEW length AS SEG3_LENGTH | lookup mozilla_public_suffix_lookup domain AS SEG4 OUTPUTNEW length AS SEG4_LENGTH | lookup cim_http_tld_lookup tld AS SEG1 OUTPUT tld AS TLD | eval TGT_LENGTH=coalesce(SEG4_LENGTH,SEG3_LENGTH,SEG2_LENGTH,SEG1_LENGTH, if(cidrmatch(""0.0.0.0/0"", '$source$'), if(`truncate_domain_allows_ips`==0, 4, 0), if(isnull(TLD), 2, 0))),SRC_LENGTH=mvcount(SEGMENTS),""$target$""=if(TGT_LENGTH==0, null, if(SRC_LENGTH>=TGT_LENGTH, mvjoin(mvindex(SEGMENTS, -TGT_LENGTH, -1), "".""), null)) | fields - TLD SEG1 SEG2 SEG3 SEG4 SEG1_LENGTH SEG2_LENGTH SEG3_LENGTH SEG4_LENGTH TGT_LENGTH SRC_LENGTH SEGMENTS"
truncate_domain_allows_ips,1
truncate_domain_dedup(1),"`truncate_domain_dedup($source$, $source$_domain)`"
truncate_domain_dedup(2),"`truncate_domain($source$, $target$)` | eval ""$target$""=if(""$target$""=""$source$"" OR '$target$'='$source$', null(), '$target$')"
truncate_search,"eval search=if(length(search) > 150, substr(search, 0, 150) + ""..."", search)"
tscollect(1),"`tscollect(""$namespace$"",""true"",""false"")`"
tscollect(2),"`tscollect($namespace$,$squashcase$,""false"")`"
tscollect(3),tscollect namespace=$namespace$ squashcase=$squashcase$ keepresults=$keepresults$
tstats,tstats prestats=true local=`tstats_local` `summariesonly`
tstats_local,FALSE
uac_bypass_mmc_load_unsigned_dll_filter,search *
uac_bypass_with_colorui_com_object_filter,search *
uitime(1),"`uitime($field$,""%m/%d/%Y %H:%M:%S"")`"
uitime(2),"fieldformat ""$field$""=strftime('$field$', ""$format$"")"
uncommon_processes,"lookup update=true lookup_uncommon_processes_default process_name as process_name outputnew uncommon_default,category_default,analytic_story_default,kill_chain_phase_default,mitre_attack_default | lookup update=true lookup_uncommon_processes_local process_name as process_name outputnew uncommon_local,category_local,analytic_story_local,kill_chain_phase_local,mitre_attack_local | eval uncommon = coalesce(uncommon_default, uncommon_local), analytic_story = coalesce(analytic_story_default, analytic_story_local), category=coalesce(category_default, category_local), kill_chain_phase=coalesce(kill_chain_phase_default, kill_chain_phase_local), mitre_attack=coalesce(mitre_attack_default, mitre_attack_local) | fields - analytic_story_default, analytic_story_local, category_default, category_local, kill_chain_phase_default, kill_chain_phase_local, mitre_attack_default, mitre_attack_local, uncommon_default, uncommon_local | search uncommon=true"
uncommon_processes_on_endpoint_filter,search *
unescape_simplexml(1),"| eval ""$field_name$"" = replace(replace(replace(replace(replace('$field_name$', ""&lt;"", ""<""), ""&gt;"", "">""), ""&quot;"", ""\""""), ""&amp;"", ""&""), ""&apos;"", ""'"")"
unescape_spl(1),"| eval ""$field_name$"" = replace('$field_name$',""\\\\(\\\\|\"")"",""\1"")"
uninstall_app_using_msiexec_filter,search *
unknown_process_using_the_kerberos_protocol_filter,search *
unload_sysmon_filter_driver_filter,search *
unloading_amsi_via_reflection_filter,search *
unprepend_alias_assets(1),"$subject$_asset_id as asset_id,$subject$_asset as asset,$subject$_asset_tag as asset_tag,$subject$_bunit as bunit,$subject$_category as category,$subject$_city as city,$subject$_country as country,$subject$_dns as dns,$subject$_ip as ip,$subject$_is_expected as is_expected,$subject$_lat as lat,$subject$_long as long,$subject$_mac as mac,$subject$_nt_host as nt_host,$subject$_owner as owner,$subject$_pci_domain as pci_domain,$subject$_priority as priority,$subject$_requires_av as requires_av,$subject$_should_timesync as should_timesync,$subject$_should_update as should_update"
unprepend_assets(1),rename `unprepend_alias_assets($subject$)`
unsigned_image_loaded_by_lsass_filter,search *
unsuccessful_netbackup_backups_filter,search *
unusual_number_of_computer_service_tickets_requested_filter,search *
unusual_number_of_kerberos_service_tickets_requested_filter,search *
unusual_number_of_remote_endpoint_authentication_events_filter,search *
unusually_long_command_line___mltk_filter,search *
unusually_long_command_line_filter,search *
unusually_long_content_type_length_filter,search *
update_startmode,"`update_startmode(""*"")`"
update_startmode(1),tag=update `service($host$)` | `tag2field_should(update)` | dedup dest
uptime,"tag=""uptime"" | dedup dest | tags outputfield=tag | `uptime2string(SystemUpTime,label)`"
uptime2string(2),"eval days_dec='$inField$'/86400 | eval days=floor(days_dec) | eval hours_dec=('$inField$'/3600)-(days*24) | eval hours=floor(hours_dec) | eval minutes_dec=('$inField$'/60)-(days*1440)-(hours*60) | eval minutes=floor(minutes_dec) | eval ""$outField$""=case(days==1,days."" day, "",days>0,days."" days, "",1==1,"""").case(hours=1,hours."" hour, "",hours>0,hours."" hours, "",1=1,"""").case(minutes=1,minutes."" minute"",minutes>0,minutes."" minutes"",1==1,"""").case('$inField$'==1,'$inField$'."" second"",'$inField$'>=0 AND '$inField$'<60,replace('$inField$',""^(\d+(\.\d)?).*$"",""\1"")."" seconds"",days=0 AND hours=0 AND ('$inField$'%60)=1,"", "".ceil('$inField$'%60)."" second"",days=0 AND hours=0 AND ('$inField$'%60)>0,"", "".ceil('$inField$'%60)."" seconds"",1=1,"""") | eval ""$outField$""=rtrim(rtrim('$outField$'), "","") | fields - days,hours,minutes"
uptime(1),dest=$host$ `uptime`
uptime(2),`uptime($host$)` | head $limit$
urgency,inputlookup append=T urgency_lookup
useother,TRUE
user_activity_base,"`sim_set_index_internal` `sim_set_search_head` sourcetype=splunk_web_access method=GET status=200 uri_path=""/*/app/*"" user!=cmon_user file!=""*.*"" | rex field=uri_path ""\/app\/(?<App>[^\/]+).*"" | rename user as ""User"" file as ""Page"" | stats count as Pageviews by User App Page"
user_discovery_with_env_vars_powershell_filter,search *
user_discovery_with_env_vars_powershell_script_block_filter,search *
user_intel,`user_intel_by_threat_key(*)`
user_intel_by_threat_key(1),"inputlookup append=T user_intel where threat_key=""$threat_key$"" | fillnull value=0 updated,disabled | `set_threat_collection_name(""user_intel"")` | `get_threat_attribution_weight(threat_key)`"
user_intel_stats,dc(user)
useraccount_minimal_lifetime,3600
useraccounts,"sourcetype=""*:UserAccounts"" | tags outputfield=tag | rex field=password ""\*(?<password>)"""
useraccounts(1),dest=$host$ `useraccounts`
useraccounts(2),"`useraccounts($host$)` | transaction _time,dest | head $limit$"
useraccounts_tracker,inputlookup append=T useraccounts_tracker | `get_identity4events(user)` | `get_asset(dest)` | `get_identity4events(dest_owner)`
usn_journal_deletion_filter,search *
vbscript_execution_using_wscript_app_filter,search *
vendor_product_tracker(1),"inputlookup append=T cim_vendor_product_tracker | search model=""$model$"""
verclsid_clsid_execution_filter,search *
view_activity,"`view_activity(""*"",""*"")`"
view_activity(1),"`view_activity(""$app$"",""*"")`"
view_activity(2),"index=_internal sourcetype=splunk_web_access method=GET status=200 | rex ""GET /[^/]+/app/(?<app>[^/ ?]+)/(?<view>[^/ ?]+)"" | search app=""$app$"" view=""$view$"""
vmware_aria_operations_exploit_attempt_filter,search *
vmware_server_side_template_injection_hunt_filter,search *
vmware_workspace_one_freemarker_server_side_template_injection_filter,search *
vuln_signature_reference,inputlookup append=T vuln_signature_reference
vuln_signature_reference(1),"inputlookup append=T vuln_signature_reference where `tracker_trp($timefield$,$timefield$)`"
vulnerability,"tag=vulnerability tag=report | tags outputfield=tag | fillnull value=unknown category,severity,signature,dest,os | fillnull value="""" cvss | `get_vendor_product`"
vulnerability_tracker,inputlookup append=T vulnerability_tracker | `get_asset(dest)`
vulnerability_tracker(1),"inputlookup append=T vulnerability_tracker where `tracker_trp($timefield$,$timefield$)` | `get_asset(dest)`"
w3wp_spawning_shell_filter,search *
wbadmin_delete_system_backups_filter,search *
wbemprox_com_object_execution_filter,search *
web_fraud___account_harvesting_filter,search *
web_fraud___anomalous_user_clickspeed_filter,search *
web_fraud___password_sharing_across_accounts_filter,search *
web_jsp_request_via_url_filter,search *
web_servers_executing_suspicious_processes_filter,search *
web_spring4shell_http_request_class_module_filter,search *
web_spring_cloud_function_functionrouter_filter,search *
wermgr_process_connecting_to_ip_check_web_services_filter,search *
wermgr_process_create_executable_file_filter,search *
wermgr_process_spawned_cmd_or_powershell_process_filter,search *
wget_download_and_bash_execution_filter,search *
whois,"index=whois sourcetype=Whois:* | fillnull value=unknown created,domain,expires,nameservers,registrant,registrar,resolved_domain,retrieved,updated"
windows_access_token_manipulation_sedebugprivilege_filter,search *
windows_access_token_manipulation_winlogon_duplicate_token_handle_filter,search *
windows_access_token_winlogon_duplicate_handle_in_uncommon_path_filter,search *
windows_ad_adminsdholder_acl_modified_filter,search *
windows_ad_cross_domain_sid_history_addition_filter,search *
windows_ad_domain_controller_audit_policy_disabled_filter,search *
windows_ad_domain_controller_promotion_filter,search *
windows_ad_domain_replication_acl_addition_filter,search *
windows_ad_dsrm_account_changes_filter,search *
windows_ad_dsrm_password_reset_filter,search *
windows_ad_privileged_account_sid_history_addition_filter,search *
windows_ad_replication_request_initiated_by_user_account_filter,search *
windows_ad_replication_request_initiated_from_unsanctioned_location_filter,search *
windows_ad_replication_service_traffic_filter,search *
windows_ad_rogue_domain_controller_network_activity_filter,search *
windows_ad_same_domain_sid_history_addition_filter,search *
windows_ad_serviceprincipalname_added_to_domain_account_filter,search *
windows_ad_short_lived_domain_account_serviceprincipalname_filter,search *
windows_ad_short_lived_domain_controller_spn_attribute_filter,search *
windows_ad_short_lived_server_object_filter,search *
windows_ad_sid_history_attribute_modified_filter,search *
windows_adfind_exe_filter,search *
windows_administrative_shares_accessed_on_multiple_hosts_filter,search *
windows_admon_default_group_policy_object_modified_filter,search *
windows_admon_group_policy_object_created_filter,search *
windows_apache_benchmark_binary_filter,search *
windows_app_layer_protocol_qakbot_namedpipe_filter,search *
windows_app_layer_protocol_wermgr_connect_to_namedpipe_filter,search *
windows_application_layer_protocol_rms_radmin_tool_namedpipe_filter,search *
windows_autostart_execution_lsass_driver_registry_modification_filter,search *
windows_binary_proxy_execution_mavinject_dll_injection_filter,search *
windows_boot_or_logon_autostart_execution_in_startup_folder_filter,search *
windows_bootloader_inventory_filter,search *
windows_cached_domain_credentials_reg_query_filter,search *
windows_change_default_file_association_for_no_file_ext_filter,search *
windows_clipboard_data_via_get_clipboard_filter,search *
windows_com_hijacking_inprocserver32_modification_filter,search *
windows_command_and_scripting_interpreter_hunting_path_traversal_filter,search *
windows_command_and_scripting_interpreter_path_traversal_exec_filter,search *
windows_command_shell_dcrat_forkbomb_payload_filter,search *
windows_command_shell_fetch_env_variables_filter,search *
windows_computer_account_created_by_computer_account_filter,search *
windows_computer_account_requesting_kerberos_ticket_filter,search *
windows_computer_account_with_spn_filter,search *
windows_connhost_exe_started_forcefully_filter,search *
windows_create_local_account_filter,search *
windows_credential_dumping_lsass_memory_createdump_filter,search *
windows_credentials_from_password_stores_chrome_extension_access_filter,search *
windows_credentials_from_password_stores_chrome_localstate_access_filter,search *
windows_credentials_from_password_stores_chrome_login_data_access_filter,search *
windows_credentials_from_password_stores_query_filter,search *
windows_credentials_in_registry_reg_query_filter,search *
windows_curl_download_to_suspicious_path_filter,search *
windows_curl_upload_to_remote_destination_filter,search *
windows_data_destruction_recursive_exec_files_deletion_filter,search *
windows_defacement_modify_transcodedwallpaper_file_filter,search *
windows_default_group_policy_object_modified_filter,search *
windows_default_group_policy_object_modified_with_gpme_filter,search *
windows_defender_exclusion_registry_entry_filter,search *
windows_deleted_registry_by_a_non_critical_process_file_path_filter,search *
windows_disable_change_password_through_registry_filter,search *
windows_disable_lock_workstation_feature_through_registry_filter,search *
windows_disable_logoff_button_through_registry_filter,search *
windows_disable_memory_crash_dump_filter,search *
windows_disable_notification_center_filter,search *
windows_disable_shutdown_button_through_registry_filter,search *
windows_disable_windows_event_logging_disable_http_logging_filter,search *
windows_disable_windows_group_policy_features_through_registry_filter,search *
windows_disableantispyware_registry_filter,search *
windows_diskcryptor_usage_filter,search *
windows_diskshadow_proxy_execution_filter,search *
windows_dism_remove_defender_filter,search *
windows_dll_search_order_hijacking_hunt_filter,search *
windows_dll_search_order_hijacking_hunt_with_sysmon_filter,search *
windows_dll_search_order_hijacking_with_iscsicpl_filter,search *
windows_dll_side_loading_in_calc_filter,search *
windows_dll_side_loading_process_child_of_calc_filter,search *
windows_dns_gather_network_info_filter,search *
windows_dnsadmins_new_member_added_filter,search *
windows_dotnet_binary_in_non_standard_path_filter,search *
windows_driver_inventory_filter,search *
windows_driver_load_non_standard_path_filter,search *
windows_drivers_loaded_by_signature_filter,search *
windows_enable_win32_scheduledjob_via_registry_filter,search *
windows_event_for_service_disabled_filter,search *
windows_event_log_cleared_filter,search *
windows_event_triggered_image_file_execution_options_injection_filter,search *
windows_excessive_disabled_services_event_filter,search *
windows_exchange_autodiscover_ssrf_abuse_filter,search *
windows_execute_arbitrary_commands_with_msdt_filter,search *
windows_exfiltration_over_c2_via_invoke_restmethod_filter,search *
windows_exfiltration_over_c2_via_powershell_uploadstring_filter,search *
windows_export_certificate_filter,search *
windows_file_share_discovery_with_powerview_filter,search *
windows_file_transfer_protocol_in_non_common_process_path_filter,search *
windows_file_without_extension_in_critical_folder_filter,search *
windows_files_and_dirs_access_rights_modification_via_icacls_filter,search *
windows_findstr_gpp_discovery_filter,search *
windows_gather_victim_host_information_camera_filter,search *
windows_gather_victim_identity_sam_info_filter,search *
windows_gather_victim_network_info_through_ip_check_web_services_filter,search *
windows_get_adcomputer_unconstrained_delegation_discovery_filter,search *
windows_group_policy_object_created_filter,search *
windows_hidden_schedule_task_settings_filter,search *
windows_hide_notification_features_through_registry_filter,search *
windows_high_file_deletion_frequency_filter,search *
windows_hijack_execution_flow_version_dll_side_load_filter,search *
windows_hosts_file_modification_filter,search *
windows_hunting_system_account_targeting_lsass_filter,search *
windows_identify_protocol_handlers_filter,search *
windows_iis_components_add_new_module_filter,search *
windows_iis_components_get_webglobalmodule_module_query_filter,search *
windows_iis_components_module_failed_to_load_filter,search *
windows_iis_components_new_module_added_filter,search *
windows_impair_defense_add_xml_applocker_rules_filter,search *
windows_impair_defense_delete_win_defender_context_menu_filter,search *
windows_impair_defense_delete_win_defender_profile_registry_filter,search *
windows_impair_defense_deny_security_software_with_applocker_filter,search *
windows_impair_defenses_disable_hvci_filter,search *
windows_impair_defenses_disable_win_defender_auto_logging_filter,search *
windows_indirect_command_execution_via_forfiles_filter,search *
windows_indirect_command_execution_via_pcalua_filter,search *
windows_indirect_command_execution_via_series_of_forfiles_filter,search *
windows_information_discovery_fsutil_filter,search *
windows_ingress_tool_transfer_using_explorer_filter,search *
windows_input_capture_using_credential_ui_dll_filter,search *
windows_installutil_credential_theft_filter,search *
windows_installutil_in_non_standard_path_filter,search *
windows_installutil_remote_network_connection_filter,search *
windows_installutil_uninstall_option_filter,search *
windows_installutil_uninstall_option_with_network_filter,search *
windows_installutil_url_in_command_line_filter,search *
windows_iso_lnk_file_creation_filter,search *
windows_java_spawning_shells_filter,search *
windows_kerberos_local_successful_logon_filter,search *
windows_krbrelayup_service_creation_filter,search *
windows_large_number_of_computer_service_tickets_requested_filter,search *
windows_lateral_tool_transfer_remcom_filter,search *
windows_ldifde_directory_object_behavior_filter,search *
windows_linked_policies_in_adsi_discovery_filter,search *
windows_local_administrator_credential_stuffing_filter,search *
windows_mail_protocol_in_non_common_process_path_filter,search *
windows_masquerading_explorer_as_child_process_filter,search *
windows_mimikatz_binary_execution_filter,search *
windows_mimikatz_crypto_export_file_extensions_filter,search *
windows_modify_registry_auto_minor_updates_filter,search *
windows_modify_registry_auto_update_notif_filter,search *
windows_modify_registry_default_icon_setting_filter,search *
windows_modify_registry_disable_toast_notifications_filter,search *
windows_modify_registry_disable_win_defender_raw_write_notif_filter,search *
windows_modify_registry_disable_windefender_notifications_filter,search *
windows_modify_registry_disable_windows_security_center_notif_filter,search *
windows_modify_registry_disabling_wer_settings_filter,search *
windows_modify_registry_disallow_windows_app_filter,search *
windows_modify_registry_do_not_connect_to_win_update_filter,search *
windows_modify_registry_no_auto_reboot_with_logon_user_filter,search *
windows_modify_registry_no_auto_update_filter,search *
windows_modify_registry_qakbot_binary_data_registry_filter,search *
windows_modify_registry_reg_restore_filter,search *
windows_modify_registry_regedit_silent_reg_import_filter,search *
windows_modify_registry_suppress_win_defender_notif_filter,search *
windows_modify_registry_tamper_protection_filter,search *
windows_modify_registry_updateserviceurlalternate_filter,search *
windows_modify_registry_usewuserver_filter,search *
windows_modify_registry_wuserver_filter,search *
windows_modify_registry_wustatusserver_filter,search *
windows_modify_show_compress_color_and_info_tip_registry_filter,search *
windows_mof_event_triggered_execution_via_wmi_filter,search *
windows_moveit_transfer_writing_aspx_filter,search *
windows_msexchange_management_mailbox_cmdlet_usage_filter,search *
windows_mshta_execution_in_registry_filter,search *
windows_msiexec_dllregisterserver_filter,search *
windows_msiexec_remote_download_filter,search *
windows_msiexec_spawn_discovery_command_filter,search *
windows_msiexec_unregister_dllregisterserver_filter,search *
windows_msiexec_with_network_connections_filter,search *
windows_multi_hop_proxy_tor_website_query_filter,search *
windows_multiple_disabled_users_failed_to_authenticate_wth_kerberos_filter,search *
windows_multiple_invalid_users_fail_to_authenticate_using_kerberos_filter,search *
windows_multiple_invalid_users_failed_to_authenticate_using_ntlm_filter,search *
windows_multiple_users_fail_to_authenticate_wth_explicitcredentials_filter,search *
windows_multiple_users_failed_to_authenticate_from_host_using_ntlm_filter,search *
windows_multiple_users_failed_to_authenticate_from_process_filter,search *
windows_multiple_users_failed_to_authenticate_using_kerberos_filter,search *
windows_multiple_users_remotely_failed_to_authenticate_from_host_filter,search *
windows_ngrok_reverse_proxy_usage_filter,search *
windows_nirsoft_advancedrun_filter,search *
windows_nirsoft_utilities_filter,search *
windows_non_system_account_targeting_lsass_filter,search *
windows_odbcconf_hunting_filter,search *
windows_odbcconf_load_dll_filter,search *
windows_odbcconf_load_response_file_filter,search *
windows_office_product_spawning_msdt_filter,search *
windows_papercut_ng_spawn_shell_filter,search *
windows_password_managers_discovery_filter,search *
windows_phishing_pdf_file_executes_url_link_filter,search *
windows_phishing_recent_iso_exec_registry_filter,search *
windows_possible_credential_dumping_filter,search *
windows_powershell_add_module_to_global_assembly_cache_filter,search *
windows_powershell_cryptography_namespace_filter,search *
windows_powershell_disable_http_logging_filter,search *
windows_powershell_export_certificate_filter,search *
windows_powershell_export_pfxcertificate_filter,search *
windows_powershell_get_ciminstance_remote_computer_filter,search *
windows_powershell_iis_components_webglobalmodule_usage_filter,search *
windows_powershell_import_applocker_policy_filter,search *
windows_powershell_scheduletask_filter,search *
windows_powershell_wmi_win32_scheduledjob_filter,search *
windows_powersploit_gpp_discovery_filter,search *
windows_powerview_ad_access_control_list_enumeration_filter,search *
windows_powerview_constrained_delegation_discovery_filter,search *
windows_powerview_kerberos_service_ticket_request_filter,search *
windows_powerview_spn_discovery_filter,search *
windows_powerview_unconstrained_delegation_discovery_filter,search *
windows_private_keys_discovery_filter,search *
windows_process_injection_into_notepad_filter,search *
windows_process_injection_of_wermgr_to_known_browser_filter,search *
windows_process_injection_remote_thread_filter,search *
windows_process_injection_wermgr_child_process_filter,search *
windows_process_injection_with_public_source_path_filter,search *
windows_process_with_namedpipe_commandline_filter,search *
windows_processes_killed_by_industroyer2_malware_filter,search *
windows_protocol_tunneling_with_plink_filter,search *
windows_proxy_via_netsh_filter,search *
windows_proxy_via_registry_filter,search *
windows_query_registry_browser_list_application_filter,search *
windows_query_registry_reg_save_filter,search *
windows_query_registry_uninstall_program_list_filter,search *
windows_raccine_scheduled_task_deletion_filter,search *
windows_rapid_authentication_on_multiple_hosts_filter,search *
windows_rasautou_dll_execution_filter,search *
windows_raw_access_to_disk_volume_partition_filter,search *
windows_raw_access_to_master_boot_record_drive_filter,search *
windows_rdp_connection_successful_filter,search *
windows_registry_bootexecute_modification_filter,search *
windows_registry_certificate_added_filter,search *
windows_registry_delete_task_sd_filter,search *
windows_registry_modification_for_safe_mode_persistence_filter,search *
windows_regsvr32_renamed_binary_filter,search *
windows_remote_access_software_brc4_loaded_dll_filter,search *
windows_remote_access_software_hunt_filter,search *
windows_remote_access_software_rms_registry_filter,search *
windows_remote_assistance_spawning_process_filter,search *
windows_remote_create_service_filter,search *
windows_remote_service_rdpwinst_tool_execution_filter,search *
windows_remote_services_allow_rdp_in_firewall_filter,search *
windows_remote_services_allow_remote_assistance_filter,search *
windows_remote_services_rdp_enable_filter,search *
windows_replication_through_removable_media_filter,search *
windows_root_domain_linked_policies_discovery_filter,search *
windows_rundll32_webdav_request_filter,search *
windows_rundll32_webdav_with_network_connection_filter,search *
windows_scheduled_task_created_via_xml_filter,search *
windows_scheduled_task_with_highest_privileges_filter,search *
windows_schtasks_create_run_as_system_filter,search *
windows_screen_capture_via_powershell_filter,search *
windows_security_account_manager_stopped_filter,search *
windows_security_support_provider_reg_query_filter,search *
windows_server_software_component_gacutil_install_to_gac_filter,search *
windows_service_create_kernel_mode_driver_filter,search *
windows_service_create_remcomsvc_filter,search *
windows_service_create_sliverc2_filter,search *
windows_service_create_with_tscon_filter,search *
windows_service_created_with_suspicious_service_path_filter,search *
windows_service_created_within_public_path_filter,search *
windows_service_creation_on_remote_endpoint_filter,search *
windows_service_creation_using_registry_entry_filter,search *
windows_service_deletion_in_registry_filter,search *
windows_service_initiation_on_remote_endpoint_filter,search *
windows_service_stop_by_deletion_filter,search *
windows_service_stop_via_net__and_sc_application_filter,search *
windows_service_stop_win_updates_filter,search *
windows_shells,(Processes.process_name=cmd.exe OR Processes.process_name=powershell.exe OR Processes.process_name=pwsh.exe OR Processes.process_name=sh.exe OR Processes.process_name=bash.exe OR Processes.process_name=wscript.exe OR Processes.process_name=cscript.exe)
windows_snake_malware_file_modification_crmlog_filter,search *
windows_snake_malware_kernel_driver_comadmin_filter,search *
windows_snake_malware_registry_modification_wav_openwithprogids_filter,search *
windows_snake_malware_service_create_filter,search *
windows_spearphishing_attachment_connect_to_none_ms_office_domain_filter,search *
windows_spearphishing_attachment_onenote_spawn_mshta_filter,search *
windows_special_privileged_logon_on_multiple_hosts_filter,search *
windows_steal_authentication_certificates_certificate_issued_filter,search *
windows_steal_authentication_certificates_certificate_request_filter,search *
windows_steal_authentication_certificates_certutil_backup_filter,search *
windows_steal_authentication_certificates_cryptoapi_filter,search *
windows_steal_authentication_certificates_cs_backup_filter,search *
windows_steal_authentication_certificates_export_certificate_filter,search *
windows_steal_authentication_certificates_export_pfxcertificate_filter,search *
windows_steal_or_forge_kerberos_tickets_klist_filter,search *
windows_system_binary_proxy_execution_compiled_html_file_decompile_filter,search *
windows_system_discovery_using_ldap_nslookup_filter,search *
windows_system_discovery_using_qwinsta_filter,search *
windows_system_file_on_disk_filter,search *
windows_system_logoff_commandline_filter,search *
windows_system_network_config_discovery_display_dns_filter,search *
windows_system_network_connections_discovery_netsh_filter,search *
windows_system_reboot_commandline_filter,search *
windows_system_script_proxy_execution_syncappvpublishingserver_filter,search *
windows_system_shutdown_commandline_filter,search *
windows_system_time_discovery_w32tm_delay_filter,search *
windows_system_user_discovery_via_quser_filter,search *
windows_terminating_lsass_process_filter,search *
windows_unusual_count_of_disabled_users_failed_auth_using_kerberos_filter,search *
windows_unusual_count_of_invalid_users_fail_to_auth_using_kerberos_filter,search *
windows_unusual_count_of_invalid_users_failed_to_auth_using_ntlm_filter,search *
windows_unusual_count_of_users_fail_to_auth_wth_explicitcredentials_filter,search *
windows_unusual_count_of_users_failed_to_auth_using_kerberos_filter,search *
windows_unusual_count_of_users_failed_to_authenticate_from_process_filter,search *
windows_unusual_count_of_users_failed_to_authenticate_using_ntlm_filter,search *
windows_unusual_count_of_users_remotely_failed_to_auth_from_host_filter,search *
windows_user_execution_malicious_url_shortcut_file_filter,search *
windows_valid_account_with_never_expires_password_filter,search *
windows_vulnerable_3cx_software_filter,search *
windows_vulnerable_driver_loaded_filter,search *
windows_winlogon_with_public_network_connection_filter,search *
windows_wmi_impersonate_token_filter,search *
windows_wmi_process_and_service_list_filter,search *
windows_wmi_process_call_create_filter,search *
winevent_scheduled_task_created_to_spawn_shell_filter,search *
winevent_scheduled_task_created_within_public_path_filter,search *
winevent_windows_task_scheduler_event_action_started_filter,search *
wineventlog_application,"eventtype=wineventlog_application OR source=""XmlWinEventLog:Application"""
wineventlog_security,eventtype=wineventlog_security OR Channel=security OR source=XmlWinEventLog:Security
wineventlog_system,eventtype=wineventlog_system
wineventlog_task_scheduler,"source=""WinEventLog:Microsoft-Windows-TaskScheduler/Operational"""
winhlp32_spawning_a_process_filter,search *
winrm_spawning_a_process_filter,search *
winword_spawning_cmd_filter,search *
winword_spawning_powershell_filter,search *
winword_spawning_windows_script_host_filter,search *
wmi,"sourcetype=""wineventlog:microsoft-windows-wmi-activity/operational"""
wmi_permanent_event_subscription___sysmon_filter,search *
wmi_permanent_event_subscription_filter,search *
wmi_recon_running_process_or_services_filter,search *
wmi_temporary_event_subscription_filter,search *
wmic_group_discovery_filter,search *
wmic_noninteractive_app_uninstallation_filter,search *
wmic_xsl_execution_via_url_filter,search *
wmiprsve_lolbas_execution_process_spawn_filter,search *
wrap(2),"rex field=""$field$"" max_match=0 ""(?<$field$>.{1,$length$})"""
wscript_or_cscript_suspicious_child_process_filter,search *
wsmprovhost_lolbas_execution_process_spawn_filter,search *
wsreset_uac_bypass_filter,search *
xmrig_driver_loaded_filter,search *
xsl_script_execution_with_wmic_filter,search *
zeek_rpc,"index=zeek sourcetype=""zeek:rpc:json"""
zeek_ssl,"index=zeek sourcetype=""zeek:ssl:json"""
zeek_x509,"sourcetype=""zeek:x509:json"""
zeek_x509_certificate_with_punycode_filter,search *
zipexpand_threat_matches,"eval intelzip=mvzip(threat_collection,threat_collection_key,""@@""), intelzip=mvzip(intelzip,threat_key,""@@""), intelzip=mvzip(intelzip,weight,""@@"") | fields - threat_collection,threat_collection_key,threat_key,weight | mvexpand intelzip | rex field=intelzip ""(?<threat_collection>.+?)@@(?<threat_collection_key>.+?)@@(?<threat_key>.+?)@@(?<weight>.+)"" | eval weight=if(isnum(weight),weight,null()) | fields - intelzip"